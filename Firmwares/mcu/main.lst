$0000: $940C:  L: goto $1C77
$0001: $1C77:  
$0002: $9518:  L: RETI
$0003: $0000:  L: NOP
$0004: $9518:  L: RETI
$0005: $0000:  L: NOP
$0006: $9518:  L: RETI
$0007: $0000:  L: NOP
$0008: $9518:  L: RETI
$0009: $0000:  L: NOP
$000A: $9518:  L: RETI
$000B: $0000:  L: NOP
$000C: $9518:  L: RETI
$000D: $0000:  L: NOP
$000E: $9518:  L: RETI
$000F: $0000:  L: NOP
$0010: $9518:  L: RETI
$0011: $0000:  L: NOP
$0012: $9518:  L: RETI
$0013: $0000:  L: NOP
$0014: $9518:  L: RETI
$0015: $0000:  L: NOP
$0016: $9518:  L: RETI
$0017: $0000:  L: NOP
$0018: $9518:  L: RETI
$0019: $0000:  L: NOP
$001A: $9518:  L: RETI
$001B: $0000:  L: NOP
$001C: $9518:  L: RETI
$001D: $0000:  L: NOP
$001E: $9518:  L: RETI
$001F: $0000:  L: NOP
$0020: $940C:  L: goto $71
$0021: $0071:  
$0022: $9518:  L: RETI
$0023: $0000:  L: NOP
$0024: $940C:  L: goto $1A7
$0025: $01A7:  
$0026: $940C:  L: goto $202
$0027: $0202:  
$0028: $9518:  L: RETI
$0029: $0000:  L: NOP
$002A: $9518:  L: RETI
$002B: $0000:  L: NOP
$002C: $9518:  L: RETI
$002D: $0000:  L: NOP
$002E: $9518:  L: RETI
$002F: $0000:  L: NOP
$0030: $940C:  L: goto $661
$0031: $0661:  
$0032: $9518:  L: RETI
$0033: $0000:  L: NOP
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          V: _Wait_ms_
               F: r16:Word ->  ...
$0034: $930F:     r16 ->
$0035: $931F:     r17 ->
-----          L: 
               F: (1000*CPU_Clock_Frequency/1000000-(9+8)-2)/4 -> r16:Word  ...
$0036: $E90B:     $9B -> r16
$0037: $E01F:     $0F -> r17
-----          L: 
               C: if (r16:Word --) then goto $0038 ...
$0038: $5001:     r16 - $01
$0039: $4010:     r17 - $00 -
$003A: $F7E9:     if (Z=0) then goto $38
$003B: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$003C: $0000:  F: NOP (NOP)
-----          L: 
               F: -> r16:Word  ...
$003D: $911F:     -> r17
$003E: $910F:     -> r16
-----          L: 
               F: r16:Word ->  ...
$003F: $930F:     r16 ->
$0040: $931F:     r17 ->
-----          L: 
               F: (1000*CPU_Clock_Frequency/1000000-(4+8)-2)/4 -> r16:Word  ...
$0041: $E90C:     $9C -> r16
$0042: $E01F:     $0F -> r17
-----          L: 
               C: if (r16:Word --) then goto $0043 ...
$0043: $5001:     r16 - $01
$0044: $4010:     r17 - $00 -
$0045: $F7E9:     if (Z=0) then goto $43
$0046: $0000:  F: NOP (NOP)
-----          L: 
-----          L: 
-----          L: 
$0047: $0000:  F: NOP (NOP)
-----          L: 
$0048: $0000:  F: NOP (NOP)
-----          L: 
               F: -> r16:Word  ...
$0049: $911F:     -> r17
$004A: $910F:     -> r16
               C: if (r16:Word --) then goto $003F ...
$004B: $5001:     r16 - $01
$004C: $4010:     r17 - $00 -
$004D: $F789:     if (Z=0) then goto $3F
$004E: $0000:  F: NOP (NOP)
$004F: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\PWM.alg    ***********
-----          V: _PWM_Event_Cyclic_action
$0050: $932F:  F: r18 -> (Temp ->)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0051: $D06A:  F: rcall $BC (_EX_Key_Cyclic_Call)
-----          L: 
-----          L: 
$0052: $D1F8:  F: rcall $24B (_STimer_Cyclic_Call)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\PWM.alg    ***********
-----          L: 
-----          L: 
$0053: $912F:  F: -> r18 (-> Temp)
$0054: $9508:  F: RET (ret)
-----          V: _PWM_Init
-----          L: 
-----          L: 
$0055: $9A25:  F: 1 -> p$04.5 (1 -> DDR_PWM_0)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0056: $E003:  S: $03 -> r16 ($03->r16)
$0057: $BD04:  S: r16 -> p$24 (r16->TCCR0A)
$0058: $E00A:  S: $0A -> r16 ($0A->r16)
$0059: $BD05:  S: r16 -> p$25 (r16->TCCR0B)
               F: CPU_Clock_Frequency/PWM_FREQUENCY/8/256 -> OCR0A  ...
$005A: $E40E:     $4E -> r16
$005B: $BD07:     r16 -> p$27
-----          L: 
$005C: $E001:  S: $01 -> r16 ($01->r16)
$005D: $9300:  S: r16 -> [$006E] (r16->TIMSK0)
$005E: $006E:  
               F: 1 -> TOIE0  ...
$005F: $9100:     [$006E] -> r16
$0060: $006E:  
$0061: $6001:     r16 ! $01
$0062: $9300:     r16 -> [$006E]
$0063: $006E:  
-----          L: 
$0064: $9508:  F: RET (ret)
-----          V: _PWM_All_Levels_Off
               F: Z ->  ...
$0065: $93EF:     r30 ->
$0066: $93FF:     r31 ->
$0067: $E000:  F: $00 -> r16 (0 -> r16)
$0068: $E011:  F: $01 -> r17 (PWM_LINE_NUMB -> r17)
               F: @PWM_Level -> Z  ...
$0069: $E0E0:     $00 -> r30
$006A: $E0F1:     $01 -> r31
-----          L: 
$006B: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (r17 --) then goto $006B ...
$006C: $951A:     r17 --
$006D: $F7E9:     if (Z=0) then goto $6B
               F: -> Z  ...
$006E: $91FF:     -> r31
$006F: $91EF:     -> r30
$0070: $9508:  F: RET (ret)
-----          V: Timer_0_Overflow
$0071: $930F:  F: r16 -> (r16 ->)
$0072: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0073: $B70F:     p$3F -> r16
$0074: $930F:     r16 ->
-----          L: 
-----          L: 
$0075: $9110:  F: [$0101] -> r17 (PWM_Pos -> r17)
$0076: $0101:  
$0077: $9513:  F: r17 ++ (r17 ++)
$0078: $9310:  F: r17 -> [$0101] (r17 -> PWM_Pos)
$0079: $0101:  
               C: if (r17 = 255) then goto $00A7 ...
$007A: $3F1F:     r17 = $FF
$007B: $F159:     if (Z=1) then goto $A7
-----          L: 
$007C: $9100:  F: [$0100] -> r16 (PWM_Level[0] -> r16)
$007D: $0100:  
$007E: $1710:  F: r17 = r16 (r17 = r16)
$007F: $F008:  C: if (C=1) then goto $81 (C = 0)
$0080: $982D:  F: 0 -> p$05.5 (0 -> Port_PWM_0)
$0081: $F408:  C: if (C=0) then goto $83 (C = 1)
$0082: $9A2D:  F: 1 -> p$05.5 (1 -> Port_PWM_0)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
               F: Z ->  ...
$0083: $93EF:     r30 ->
$0084: $93FF:     r31 ->
               F: PWM_Effect_Counter -> Z  ...
$0085: $91E0:     [$0102] -> r30
$0086: $0102:  
$0087: $91F0:     [$0103] -> r31
$0088: $0103:  
$0089: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z -> PWM_Effect_Counter  ...
$008A: $93E0:     r30 -> [$0102]
$008B: $0102:  
$008C: $93F0:     r31 -> [$0103]
$008D: $0103:  
-----          L: 
$008E: $9100:  F: [$05FB] -> r16 (Effect_Result_Speed -> r16)
$008F: $05FB:  
$0090: $9500:  F: | r16 (|r16)
$0091: $2711:  F: ^ r17 (^r17)
               F: << r16:Word  ...
$0092: $0F00:     << r16
$0093: $1F11:     << r17 <
               F: r16:Word + #b00011111  ...
$0094: $5E01:     r16 - $E1
$0095: $4F1F:     r17 - $FF -
-----          L: 
               C: if (Z < r16:Word) then goto $00A0 ...
$0096: $17E0:     r30 = r16
$0097: $07F1:     r31 = r17=
$0098: $F038:     if ( < ) then goto $A0
               F: 0 -> Z  ...
$0099: $E0E0:     $00 -> r30
$009A: $E0F0:     $00 -> r31
               F: Z -> PWM_Effect_Counter  ...
$009B: $93E0:     r30 -> [$0102]
$009C: $0102:  
$009D: $93F0:     r31 -> [$0103]
$009E: $0103:  
-----          L: 
$009F: $6031:  F: r19 ! $01 (1 -> F_Disp)
-----          L: 
-----          L: 
               F: -> Z  ...
$00A0: $91FF:     -> r31
$00A1: $91EF:     -> r30
-----          L: 
-----          L: 
               F: -> SREG  ...
$00A2: $910F:     -> r16
$00A3: $BF0F:     r16 -> p$3F
$00A4: $911F:  F: -> r17 (-> r17)
$00A5: $910F:  F: -> r16 (-> r16)
$00A6: $9518:  F: RETI (reti)
-----          V: 
$00A7: $DFA8:  F: rcall $50 (_PWM_Event_Cyclic_action)
-----          L: 
$00A8: $CFF9:  J: goto $A2 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\RND.alg    ***********
-----          V: _RND_Next
$00A9: $9100:  F: [$0104] -> r16 (RND -> r16)
$00AA: $0104:  
$00AB: $0F00:  F: << r16 (<<r16)
$00AC: $F02B:  C: if (V=1) then goto $B2 (V=1)
$00AD: $F00D:  C: if (H=1) then goto $AF (H=1)
-----          L: 
$00AE: $9503:  F: r16 ++ (r16++)
-----          L: 
$00AF: $9300:  F: r16 -> [$0104] (r16 -> RND)
$00B0: $0104:  
$00B1: $9508:  F: RET (ret)
-----          V: 
$00B2: $F3DD:  C: if (H=1) then goto $AE (H=1)
$00B3: $CFFB:  J: goto $AF (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\EX_Key.alg    ***********
-----          V: _EX_Key_Init
$00B4: $9A5A:  F: 1 -> p$0B.2 (1 -> Port_EX_Key_0)
-----          L: 
$00B5: $9A5B:  F: 1 -> p$0B.3 (1 -> Port_EX_Key_1)
-----          L: 
$00B6: $9A5C:  F: 1 -> p$0B.4 (1 -> Port_EX_Key_2)
-----          L: 
$00B7: $9A40:  F: 1 -> p$08.0 (1 -> Port_EX_Key_3)
-----          L: 
$00B8: $9A41:  F: 1 -> p$08.1 (1 -> Port_EX_Key_4)
-----          L: 
$00B9: $9A42:  F: 1 -> p$08.2 (1 -> Port_EX_Key_5)
-----          L: 
$00BA: $9A43:  F: 1 -> p$08.3 (1 -> Port_EX_Key_6)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$00BB: $9508:  F: RET (ret)
-----          V: _EX_Key_Cyclic_Call
$00BC: $9100:  F: [$0105] -> r16 (EX_Key_Dreb_Cnt[0] -> r16)
$00BD: $0105:  
$00BE: $994A:  C: if (p$09.2=0 then SKIP (Pin_EX_Key_0 = 1)
$00BF: $C016:  C: goto $D6 (RJMP) (Pin_EX_Key_0 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $00E1 ...
$00C0: $3001:     r16 = $01
$00C1: $F0F9:     if (Z=1) then goto $E1
$00C2: $9503:  F: r16 ++ (r16 ++)
$00C3: $9300:  F: r16 -> [$0105] (r16 -> EX_Key_Dreb_Cnt[0])
$00C4: $0105:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00E1 ...
$00C5: $3001:     r16 = $01
$00C6: $F4D1:     if (Z=0) then goto $E1
-----          L: 
               F: 1 -> EX_Key_Encoder_Hold  ...
$00C7: $E001:     $01 -> r16
$00C8: $9300:     r16 -> [$010D]
$00C9: $010D:  
-----          L: 
               C: if (Memu_Level=0) then goto $00D2 ...
$00CA: $9100:     [$062B] -> r16
$00CB: $062B:  
$00CC: $3000:     r16 = $00
$00CD: $F021:     if (Z=1) then goto $D2
               F: ENTER->Menu_actFlag  ...
$00CE: $E002:     $02 -> r16
$00CF: $9300:     r16 -> [$063B]
$00D0: $063B:  
$00D1: $C003:  J: goto $D5 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: MCLICK->Menu_actFlag  ...
$00D2: $EF0E:     $FE -> r16
$00D3: $9300:     r16 -> [$063B]
$00D4: $063B:  
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\EX_Key.alg    ***********
-----          L: 
$00D5: $C00B:  J: goto $E1 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $00E1 ...
$00D6: $3000:     r16 = $00
$00D7: $F049:     if (Z=1) then goto $E1
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00DD ...
$00D8: $3001:     r16 = $01
$00D9: $F419:     if (Z=0) then goto $DD
-----          L: 
               F: 0 -> EX_Key_Encoder_Hold  ...
$00DA: $E000:     $00 -> r16
$00DB: $9300:     r16 -> [$010D]
$00DC: $010D:  
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[0]  ...
$00DD: $E000:     $00 -> r16
$00DE: $9300:     r16 -> [$0105]
$00DF: $0105:  
$00E0: $C000:  J: goto $E1 (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
$00E1: $9100:  F: [$0106] -> r16 (EX_Key_Dreb_Cnt[1] -> r16)
$00E2: $0106:  
$00E3: $994B:  C: if (p$09.3=0 then SKIP (Pin_EX_Key_1 = 1)
$00E4: $C011:  C: goto $F6 (RJMP) (Pin_EX_Key_1 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $00FE ...
$00E5: $3001:     r16 = $01
$00E6: $F0B9:     if (Z=1) then goto $FE
$00E7: $9503:  F: r16 ++ (r16 ++)
$00E8: $9300:  F: r16 -> [$0106] (r16 -> EX_Key_Dreb_Cnt[1])
$00E9: $0106:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00FE ...
$00EA: $3001:     r16 = $01
$00EB: $F491:     if (Z=0) then goto $FE
-----          L: 
-----          L: 
               C: if (Memu_Level -= 0) then goto $00F3 ...
$00EC: $9100:     [$062B] -> r16
$00ED: $062B:  
$00EE: $3000:     r16 = $00
$00EF: $F419:     if (Z=0) then goto $F3
$00F0: $940E:  F: CALL $113A (_Menu_Main_Move)
$00F1: $113A:  
$00F2: $C002:  J: goto $F5 (RJMP)
-----          L: 
$00F3: $940E:  F: CALL $1159 (_Menu_Regular_Move)
$00F4: $1159:  
-----          L: 
$00F5: $C008:  J: goto $FE (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $00FE ...
$00F6: $3000:     r16 = $00
$00F7: $F031:     if (Z=1) then goto $FE
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $00FA ...
$00F8: $3001:     r16 = $01
$00F9: $F401:     if (Z=0) then goto $FA
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[1]  ...
$00FA: $E000:     $00 -> r16
$00FB: $9300:     r16 -> [$0106]
$00FC: $0106:  
$00FD: $C000:  J: goto $FE (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
$00FE: $9100:  F: [$0107] -> r16 (EX_Key_Dreb_Cnt[2] -> r16)
$00FF: $0107:  
$0100: $994C:  C: if (p$09.4=0 then SKIP (Pin_EX_Key_2 = 1)
$0101: $C00B:  C: goto $10D (RJMP) (Pin_EX_Key_2 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $0118 ...
$0102: $3001:     r16 = $01
$0103: $F0A1:     if (Z=1) then goto $118
$0104: $9503:  F: r16 ++ (r16 ++)
$0105: $9300:  F: r16 -> [$0107] (r16 -> EX_Key_Dreb_Cnt[2])
$0106: $0107:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0118 ...
$0107: $3001:     r16 = $01
$0108: $F479:     if (Z=0) then goto $118
-----          L: 
               F: 1 -> EX_Key_Encoder_Flag  ...
$0109: $E001:     $01 -> r16
$010A: $9300:     r16 -> [$010C]
$010B: $010C:  
-----          L: 
$010C: $C00B:  J: goto $118 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $0118 ...
$010D: $3000:     r16 = $00
$010E: $F049:     if (Z=1) then goto $118
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0114 ...
$010F: $3001:     r16 = $01
$0110: $F419:     if (Z=0) then goto $114
-----          L: 
               F: 0 -> EX_Key_Encoder_Flag  ...
$0111: $E000:     $00 -> r16
$0112: $9300:     r16 -> [$010C]
$0113: $010C:  
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[2]  ...
$0114: $E000:     $00 -> r16
$0115: $9300:     r16 -> [$0107]
$0116: $0107:  
$0117: $C000:  J: goto $118 (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
$0118: $9100:  F: [$0108] -> r16 (EX_Key_Dreb_Cnt[3] -> r16)
$0119: $0108:  
$011A: $9930:  C: if (p$06.0=0 then SKIP (Pin_EX_Key_3 = 1)
$011B: $C008:  C: goto $124 (RJMP) (Pin_EX_Key_3 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $012C ...
$011C: $3001:     r16 = $01
$011D: $F071:     if (Z=1) then goto $12C
$011E: $9503:  F: r16 ++ (r16 ++)
$011F: $9300:  F: r16 -> [$0108] (r16 -> EX_Key_Dreb_Cnt[3])
$0120: $0108:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $012C ...
$0121: $3001:     r16 = $01
$0122: $F449:     if (Z=0) then goto $12C
-----          L: 
-----          L: 
$0123: $C008:  J: goto $12C (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $012C ...
$0124: $3000:     r16 = $00
$0125: $F031:     if (Z=1) then goto $12C
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0128 ...
$0126: $3001:     r16 = $01
$0127: $F401:     if (Z=0) then goto $128
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[3]  ...
$0128: $E000:     $00 -> r16
$0129: $9300:     r16 -> [$0108]
$012A: $0108:  
$012B: $C000:  J: goto $12C (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
$012C: $9100:  F: [$0109] -> r16 (EX_Key_Dreb_Cnt[4] -> r16)
$012D: $0109:  
$012E: $9931:  C: if (p$06.1=0 then SKIP (Pin_EX_Key_4 = 1)
$012F: $C008:  C: goto $138 (RJMP) (Pin_EX_Key_4 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $0140 ...
$0130: $3001:     r16 = $01
$0131: $F071:     if (Z=1) then goto $140
$0132: $9503:  F: r16 ++ (r16 ++)
$0133: $9300:  F: r16 -> [$0109] (r16 -> EX_Key_Dreb_Cnt[4])
$0134: $0109:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0140 ...
$0135: $3001:     r16 = $01
$0136: $F449:     if (Z=0) then goto $140
-----          L: 
-----          L: 
$0137: $C008:  J: goto $140 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $0140 ...
$0138: $3000:     r16 = $00
$0139: $F031:     if (Z=1) then goto $140
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $013C ...
$013A: $3001:     r16 = $01
$013B: $F401:     if (Z=0) then goto $13C
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[4]  ...
$013C: $E000:     $00 -> r16
$013D: $9300:     r16 -> [$0109]
$013E: $0109:  
$013F: $C000:  J: goto $140 (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
$0140: $9100:  F: [$010A] -> r16 (EX_Key_Dreb_Cnt[5] -> r16)
$0141: $010A:  
$0142: $9932:  C: if (p$06.2=0 then SKIP (Pin_EX_Key_5 = 1)
$0143: $C008:  C: goto $14C (RJMP) (Pin_EX_Key_5 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $0154 ...
$0144: $3001:     r16 = $01
$0145: $F071:     if (Z=1) then goto $154
$0146: $9503:  F: r16 ++ (r16 ++)
$0147: $9300:  F: r16 -> [$010A] (r16 -> EX_Key_Dreb_Cnt[5])
$0148: $010A:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0154 ...
$0149: $3001:     r16 = $01
$014A: $F449:     if (Z=0) then goto $154
-----          L: 
-----          L: 
$014B: $C008:  J: goto $154 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $0154 ...
$014C: $3000:     r16 = $00
$014D: $F031:     if (Z=1) then goto $154
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0150 ...
$014E: $3001:     r16 = $01
$014F: $F401:     if (Z=0) then goto $150
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[5]  ...
$0150: $E000:     $00 -> r16
$0151: $9300:     r16 -> [$010A]
$0152: $010A:  
$0153: $C000:  J: goto $154 (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
$0154: $9100:  F: [$010B] -> r16 (EX_Key_Dreb_Cnt[6] -> r16)
$0155: $010B:  
$0156: $9933:  C: if (p$06.3=0 then SKIP (Pin_EX_Key_6 = 1)
$0157: $C008:  C: goto $160 (RJMP) (Pin_EX_Key_6 = 1)
               C: if (r16 = EX_KEY_DREB_ITER) then goto $0168 ...
$0158: $3001:     r16 = $01
$0159: $F071:     if (Z=1) then goto $168
$015A: $9503:  F: r16 ++ (r16 ++)
$015B: $9300:  F: r16 -> [$010B] (r16 -> EX_Key_Dreb_Cnt[6])
$015C: $010B:  
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0168 ...
$015D: $3001:     r16 = $01
$015E: $F449:     if (Z=0) then goto $168
-----          L: 
-----          L: 
$015F: $C008:  J: goto $168 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $0168 ...
$0160: $3000:     r16 = $00
$0161: $F031:     if (Z=1) then goto $168
               C: if (r16 -= EX_KEY_DREB_ITER) then goto $0164 ...
$0162: $3001:     r16 = $01
$0163: $F401:     if (Z=0) then goto $164
-----          L: 
-----          L: 
-----          L: 
               F: 0 -> EX_Key_Dreb_Cnt[6]  ...
$0164: $E000:     $00 -> r16
$0165: $9300:     r16 -> [$010B]
$0166: $010B:  
$0167: $C000:  J: goto $168 (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: End_EX_Test
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0168: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\UART.alg    ***********
-----          V: _UART_Event_Transmit_Buffer_Empty
-----          L: 
-----          L: 
$0169: $9508:  F: RET (ret)
-----          V: _UART_Event_Received_string
-----          L: 
$016A: $932F:  F: r18 -> (Temp ->)
               F: Y ->  ...
$016B: $93CF:     r28 ->
$016C: $93DF:     r29 ->
$016D: $940E:  F: CALL $17DE (_wlParse_do)
$016E: $17DE:  
               F: -> Y  ...
$016F: $91DF:     -> r29
$0170: $91CF:     -> r28
$0171: $912F:  F: -> r18 (-> Temp)
-----          L: 
-----          L: 
$0172: $9508:  F: RET (ret)
-----          V: _UART_Event_Transmit_Buffer_Overflow
$0173: $9478:  F: 1 -> I (1 -> I)
-----          L: 
-----          L: 
               C: if (Z = UART_Transmit_OUT_Buffer_Pointer) then goto $0174 ...
$0174: $9110:     [$0515] -> r17
$0175: $0515:  
$0176: $17E1:     r30 = r17
$0177: $9110:     [$0516] -> r17
$0178: $0516:  
$0179: $07F1:     r31 = r17=
$017A: $F3C9:     if (Z=1) then goto $174
$017B: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
-----          L: 
-----          L: 
$017C: $9508:  F: RET (ret)
-----          V: _UART_Event_Received_byte
-----          L: 
-----          L: 
$017D: $9508:  F: RET (ret)
-----          V: to_UART
-----          L: 
               C: if (UDRE0 = 0) then goto $017E ...
$017E: $9100:     [$00C0] -> r16
$017F: $00C0:  
$0180: $FF05:     if (r16.5=1 then SKIP
$0181: $CFFC:     goto $17E (RJMP)
-----          L: 
$0182: $9310:  F: r17 -> [$00C6] (r17 -> UDR0)
$0183: $00C6:  
$0184: $9508:  F: RET (ret)
-----          V: _UART_Init
-----          L: 
$0185: $E000:  S: $00 -> r16 ($00->r16)
$0186: $9300:  S: r16 -> [$00C5] (r16->UBRR0H)
$0187: $00C5:  
$0188: $E008:  S: $08 -> r16 ($08->r16)
$0189: $9300:  S: r16 -> [$00C4] (r16->UBRR0L)
$018A: $00C4:  
$018B: $E00E:  S: $0E -> r16 ($0E->r16)
$018C: $9300:  S: r16 -> [$00C2] (r16->UCSR0C)
$018D: $00C2:  
$018E: $E000:  S: $00 -> r16 ($00->r16)
$018F: $9300:  S: r16 -> [$00C0] (r16->UCSR0A)
$0190: $00C0:  
$0191: $E908:  S: $98 -> r16 ($98->r16)
$0192: $9300:  S: r16 -> [$00C1] (r16->UCSR0B)
$0193: $00C1:  
-----          L: 
               F: @UART_Receive_Buffer -> UART_Receive_Buffer_Pointer  ...
$0194: $E100:     $10 -> r16
$0195: $9300:     r16 -> [$0311]
$0196: $0311:  
$0197: $E001:     $01 -> r16
$0198: $9300:     r16 -> [$0312]
$0199: $0312:  
               F: @UART_Transmit_Buffer -> UART_Transmit_IN_Buffer_Pointer  ...
$019A: $E103:     $13 -> r16
$019B: $9300:     r16 -> [$0513]
$019C: $0513:  
$019D: $E003:     $03 -> r16
$019E: $9300:     r16 -> [$0514]
$019F: $0514:  
               F: @UART_Transmit_Buffer -> UART_Transmit_OUT_Buffer_Pointer  ...
$01A0: $E103:     $13 -> r16
$01A1: $9300:     r16 -> [$0515]
$01A2: $0515:  
$01A3: $E003:     $03 -> r16
$01A4: $9300:     r16 -> [$0516]
$01A5: $0516:  
-----          L: 
$01A6: $9508:  F: RET (ret)
-----          V: USART0_Receive_Complete
$01A7: $930F:  F: r16 -> (r16 ->)
$01A8: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$01A9: $B70F:     p$3F -> r16
$01AA: $930F:     r16 ->
-----          L: 
$01AB: $9100:  F: [$00C6] -> r16 (UDR0 -> r16)
$01AC: $00C6:  
-----          L: 
$01AD: $DFCF:  F: rcall $17D (_UART_Event_Received_byte)
-----          L: 
$01AE: $D005:  F: rcall $1B4 (_UART_Fill_Receive_Buffer)
-----          L: 
               F: -> SREG  ...
$01AF: $910F:     -> r16
$01B0: $BF0F:     r16 -> p$3F
$01B1: $911F:  F: -> r17 (-> r17)
$01B2: $910F:  F: -> r16 (-> r16)
$01B3: $9518:  F: RETI (RETI)
-----          V: _UART_Fill_Receive_Buffer
               F: Z ->  ...
$01B4: $93EF:     r30 ->
$01B5: $93FF:     r31 ->
               F: UART_Receive_Buffer_Pointer -> Z  ...
$01B6: $91E0:     [$0311] -> r30
$01B7: $0311:  
$01B8: $91F0:     [$0312] -> r31
$01B9: $0312:  
$01BA: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
-----          L: 
               C: if (r16 -= SOH) then goto $01C0 ...
$01BB: $3001:     r16 = $01
$01BC: $F419:     if (Z=0) then goto $1C0
               F: @UART_Receive_Buffer+1 -> Z  ...
$01BD: $E1E1:     $11 -> r30
$01BE: $E0F1:     $01 -> r31
-----          L: 
$01BF: $C009:  J: goto $1C9 (RJMP)
-----          L: 
               C: if (r16 = EOT) then goto $01C6 ...
$01C0: $3004:     r16 = $04
$01C1: $F021:     if (Z=1) then goto $1C6
-----          L: 
               C: if (Z < @UART_Receive_Buffer + UART_SIZE_IN_BUFFER) then goto $01C9 ...
$01C2: $31E0:     r30 = $10
$01C3: $E013:     $03 -> r17
$01C4: $07F1:     r31 = r17=
$01C5: $F018:     if ( < ) then goto $1C9
-----          L: 
-----          L: 
$01C6: $DFA3:  F: rcall $16A (_UART_Event_Received_string)
-----          L: 
               F: @UART_Receive_Buffer -> Z  ...
$01C7: $E1E0:     $10 -> r30
$01C8: $E0F1:     $01 -> r31
-----          L: 
-----          L: 
               F: Z -> UART_Receive_Buffer_Pointer  ...
$01C9: $93E0:     r30 -> [$0311]
$01CA: $0311:  
$01CB: $93F0:     r31 -> [$0312]
$01CC: $0312:  
               F: -> Z  ...
$01CD: $91FF:     -> r31
$01CE: $91EF:     -> r30
-----          L: 
$01CF: $9508:  F: RET (ret)
-----          V: _UART_PUSH_r16
-----          L: 
-----          L: 
$01D0: $9300:  F: r16 -> [$0517] (r16 -> UART_r16_temp)
$01D1: $0517:  
               F: SREG ->  ...
$01D2: $B70F:     p$3F -> r16
$01D3: $930F:     r16 ->
               F: Z ->  ...
$01D4: $93EF:     r30 ->
$01D5: $93FF:     r31 ->
-----          L: 
$01D6: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
               F: UART_Transmit_IN_Buffer_Pointer -> Z  ...
$01D7: $91E0:     [$0513] -> r30
$01D8: $0513:  
$01D9: $91F0:     [$0514] -> r31
$01DA: $0514:  
-----          L: 
$01DB: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @UART_Transmit_Buffer + UART_SIZE_OUT_BUFFER) then goto $01E2 ...
$01DC: $31E3:     r30 = $13
$01DD: $E015:     $05 -> r17
$01DE: $07F1:     r31 = r17=
$01DF: $F010:     if ( < ) then goto $1E2
               F: @UART_Transmit_Buffer -> Z  ...
$01E0: $E1E3:     $13 -> r30
$01E1: $E0F3:     $03 -> r31
-----          L: 
               C: if (Z -= UART_Transmit_OUT_Buffer_Pointer) then goto $01EA ...
$01E2: $9110:     [$0515] -> r17
$01E3: $0515:  
$01E4: $17E1:     r30 = r17
$01E5: $9110:     [$0516] -> r17
$01E6: $0516:  
$01E7: $07F1:     r31 = r17=
$01E8: $F409:     if (Z=0) then goto $1EA
$01E9: $DF89:  F: rcall $173 (_UART_Event_Transmit_Buffer_Overflow)
-----          L: 
-----          L: 
               F: UART_r16_temp -> [Z]  ...
$01EA: $9100:     [$0517] -> r16
$01EB: $0517:  
$01EC: $8300:     r16 -> [Z+$00]
               F: Z -> UART_Transmit_IN_Buffer_Pointer  ...
$01ED: $93E0:     r30 -> [$0513]
$01EE: $0513:  
$01EF: $93F0:     r31 -> [$0514]
$01F0: $0514:  
-----          L: 
               C: if (UDRIE0 = 1) then goto $01FB ...
$01F1: $9100:     [$00C1] -> r16
$01F2: $00C1:  
$01F3: $FD05:     if (r16.5=0 then SKIP
$01F4: $C006:     goto $1FB (RJMP)
               F: 1 -> UDRIE0  ...
$01F5: $9100:     [$00C1] -> r16
$01F6: $00C1:  
$01F7: $6200:     r16 ! $20
$01F8: $9300:     r16 -> [$00C1]
$01F9: $00C1:  
$01FA: $D011:  F: rcall $20C (_UART_POP_and_Send_Byte)
-----          L: 
-----          L: 
               F: -> Z  ...
$01FB: $91FF:     -> r31
$01FC: $91EF:     -> r30
               F: -> SREG  ...
$01FD: $910F:     -> r16
$01FE: $BF0F:     r16 -> p$3F
$01FF: $9100:  F: [$0517] -> r16 (UART_r16_temp -> r16)
$0200: $0517:  
-----          L: 
$0201: $9508:  F: RET (RET)
-----          V: USART0_DR_Empty
$0202: $930F:  F: r16 -> (r16 ->)
$0203: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0204: $B70F:     p$3F -> r16
$0205: $930F:     r16 ->
$0206: $D005:  F: rcall $20C (_UART_POP_and_Send_Byte)
               F: -> SREG  ...
$0207: $910F:     -> r16
$0208: $BF0F:     r16 -> p$3F
$0209: $911F:  F: -> r17 (-> r17)
$020A: $910F:  F: -> r16 (-> r16)
$020B: $9518:  F: RETI (reti)
-----          V: _UART_POP_and_Send_Byte
               F: Z ->  ...
$020C: $93EF:     r30 ->
$020D: $93FF:     r31 ->
               F: UART_Transmit_OUT_Buffer_Pointer -> Z  ...
$020E: $91E0:     [$0515] -> r30
$020F: $0515:  
$0210: $91F0:     [$0516] -> r31
$0211: $0516:  
               C: if (Z = UART_Transmit_IN_Buffer_Pointer) then goto $022A ...
$0212: $9110:     [$0513] -> r17
$0213: $0513:  
$0214: $17E1:     r30 = r17
$0215: $9110:     [$0514] -> r17
$0216: $0514:  
$0217: $07F1:     r31 = r17=
$0218: $F089:     if (Z=1) then goto $22A
$0219: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @UART_Transmit_Buffer + UART_SIZE_OUT_BUFFER) then goto $0220 ...
$021A: $31E3:     r30 = $13
$021B: $E015:     $05 -> r17
$021C: $07F1:     r31 = r17=
$021D: $F010:     if ( < ) then goto $220
               F: @UART_Transmit_Buffer -> Z  ...
$021E: $E1E3:     $13 -> r30
$021F: $E0F3:     $03 -> r31
               F: [Z] -> UDR0  ...
$0220: $8100:     [Z+$00] -> r16
$0221: $9300:     r16 -> [$00C6]
$0222: $00C6:  
               F: Z -> UART_Transmit_OUT_Buffer_Pointer  ...
$0223: $93E0:     r30 -> [$0515]
$0224: $0515:  
$0225: $93F0:     r31 -> [$0516]
$0226: $0516:  
               F: -> Z  ...
$0227: $91FF:     -> r31
$0228: $91EF:     -> r30
$0229: $9508:  F: RET (RET)
-----          L: 
               F: 0 -> UDRIE0  ...
$022A: $9100:     [$00C1] -> r16
$022B: $00C1:  
$022C: $7D0F:     r16 & $DF
$022D: $9300:     r16 -> [$00C1]
$022E: $00C1:  
$022F: $DF39:  F: rcall $169 (_UART_Event_Transmit_Buffer_Empty)
               F: -> Z  ...
$0230: $91FF:     -> r31
$0231: $91EF:     -> r30
-----          L: 
$0232: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\STimer.alg    ***********
-----          V: _STimer_Event_End_1
-----          L: 
$0233: $6038:  F: r19 ! $08 (1 -> F_Stairs_Vis_ReDraw)
-----          L: 
               F: [@STimer_Counter_Stop + DO_VISUAL] -> [@STimer_Counter + DO_VISUAL]  ...
$0234: $9100:     [$051C] -> r16
$0235: $051C:  
$0236: $9300:     r16 -> [$0519]
$0237: $0519:  
$0238: $9508:  F: RET (RET)
-----          V: _STimer_Event_End_0
-----          L: 
-----          L: 
$0239: $9508:  F: RET (ret)
-----          V: _STimer_Event_End_2
-----          L: 
               F: MRESET -> Menu_actFlag  ...
$023A: $EF0C:     $FC -> r16
$023B: $9300:     r16 -> [$063B]
$023C: $063B:  
-----          L: 
$023D: $9508:  F: RET (ret)
-----          V: _STimer_Clear_All
               F: Z ->  ...
$023E: $93EF:     r30 ->
$023F: $93FF:     r31 ->
               F: @STimer_Counter -> Z  ...
$0240: $E1E8:     $18 -> r30
$0241: $E0F5:     $05 -> r31
$0242: $E023:  F: $03 -> r18 (STIMER_NUMB -> Temp)
$0243: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$0244: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (Temp --) then goto $0244 ...
$0245: $952A:     r18 --
$0246: $F7E9:     if (Z=0) then goto $244
               F: -> Z  ...
$0247: $91FF:     -> r31
$0248: $91EF:     -> r30
$0249: $9508:  F: RET (ret)
-----          V: _STimer_Init
-----          L: 
$024A: $9508:  F: RET (ret)
-----          V: _STimer_Cyclic_Call
$024B: $9100:  F: [$0518] -> r16 (STimer_Counter[0]  -> r16)
$024C: $0518:  
$024D: $5001:  F: r16 - $01 (r16 - 1)
$024E: $F020:  C: if (C=1) then goto $253 (C = 1)
$024F: $9300:  F: r16 -> [$0518] (r16 -> STimer_Counter[0])
$0250: $0518:  
$0251: $F409:  C: if (Z=0) then goto $253 (-=)
$0252: $DFE6:  F: rcall $239 (_STimer_Event_End_0)
-----          L: 
$0253: $9100:  F: [$0519] -> r16 (STimer_Counter[1]  -> r16)
$0254: $0519:  
$0255: $5001:  F: r16 - $01 (r16 - 1)
$0256: $F020:  C: if (C=1) then goto $25B (C = 1)
$0257: $9300:  F: r16 -> [$0519] (r16 -> STimer_Counter[1])
$0258: $0519:  
$0259: $F409:  C: if (Z=0) then goto $25B (-=)
$025A: $DFD8:  F: rcall $233 (_STimer_Event_End_1)
-----          L: 
$025B: $9100:  F: [$051A] -> r16 (STimer_Counter[2]  -> r16)
$025C: $051A:  
$025D: $5001:  F: r16 - $01 (r16 - 1)
$025E: $F020:  C: if (C=1) then goto $263 (C = 1)
$025F: $9300:  F: r16 -> [$051A] (r16 -> STimer_Counter[2])
$0260: $051A:  
$0261: $F409:  C: if (Z=0) then goto $263 (-=)
$0262: $DFD7:  F: rcall $23A (_STimer_Event_End_2)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0263: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\ssd1306.alg    ***********
-----          V: _ssd_Clr_rest_line
$0264: $931F:  F: r17 -> (r17 ->)
$0265: $9110:  F: [$051F] -> r17 (ssd_Last_X -> r17)
$0266: $051F:  
$0267: $9511:  F: - r17 (-r17)
$0268: $5810:  F: r17 - $80 (r17 + 128)
-----          L: 
$0269: $E000:  F: $00 -> r16 (0 -> r16)
$026A: $D439:  F: rcall $6A4 (_ssd_Push)
               C: if (r17 --) then goto $0269 ...
$026B: $951A:     r17 --
$026C: $F7E1:     if (Z=0) then goto $269
$026D: $911F:  F: -> r17 (-> r17)
$026E: $9508:  F: RET (ret)
-----          V: _ssd_Pos_
-----          L: 
$026F: $D3FB:  F: rcall $66B (_ssd_Waiting_Buffer_Release)
-----          L: 
$0270: $9300:  F: r16 -> [$051F] (r16 -> ssd_Last_X)
$0271: $051F:  
$0272: $9310:  F: r17 -> [$0520] (r17 -> ssd_Last_Y)
$0273: $0520:  
-----          L: 
$0274: $E200:  F: $20 -> r16 ($20 -> r16)
$0275: $D41D:  F: rcall $693 (_ssd_command_)
$0276: $E000:  F: $00 -> r16 ($00 -> r16)
$0277: $D41B:  F: rcall $693 (_ssd_command_)
-----          L: 
$0278: $E201:  F: $21 -> r16 ($21 -> r16)
$0279: $D419:  F: rcall $693 (_ssd_command_)
$027A: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$027B: $051F:  
$027C: $D416:  F: rcall $693 (_ssd_command_)
$027D: $E70F:  F: $7F -> r16 (127 -> r16)
$027E: $D414:  F: rcall $693 (_ssd_command_)
-----          L: 
$027F: $E202:  F: $22 -> r16 ($22 -> r16)
$0280: $D412:  F: rcall $693 (_ssd_command_)
$0281: $9100:  F: [$0520] -> r16 (ssd_Last_Y -> r16)
$0282: $0520:  
$0283: $D40F:  F: rcall $693 (_ssd_command_)
$0284: $E007:  F: $07 -> r16 (7 -> r16)
$0285: $D40D:  F: rcall $693 (_ssd_command_)
$0286: $9508:  F: RET (ret)
-----          V: _ssd_Clr
               F: Z ->  ...
$0287: $93EF:     r30 ->
$0288: $93FF:     r31 ->
$0289: $E000:  F: $00 -> r16 (0 -> r16)
$028A: $E010:  F: $00 -> r17 (0 -> r17)
$028B: $DFE3:  F: rcall $26F (_ssd_Pos_)
               F: 1024 -> Z  ...
$028C: $E0E0:     $00 -> r30
$028D: $E0F4:     $04 -> r31
-----          L: 
$028E: $E000:  F: $00 -> r16 (0 -> r16)
$028F: $D414:  F: rcall $6A4 (_ssd_Push)
               C: if (Z --) then goto $028E ...
$0290: $50E1:     r30 - $01
$0291: $40F0:     r31 - $00 -
$0292: $F7D9:     if (Z=0) then goto $28E
               F: -> Z  ...
$0293: $91FF:     -> r31
$0294: $91EF:     -> r30
$0295: $9508:  F: RET (ret)
-----          V: _ssd_Parse_r16
$0296: $932F:  F: r18 -> (Temp ->)
               C: if (r16 < 16) then goto $029E ...
$0297: $3100:     r16 = $10
$0298: $F028:     if ( < ) then goto $29E
$0299: $D3A7:  F: rcall $641 (_ssd_Convert)
-----          L: 
-----          L: 
-----          L: 
$029A: $5100:  F: r16 - $10 (r16 - 16)
$029B: $D02E:  F: rcall $2CA (_ssd_Mod_Char_r16)
$029C: $912F:  F: -> r18 (-> Temp)
$029D: $9508:  F: RET (ret)
-----          L: 
$029E: $E010:  F: $00 -> r17 (0 -> r17)
               C: if (r16 = 1) then goto $02AF ...
$029F: $3001:     r16 = $01
$02A0: $F071:     if (Z=1) then goto $2AF
               C: if (r16 = 10) then goto $02C1 ...
$02A1: $300A:     r16 = $0A
$02A2: $F0F1:     if (Z=1) then goto $2C1
               C: if (r16 = 13) then goto $02B3 ...
$02A3: $300D:     r16 = $0D
$02A4: $F071:     if (Z=1) then goto $2B3
$02A5: $5002:  F: r16 - $02 (r16 - 2)
$02A6: $9408:  F: 1 -> .C (1 -> C)
-----          L: 
$02A7: $1F11:  F: << r17 < (<< r17 <)
               C: if (r16 = 0) then goto $02AC ...
$02A8: $3000:     r16 = $00
$02A9: $F011:     if (Z=1) then goto $2AC
$02AA: $950A:  F: r16 -- (r16 --)
$02AB: $CFFB:  J: goto $2A7 (RJMP)
-----          L: 
$02AC: $9100:  F: [$051E] -> r16 (ssd_Mods -> r16)
$02AD: $051E:  
$02AE: $2710:  F: r17 ^ r16 (r17 ^ r16)
-----          L: 
$02AF: $9310:  F: r17 -> [$051E] (r17 -> ssd_Mods)
$02B0: $051E:  
-----          L: 
$02B1: $912F:  F: -> r18 (-> Temp)
$02B2: $9508:  F: RET (ret)
-----          V: 
$02B3: $9100:  F: [$0520] -> r16 (ssd_Last_Y -> r16)
$02B4: $0520:  
$02B5: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 >= 8) then goto $02B9 ...
$02B6: $3008:     r16 = $08
$02B7: $F008:     if ( < ) then goto $2B9
$02B8: $E000:  F: $00 -> r16 (0 -> r16)
$02B9: $9300:  F: r16 -> [$0520] (r16 -> ssd_Last_Y)
$02BA: $0520:  
$02BB: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$02BC: $051F:  
$02BD: $9110:  F: [$0520] -> r17 (ssd_Last_Y -> r17)
$02BE: $0520:  
$02BF: $DFAF:  F: rcall $26F (_ssd_Pos_)
$02C0: $CFF0:  J: goto $2B1 (RJMP)
-----          V: 
               F: 0 -> ssd_Last_X  ...
$02C1: $E000:     $00 -> r16
$02C2: $9300:     r16 -> [$051F]
$02C3: $051F:  
$02C4: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$02C5: $051F:  
$02C6: $9110:  F: [$0520] -> r17 (ssd_Last_Y -> r17)
$02C7: $0520:  
$02C8: $DFA6:  F: rcall $26F (_ssd_Pos_)
$02C9: $CFE7:  J: goto $2B1 (RJMP)
-----          V: _ssd_Mod_Char_r16
-----          L: 
-----          L: 
-----          L: 
               F: Z ->  ...
$02CA: $93EF:     r30 ->
$02CB: $93FF:     r31 ->
$02CC: $E010:  F: $00 -> r17 (0 -> r17)
$02CD: $0F00:  F: << r16 (<< r16)
               F: r16 -> Z  ...
$02CE: $2FE0:     r16 -> r30
$02CF: $E0F0:     $00 -> r31
               F: << r16:Word  ...
$02D0: $0F00:     << r16
$02D1: $1F11:     << r17 <
               F: Z + r16:Word  ...
$02D2: $0FE0:     r30 + r16
$02D3: $1FF1:     r31 + r17 +
               F: Z + 2*D_ssd_font  ...
$02D4: $51EE:     r30 - $1E
$02D5: $4FF6:     r31 - $F6 -
-----          L: 
$02D6: $9110:  F: [$051E] -> r17 (ssd_Mods -> r17)
$02D7: $051E:  
-----          L: 
$02D8: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$02D9: $C006:  C: goto $2E0 (RJMP) (r17.6 = 0)
               F: ssd_Last_Y ->  ...
$02DA: $9100:     [$0520] -> r16
$02DB: $0520:  
$02DC: $930F:     r16 ->
               F: ssd_Last_X ->  ...
$02DD: $9100:     [$051F] -> r16
$02DE: $051F:  
$02DF: $930F:     r16 ->
-----          L: 
$02E0: $E026:  F: $06 -> r18 (6 -> Temp)
-----          L: 
$02E1: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$02E2: $FF14:  C: if (r17.4=1 then SKIP (r17.4 = 0)
$02E3: $C004:  C: goto $2E8 (RJMP) (r17.4 = 0)
               C: if (Temp = 5) then goto $02F3 ...
$02E4: $3025:     r18 = $05
$02E5: $F069:     if (Z=1) then goto $2F3
               C: if (Temp = 3) then goto $02F3 ...
$02E6: $3023:     r18 = $03
$02E7: $F059:     if (Z=1) then goto $2F3
-----          L: 
$02E8: $D03F:  F: rcall $328 (_ssd_do_Mods)
-----          L: 
$02E9: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$02EA: $C002:  C: goto $2ED (RJMP) (r17.6 = 0)
$02EB: $700F:  F: r16 & $0F (r16 & #b00001111)
$02EC: $D052:  F: rcall $33F (ssd_do_Zoom)
-----          L: 
-----          L: 
$02ED: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$02EE: $C003:  C: goto $2F2 (RJMP) (r17.7 = 0)
$02EF: $930F:  F: r16 -> (r16 ->)
$02F0: $D3B3:  F: rcall $6A4 (_ssd_Push)
$02F1: $910F:  F: -> r16 (-> r16)
-----          L: 
$02F2: $D3B1:  F: rcall $6A4 (_ssd_Push)
-----          L: 
               C: if (Temp --) then goto $02E1 ...
$02F3: $952A:     r18 --
$02F4: $F761:     if (Z=0) then goto $2E1
-----          L: 
$02F5: $D05C:  F: rcall $352 (_ssd_do_Space)
-----          L: 
$02F6: $FF16:  C: if (r17.6=1 then SKIP (r17.6 = 0)
$02F7: $C02D:  C: goto $325 (RJMP) (r17.6 = 0)
$02F8: $9736:  F: r30,r31 - $06 (Z - 6)
$02F9: $910F:  F: -> r16 (-> r16)
$02FA: $9300:  F: r16 -> [$051F] (r16 -> ssd_Last_X)
$02FB: $051F:  
-----          L: 
$02FC: $910F:  F: -> r16 (-> r16)
$02FD: $930F:  F: r16 -> (r16 ->)
$02FE: $9503:  F: r16 ++ (r16 ++)
$02FF: $9300:  F: r16 -> [$0520] (r16 -> ssd_Last_Y)
$0300: $0520:  
$0301: $931F:  F: r17 -> (r17 ->)
$0302: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$0303: $051F:  
$0304: $9110:  F: [$0520] -> r17 (ssd_Last_Y -> r17)
$0305: $0520:  
$0306: $DF68:  F: rcall $26F (_ssd_Pos_)
$0307: $911F:  F: -> r17 (-> r17)
-----          L: 
$0308: $E026:  F: $06 -> r18 (6 -> Temp)
-----          L: 
$0309: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$030A: $FF14:  C: if (r17.4=1 then SKIP (r17.4 = 0)
$030B: $C004:  C: goto $310 (RJMP) (r17.4 = 0)
               C: if (Temp = 5) then goto $031A ...
$030C: $3025:     r18 = $05
$030D: $F061:     if (Z=1) then goto $31A
               C: if (Temp = 3) then goto $031A ...
$030E: $3023:     r18 = $03
$030F: $F051:     if (Z=1) then goto $31A
-----          L: 
$0310: $D017:  F: rcall $328 (_ssd_do_Mods)
-----          L: 
$0311: $9502:  F: >> r16 << (>> r16 <<)
$0312: $700F:  F: r16 & $0F (r16 & #b00001111)
$0313: $D02B:  F: rcall $33F (ssd_do_Zoom)
-----          L: 
$0314: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$0315: $C003:  C: goto $319 (RJMP) (r17.7 = 0)
$0316: $930F:  F: r16 -> (r16 ->)
$0317: $D38C:  F: rcall $6A4 (_ssd_Push)
$0318: $910F:  F: -> r16 (-> r16)
-----          L: 
$0319: $D38A:  F: rcall $6A4 (_ssd_Push)
-----          L: 
               C: if (Temp --) then goto $0309 ...
$031A: $952A:     r18 --
$031B: $F769:     if (Z=0) then goto $309
-----          L: 
$031C: $D035:  F: rcall $352 (_ssd_do_Space)
-----          L: 
$031D: $910F:  F: -> r16 (-> r16)
$031E: $9300:  F: r16 -> [$0520] (r16 -> ssd_Last_Y)
$031F: $0520:  
$0320: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$0321: $051F:  
$0322: $9110:  F: [$0520] -> r17 (ssd_Last_Y -> r17)
$0323: $0520:  
$0324: $DF4A:  F: rcall $26F (_ssd_Pos_)
-----          L: 
               F: -> Z  ...
$0325: $91FF:     -> r31
$0326: $91EF:     -> r30
-----          L: 
$0327: $9508:  F: RET (ret)
-----          V: _ssd_do_Mods
-----          L: 
$0328: $FF15:  C: if (r17.5=1 then SKIP (r17.5 = 0)
$0329: $C007:  C: goto $331 (RJMP) (r17.5 = 0)
               C: if (Temp -= 5) then goto $0331 ...
$032A: $3025:     r18 = $05
$032B: $F429:     if (Z=0) then goto $331
$032C: $9732:  F: r30,r31 - $02 (Z - 2)
$032D: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$032E: $9632:  F: r30,r31 + $02 (Z + 2)
$032F: $2B02:  F: r16 ! r18 (r16 ! Temp)
$0330: $E025:  F: $05 -> r18 (5 -> Temp)
-----          L: 
$0331: $FF13:  C: if (r17.3=1 then SKIP (r17.3 = 0)
$0332: $C007:  C: goto $33A (RJMP) (r17.3 = 0)
$0333: $FB06:  F: r16.6 -> T (r16.6 -> T)
$0334: $0F00:  F: << r16 (<< r16)
$0335: $F408:  C: if (C=0) then goto $337 (C = 1)
$0336: $6800:  F: r16 ! $80 (1 -> r16.7)
$0337: $F008:  C: if (C=1) then goto $339 (C = 0)
$0338: $770F:  F: r16 & $7F (0 -> r16.7)
$0339: $F906:  F: T -> r16.6 (T -> r16.6)
-----          L: 
$033A: $FD10:  C: if (r17.0=0 then SKIP (r17.0 = 1)
$033B: $6800:  F: r16 ! $80 (r16 ! #b10000000)
$033C: $FD11:  C: if (r17.1=0 then SKIP (r17.1 = 1)
$033D: $9500:  F: | r16 (|r16)
-----          L: 
$033E: $9508:  F: RET (ret)
-----          L: 
-----          V: ssd_do_Zoom
               F: Z ->  ...
$033F: $93EF:     r30 ->
$0340: $93FF:     r31 ->
               F: 2*D_ssd_Zoom -> Z  ...
$0341: $E9E4:     $94 -> r30
$0342: $E0F6:     $06 -> r31
$0343: $0FE0:  F: r30 + r16 (ZL + r16)
$0344: $E000:  F: $00 -> r16 (0 -> r16)
$0345: $1FF0:  F: r31 + r16 + (ZH + r16 +)
$0346: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
               F: -> Z  ...
$0347: $91FF:     -> r31
$0348: $91EF:     -> r30
$0349: $9508:  F: RET (ret)
-----          L: 
-----          V: D_ssd_Zoom
$034A: $00 $03 $0C $0F
$034C: $30 $33 $3C $3F
$034E: $C0 $C3 $CC $CF
$0350: $F0 $F3 $FC $FF
-----          L: 
-----          V: _ssd_do_Space
$0352: $FF12:  C: if (r17.2=1 then SKIP (r17.2 = 0)
$0353: $C007:  C: goto $35B (RJMP) (r17.2 = 0)
$0354: $E000:  F: $00 -> r16 (0 -> r16)
$0355: $FF17:  C: if (r17.7=1 then SKIP (r17.7 = 0)
$0356: $C003:  C: goto $35A (RJMP) (r17.7 = 0)
$0357: $930F:  F: r16 -> (r16 ->)
$0358: $D34B:  F: rcall $6A4 (_ssd_Push)
$0359: $910F:  F: -> r16 (-> r16)
-----          L: 
$035A: $D349:  F: rcall $6A4 (_ssd_Push)
-----          L: 
$035B: $9508:  F: RET (ret)
-----          L: 
-----          V: _ssd_sprite_Pos
-----          L: 
$035C: $D30E:  F: rcall $66B (_ssd_Waiting_Buffer_Release)
-----          L: 
-----          L: 
$035D: $E201:  F: $21 -> r16 ($21 -> r16)
$035E: $D334:  F: rcall $693 (_ssd_command_)
$035F: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$0360: $051F:  
$0361: $D331:  F: rcall $693 (_ssd_command_)
$0362: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$0363: $051F:  
$0364: $5E09:  F: r16 - $E9 (r16 + 23)
$0365: $D32D:  F: rcall $693 (_ssd_command_)
-----          L: 
$0366: $E202:  F: $22 -> r16 ($22 -> r16)
$0367: $D32B:  F: rcall $693 (_ssd_command_)
$0368: $9100:  F: [$0520] -> r16 (ssd_Last_Y -> r16)
$0369: $0520:  
$036A: $D328:  F: rcall $693 (_ssd_command_)
$036B: $E007:  F: $07 -> r16 (7 -> r16)
$036C: $D326:  F: rcall $693 (_ssd_command_)
$036D: $9508:  F: RET (ret)
-----          V: _ssd_spite_
$036E: $930F:  F: r16 -> (r16 ->)
$036F: $DFEC:  F: rcall $35C (_ssd_sprite_Pos)
-----          L: 
$0370: $911F:  F: -> r17 (-> r17)
               F: Z ->  ...
$0371: $93EF:     r30 ->
$0372: $93FF:     r31 ->
               F: r17 -> Z  ...
$0373: $2FE1:     r17 -> r30
$0374: $E0F0:     $00 -> r31
               F: <<Z  ...
$0375: $0FEE:     << r30
$0376: $1FFF:     << r31 <
               F: <<Z  ...
$0377: $0FEE:     << r30
$0378: $1FFF:     << r31 <
               F: <<Z  ...
$0379: $0FEE:     << r30
$037A: $1FFF:     << r31 <
$037B: $E000:  F: $00 -> r16 (0 -> r16)
               F: r16:Word >>  ...
$037C: $9516:     r17 >>
$037D: $9507:     > r16 >>
               F: r16:Word >>  ...
$037E: $9516:     r17 >>
$037F: $9507:     > r16 >>
               F: Z + r16:Word  ...
$0380: $0FE0:     r30 + r16
$0381: $1FF1:     r31 + r17 +
-----          L: 
               F: Z + 2*D_ssd_sprites  ...
$0382: $5EE4:     r30 - $E4
$0383: $4FF8:     r31 - $F8 -
$0384: $E408:  F: $48 -> r16 (72 -> r16)
-----          L: 
$0385: $930F:  F: r16 -> (r16 ->)
$0386: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
$0387: $D31C:  F: rcall $6A4 (_ssd_Push)
$0388: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0385 ...
$0389: $950A:     r16 --
$038A: $F7D1:     if (Z=0) then goto $385
-----          L: 
-----          L: 
-----          L: 
               F: -> Z  ...
$038B: $91FF:     -> r31
$038C: $91EF:     -> r30
$038D: $9508:  F: RET (ret)
-----          L: 
-----          L: D_ssd_sprites
$038E: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$0396: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$039E: $00 $7E $42 $42 $42 $42 $7E $00 $00 $00 $00 $00 $00 $00 $81 $7E
$03A6: $00 $01 $06 $08 $10 $20 $20 $40 $40 $80 $80 $80 $80 $80 $80 $40
$03AE: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$03B6: $02 $01 $01 $01 $01 $01 $01 $02 $82 $44 $E4 $08 $10 $60 $80 $00
$03BE: $7E $81 $00 $00 $00 $00 $00 $00 $80 $40 $20 $10 $08 $04 $02 $01
$03C6: $00 $00 $FF $00 $00 $00 $81 $7E $00 $01 $06 $08 $10 $24 $26 $45
$03CE: $44 $84 $84 $84 $84 $84 $84 $44 $44 $24 $27 $10 $08 $06 $01 $00
$03D6: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $E1 $22
$03DE: $22 $24 $E4 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $C0 $40 $40
$03E6: $78 $08 $08 $0F $01 $01 $01 $00 $00 $00 $FF $00 $00 $00 $81 $7E
$03EE: $00 $01 $06 $08 $10 $27 $24 $44 $44 $84 $84 $84 $84 $84 $84 $44
$03F6: $44 $24 $27 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$03FE: $02 $01 $01 $01 $01 $01 $01 $02 $02 $04 $04 $88 $50 $60 $80 $00
$0406: $7E $81 $00 $80 $40 $20 $20 $10 $10 $88 $48 $44 $24 $24 $92 $92
$040E: $4A $29 $25 $14 $12 $09 $85 $7E $00 $01 $07 $08 $10 $28 $24 $42
$0416: $41 $E0 $98 $84 $82 $81 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$041E: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $81 $41 $01 $01 $81 $62
$0426: $52 $84 $84 $08 $10 $60 $80 $00 $7E $81 $00 $00 $20 $C0 $40 $80
$042E: $00 $0F $30 $C1 $06 $08 $13 $0C $00 $00 $00 $01 $01 $02 $83 $7E
$0436: $00 $01 $06 $08 $14 $23 $20 $40 $43 $84 $82 $81 $80 $80 $80 $40
$043E: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$0446: $02 $01 $01 $01 $01 $01 $01 $02 $02 $04 $04 $08 $10 $60 $80 $00
$044E: $7E $81 $00 $00 $00 $00 $00 $00 $00 $00 $00 $7E $00 $00 $00 $00
$0456: $00 $00 $00 $00 $00 $00 $81 $7E $00 $01 $06 $08 $10 $20 $20 $40
$045E: $40 $80 $80 $80 $80 $80 $80 $40 $40 $20 $20 $10 $08 $06 $01 $00
$0466: $00 $80 $60 $10 $08 $04 $04 $02 $02 $01 $01 $01 $01 $01 $01 $02
$046E: $02 $04 $04 $08 $10 $60 $80 $00 $7E $81 $00 $00 $00 $00 $00 $00
$0476: $00 $00 $7E $00 $00 $7E $00 $00 $00 $00 $00 $00 $00 $00 $81 $7E
$047E: $00 $01 $06 $08 $10 $20 $20 $40 $40 $80 $80 $80 $80 $80 $80 $40
$0486: $40 $20 $20 $10 $08 $06 $01 $00 $00 $80 $60 $10 $08 $04 $04 $02
$048E: $02 $31 $71 $71 $21 $01 $01 $02 $02 $04 $04 $08 $10 $60 $80 $00
$0496: $7E $81 $00 $00 $00 $00 $00 $00 $38 $0E $FF $7F $64 $C4 $82 $01
$049E: $00 $00 $00 $00 $00 $00 $81 $7E $00 $01 $06 $08 $10 $20 $20 $40
$04A6: $46 $83 $81 $80 $80 $80 $87 $44 $40 $20 $20 $10 $08 $06 $01 $00
-----          V: _ssd1306_Init
               F: @ssd_out_buffer -> ssd_out_buffer_in  ...
$04AE: $E201:     $21 -> r16
$04AF: $9300:     r16 -> [$05A1]
$04B0: $05A1:  
$04B1: $E005:     $05 -> r16
$04B2: $9300:     r16 -> [$05A2]
$04B3: $05A2:  
               F: @ssd_out_buffer -> ssd_out_buffer_out  ...
$04B4: $E201:     $21 -> r16
$04B5: $9300:     r16 -> [$05A3]
$04B6: $05A3:  
$04B7: $E005:     $05 -> r16
$04B8: $9300:     r16 -> [$05A4]
$04B9: $05A4:  
               F: 0 -> ssd_out_flag  ...
$04BA: $E000:     $00 -> r16
$04BB: $9300:     r16 -> [$05A5]
$04BC: $05A5:  
$04BD: $EA0E:  F: $AE -> r16 (SSD_OFF -> r16)
$04BE: $D1D4:  F: rcall $693 (_ssd_command_)
-----          L: 
$04BF: $ED05:  F: $D5 -> r16 (SSD_DISP_CLOCK -> r16)
$04C0: $D1D2:  F: rcall $693 (_ssd_command_)
$04C1: $EF00:  F: $F0 -> r16 ($F0 -> r16)
$04C2: $D1D0:  F: rcall $693 (_ssd_command_)
-----          L: 
$04C3: $EA08:  F: $A8 -> r16 (SSD_MLTPX_RATIO -> r16)
$04C4: $D1CE:  F: rcall $693 (_ssd_command_)
$04C5: $E30F:  F: $3F -> r16 ($3F -> r16)
$04C6: $D1CC:  F: rcall $693 (_ssd_command_)
-----          L: 
$04C7: $ED03:  F: $D3 -> r16 (SSD_DISP_OFFSET -> r16)
$04C8: $D1CA:  F: rcall $693 (_ssd_command_)
$04C9: $E000:  F: $00 -> r16 ($00 -> r16)
$04CA: $D1C8:  F: rcall $693 (_ssd_command_)
-----          L: 
$04CB: $E400:  F: $40 -> r16 (SSD_DISPL_START_LINE -> r16)
$04CC: $D1C6:  F: rcall $693 (_ssd_command_)
-----          L: 
$04CD: $E80D:  F: $8D -> r16 (SSD_CHARGE_PUMP -> r16)
$04CE: $D1C4:  F: rcall $693 (_ssd_command_)
$04CF: $E104:  F: $14 -> r16 ($14 -> r16)
$04D0: $D1C2:  F: rcall $693 (_ssd_command_)
-----          L: 
$04D1: $E200:  F: $20 -> r16 (SSD_ADDR_MODE -> r16)
$04D2: $D1C0:  F: rcall $693 (_ssd_command_)
$04D3: $E000:  F: $00 -> r16 ($00 -> r16)
$04D4: $D1BE:  F: rcall $693 (_ssd_command_)
-----          L: 
$04D5: $EA01:  F: $A1 -> r16 ($A1 -> r16)
$04D6: $D1BC:  F: rcall $693 (_ssd_command_)
$04D7: $EC08:  F: $C8 -> r16 ($C8 -> r16)
$04D8: $D1BA:  F: rcall $693 (_ssd_command_)
-----          L: 
$04D9: $ED0A:  F: $DA -> r16 ($DA -> r16)
$04DA: $D1B8:  F: rcall $693 (_ssd_command_)
$04DB: $E102:  F: $12 -> r16 ($12 -> r16)
$04DC: $D1B6:  F: rcall $693 (_ssd_command_)
-----          L: 
$04DD: $E801:  F: $81 -> r16 (SSD_CONTRAST -> r16)
$04DE: $D1B4:  F: rcall $693 (_ssd_command_)
$04DF: $EC0F:  F: $CF -> r16 ($CF -> r16)
$04E0: $D1B2:  F: rcall $693 (_ssd_command_)
-----          L: 
$04E1: $ED09:  F: $D9 -> r16 ($D9 -> r16)
$04E2: $D1B0:  F: rcall $693 (_ssd_command_)
$04E3: $EF01:  F: $F1 -> r16 ($F1 -> r16)
$04E4: $D1AE:  F: rcall $693 (_ssd_command_)
-----          L: 
$04E5: $ED0B:  F: $DB -> r16 ($DB -> r16)
$04E6: $D1AC:  F: rcall $693 (_ssd_command_)
$04E7: $E300:  F: $30 -> r16 ($30 -> r16)
$04E8: $D1AA:  F: rcall $693 (_ssd_command_)
$04E9: $EA04:  F: $A4 -> r16 ($A4 -> r16)
$04EA: $D1A8:  F: rcall $693 (_ssd_command_)
-----          L: 
$04EB: $EA06:  F: $A6 -> r16 ($A6 -> r16)
$04EC: $D1A6:  F: rcall $693 (_ssd_command_)
-----          L: 
$04ED: $EA0F:  F: $AF -> r16 (SSD_ON -> r16)
$04EE: $D1A4:  F: rcall $693 (_ssd_command_)
-----          L: 
$04EF: $DD97:  F: rcall $287 (_ssd_Clr)
-----          L: 
$04F0: $9508:  F: RET (ret)
-----          V: D_ssd_font
$04F1: $00 $10 $38 $7C $00 $00 $00 $7C $38 $10 $00 $00 $00 $08 $0C $0E
$04F9: $0C $08 $00 $10 $30 $70 $30 $10 $00 $7E $42 $42 $42 $7E $00 $7E
$0501: $7E $7E $7E $7E $3C $42 $42 $42 $42 $3C $00 $18 $24 $24 $18 $00
$0509: $00 $00 $18 $18 $00 $00 $FE $FC $F8 $F0 $E0 $C0 $80 $80 $80 $80
$0511: $80 $80 $01 $01 $01 $01 $01 $01 $03 $07 $0F $1F $3F $7F $FF $FF
$0519: $FF $FF $FF $FF $00 $44 $28 $10 $28 $44 $00 $10 $20 $10 $08 $04
$0521: $00 $00 $00 $00 $00 $00 $00 $00 $5E $00 $00 $00 $00 $00 $0C $00
$0529: $0C $00 $28 $7C $28 $7C $28 $00 $24 $4A $7E $52 $34 $00 $46 $26
$0531: $18 $64 $62 $00 $34 $4A $5A $24 $50 $00 $00 $00 $04 $02 $00 $00
$0539: $00 $00 $3C $42 $42 $00 $42 $42 $3C $00 $00 $00 $28 $10 $7C $10
$0541: $28 $00 $10 $10 $7C $10 $10 $00 $00 $40 $60 $00 $00 $00 $10 $10
$0549: $10 $10 $10 $00 $00 $00 $40 $00 $00 $00 $00 $20 $10 $08 $04 $00
$0551: $3C $62 $5A $46 $3C $00 $00 $44 $7E $40 $00 $00 $64 $52 $52 $52
$0559: $4C $00 $22 $42 $4A $4A $36 $00 $1E $10 $10 $10 $7E $00 $2E $4A
$0561: $4A $4A $32 $00 $3C $4A $4A $48 $30 $00 $02 $02 $72 $12 $0E $00
$0569: $34 $4A $4A $4A $34 $00 $0C $12 $52 $52 $3C $00 $00 $00 $44 $00
$0571: $00 $00 $00 $80 $44 $00 $00 $00 $00 $10 $28 $44 $00 $00 $28 $28
$0579: $28 $28 $28 $00 $00 $44 $28 $10 $00 $00 $04 $02 $52 $12 $0C $00
$0581: $3C $42 $5A $5A $0C $00 $7C $12 $12 $12 $7E $00 $7E $4A $4A $4A
$0589: $34 $00 $3C $42 $42 $42 $24 $00 $7E $42 $42 $42 $3C $00 $7E $4A
$0591: $4A $4A $42 $00 $7E $0A $0A $0A $02 $00 $3C $42 $42 $52 $30 $00
$0599: $7E $08 $08 $08 $7E $00 $00 $42 $7E $42 $00 $00 $30 $40 $40 $40
$05A1: $3E $00 $7E $08 $08 $14 $62 $00 $7E $40 $40 $40 $60 $00 $7E $04
$05A9: $08 $04 $7E $00 $7E $08 $10 $20 $7E $00 $3C $42 $42 $42 $3C $00
$05B1: $7E $12 $12 $12 $0C $00 $3C $42 $52 $62 $3C $00 $7E $12 $12 $12
$05B9: $6C $00 $24 $4A $4A $4A $30 $00 $02 $02 $7E $02 $02 $00 $3E $40
$05C1: $40 $40 $3E $00 $0E $30 $40 $30 $0E $00 $3E $60 $1C $60 $3E $00
$05C9: $76 $08 $08 $08 $76 $00 $06 $08 $70 $08 $06 $00 $62 $52 $4A $46
$05D1: $42 $00 $00 $00 $7E $42 $42 $00 $00 $04 $08 $10 $20 $00 $42 $42
$05D9: $7E $00 $00 $00 $00 $08 $04 $08 $00 $00 $40 $40 $40 $40 $40 $00
$05E1: $7C $12 $12 $12 $7E $00 $7E $4A $4A $4A $30 $00 $7E $4A $4A $4A
$05E9: $34 $00 $7E $02 $02 $02 $02 $00 $7C $42 $42 $7E $40 $00 $7E $4A
$05F1: $4A $42 $42 $00 $76 $08 $7E $08 $76 $00 $24 $42 $4A $4A $34 $00
$05F9: $7E $20 $10 $08 $7E $00 $7E $20 $10 $0A $7E $00 $7E $08 $08 $14
$0601: $62 $00 $40 $30 $0C $02 $7E $00 $7E $04 $08 $04 $7E $00 $7E $08
$0609: $08 $08 $7E $00 $3C $42 $42 $42 $3C $00 $7E $02 $02 $02 $7E $00
$0611: $7E $12 $12 $12 $0C $00 $3C $42 $42 $42 $24 $00 $02 $02 $7E $02
$0619: $02 $00 $06 $48 $48 $48 $3E $00 $3C $42 $7E $42 $3C $00 $76 $08
$0621: $08 $08 $76 $00 $7E $40 $40 $40 $7E $C0 $0E $10 $10 $10 $7E $00
$0629: $7E $40 $78 $40 $7E $00 $7E $40 $78 $40 $7E $C0 $02 $7E $44 $44
$0631: $38 $00 $7E $44 $44 $38 $7E $00 $7E $44 $44 $44 $38 $00 $24 $42
$0639: $4A $4A $3C $00 $7E $08 $3C $42 $3C $00 $6C $12 $12 $12 $7E $00
-----          L: 
-----          L: 
-----          V: _ssd_Convert
-----          L: 
-----          L: 
               C: if (r16 < 96) then goto $0652 ...
$0641: $3600:     r16 = $60
$0642: $F078:     if ( < ) then goto $652
               C: if (r16 = 96) then goto $0651 ...
$0643: $3600:     r16 = $60
$0644: $F061:     if (Z=1) then goto $651
               C: if (r16 < 128) then goto $064F ...
$0645: $3800:     r16 = $80
$0646: $F040:     if ( < ) then goto $64F
               C: if (r16 < 192) then goto $0651 ...
$0647: $3C00:     r16 = $C0
$0648: $F040:     if ( < ) then goto $651
               C: if (r16 < 224) then goto $064D ...
$0649: $3E00:     r16 = $E0
$064A: $F010:     if ( < ) then goto $64D
-----          L: 
-----          L: 
$064B: $5800:  F: r16 - $80 (r16 - 128)
$064C: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$064D: $5600:  F: r16 - $60 (r16 - 96)
$064E: $9508:  F: RET (ret)
-----          L: 
-----          L: 
-----          L: 
$064F: $5200:  F: r16 - $20 (r16 - 32)
$0650: $9508:  F: RET (ret)
-----          L: 
-----          L: 
-----          L: 
$0651: $E200:  F: $20 -> r16 (32 -> r16)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0652: $9508:  F: RET (ret)
-----          L: 
-----          V: _ssd_Stop_I2C
$0653: $E000:  S: $00 -> r16 ($00->r16)
$0654: $9300:  S: r16 -> [$00B9] (r16->TWSR)
$0655: $00B9:  
$0656: $E00C:  S: $0C -> r16 ($0C->r16)
$0657: $9300:  S: r16 -> [$00B8] (r16->TWBR)
$0658: $00B8:  
$0659: $E904:  S: $94 -> r16 ($94->r16)
$065A: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$065B: $00BC:  
$065C: $0000:  F: NOP (NOP)
$065D: $0000:  F: NOP (NOP)
$065E: $0000:  F: NOP (NOP)
$065F: $0000:  F: NOP (NOP)
$0660: $9508:  F: RET (Ret)
-----          V: TWI_Finished
$0661: $930F:  F: r16 -> (r16 ->)
$0662: $931F:  F: r17 -> (r17 ->)
               F: SREG ->  ...
$0663: $B70F:     p$3F -> r16
$0664: $930F:     r16 ->
-----          L: 
$0665: $D088:  F: rcall $6EE (_ssd_Pop)
-----          L: 
               F: -> SREG  ...
$0666: $910F:     -> r16
$0667: $BF0F:     r16 -> p$3F
$0668: $911F:  F: -> r17 (-> r17)
$0669: $910F:  F: -> r16 (-> r16)
$066A: $9518:  F: RETI (reti)
-----          V: _ssd_Waiting_Buffer_Release
$066B: $930F:  F: r16 -> (r16 ->)
               F: SREG ->  ...
$066C: $B70F:     p$3F -> r16
$066D: $930F:     r16 ->
$066E: $9478:  F: 1 -> I (1 -> I)
-----          L: 
               C: if (ssd_out_flag -= 0) then goto $066F ...
$066F: $9100:     [$05A5] -> r16
$0670: $05A5:  
$0671: $3000:     r16 = $00
$0672: $F7E1:     if (Z=0) then goto $66F
               F: -> SREG  ...
$0673: $910F:     -> r16
$0674: $BF0F:     r16 -> p$3F
$0675: $910F:  F: -> r16 (-> r16)
$0676: $9508:  F: RET (ret)
-----          V: _ssd_Send_Byte
$0677: $E000:  S: $00 -> r16 ($00->r16)
$0678: $9300:  S: r16 -> [$00B9] (r16->TWSR)
$0679: $00B9:  
$067A: $E00C:  S: $0C -> r16 ($0C->r16)
$067B: $9300:  S: r16 -> [$00B8] (r16->TWBR)
$067C: $00B8:  
$067D: $E804:  S: $84 -> r16 ($84->r16)
$067E: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$067F: $00BC:  
-----          L: 
               C: if (TWINT = 0) then goto $0680 ...
$0680: $9100:     [$00BC] -> r16
$0681: $00BC:  
$0682: $FF07:     if (r16.7=1 then SKIP
$0683: $CFFC:     goto $680 (RJMP)
$0684: $9508:  F: RET (Ret)
-----          V: _ssd_Start_I2C
$0685: $E000:  S: $00 -> r16 ($00->r16)
$0686: $9300:  S: r16 -> [$00B9] (r16->TWSR)
$0687: $00B9:  
$0688: $E00C:  S: $0C -> r16 ($0C->r16)
$0689: $9300:  S: r16 -> [$00B8] (r16->TWBR)
$068A: $00B8:  
$068B: $EA04:  S: $A4 -> r16 ($A4->r16)
$068C: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$068D: $00BC:  
-----          L: 
               C: if (TWINT = 0) then goto $068E ...
$068E: $9100:     [$00BC] -> r16
$068F: $00BC:  
$0690: $FF07:     if (r16.7=1 then SKIP
$0691: $CFFC:     goto $68E (RJMP)
$0692: $9508:  F: RET (Ret)
-----          V: _ssd_command_
$0693: $930F:  F: r16 -> (r16 ->)
$0694: $DFD6:  F: rcall $66B (_ssd_Waiting_Buffer_Release)
-----          L: 
$0695: $DFEF:  F: rcall $685 (_ssd_Start_I2C)
               F: SSD_ADDR -> TWDR  ...
$0696: $E708:     $78 -> r16
$0697: $9300:     r16 -> [$00BB]
$0698: $00BB:  
$0699: $DFDD:  F: rcall $677 (_ssd_Send_Byte)
-----          L: 
               F: $00 -> TWDR  ...
$069A: $E000:     $00 -> r16
$069B: $9300:     r16 -> [$00BB]
$069C: $00BB:  
$069D: $DFD9:  F: rcall $677 (_ssd_Send_Byte)
-----          L: 
$069E: $910F:  F: -> r16 (-> r16)
$069F: $9300:  F: r16 -> [$00BB] (r16 -> TWDR)
$06A0: $00BB:  
$06A1: $DFD5:  F: rcall $677 (_ssd_Send_Byte)
$06A2: $DFB0:  F: rcall $653 (_ssd_Stop_I2C)
$06A3: $9508:  F: RET (ret)
-----          V: _ssd_Push
-----          L: 
$06A4: $931F:  F: r17 -> (r17 ->)
$06A5: $B71F:  F: p$3F -> r17 (SREG -> r17)
$06A6: $931F:  F: r17 -> (r17 ->)
               F: Z ->  ...
$06A7: $93EF:     r30 ->
$06A8: $93FF:     r31 ->
$06A9: $94F8:  F: 0 -> I (0 -> I)
$06AA: $930F:  F: r16 -> (r16 ->)
-----          L: 
               F: ssd_out_buffer_in -> Z  ...
$06AB: $91E0:     [$05A1] -> r30
$06AC: $05A1:  
$06AD: $91F0:     [$05A2] -> r31
$06AE: $05A2:  
-----          L: 
$06AF: $9631:  F: r30,r31 + $01 (Z + 1)
-----          L: 
               C: if (Z >= @ssd_out_buffer + SSD_SIZE_BUFFER) then goto $06B6 ...
$06B0: $3AE1:     r30 = $A1
$06B1: $E015:     $05 -> r17
$06B2: $07F1:     r31 = r17=
$06B3: $F010:     if ( < ) then goto $6B6
               F: @ssd_out_buffer -> Z  ...
$06B4: $E2E1:     $21 -> r30
$06B5: $E0F5:     $05 -> r31
-----          L: 
               C: if (Z -= ssd_out_buffer_out) then goto $06C2 ...
$06B6: $9110:     [$05A3] -> r17
$06B7: $05A3:  
$06B8: $17E1:     r30 = r17
$06B9: $9110:     [$05A4] -> r17
$06BA: $05A4:  
$06BB: $07F1:     r31 = r17=
$06BC: $F429:     if (Z=0) then goto $6C2
-----          L: 
               C: if (TWINT = 0) then goto $06BD ...
$06BD: $9100:     [$00BC] -> r16
$06BE: $00BC:  
$06BF: $FF07:     if (r16.7=1 then SKIP
$06C0: $CFFC:     goto $6BD (RJMP)
$06C1: $D02C:  F: rcall $6EE (_ssd_Pop)
-----          L: 
-----          L: 
$06C2: $910F:  F: -> r16 (-> r16)
$06C3: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
$06C4: $9100:  F: [$051F] -> r16 (ssd_Last_X -> r16)
$06C5: $051F:  
$06C6: $9110:  F: [$0520] -> r17 (ssd_Last_Y -> r17)
$06C7: $0520:  
$06C8: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 < 128) then goto $06CF ...
$06C9: $3800:     r16 = $80
$06CA: $F020:     if ( < ) then goto $6CF
$06CB: $E000:  F: $00 -> r16 (0 -> r16)
               C: if (r17 < 7) then goto $06CF ...
$06CC: $3017:     r17 = $07
$06CD: $F408:     if ( >= ) then goto $6CF
$06CE: $9513:  F: r17 ++ (r17 ++)
-----          L: 
$06CF: $9300:  F: r16 -> [$051F] (r16 -> ssd_Last_X)
$06D0: $051F:  
$06D1: $9310:  F: r17 -> [$0520] (r17 -> ssd_Last_Y)
$06D2: $0520:  
-----          L: 
               F: Z -> ssd_out_buffer_in  ...
$06D3: $93E0:     r30 -> [$05A1]
$06D4: $05A1:  
$06D5: $93F0:     r31 -> [$05A2]
$06D6: $05A2:  
-----          L: 
               C: if (ssd_out_flag -= 0) then goto $06E8 ...
$06D7: $9100:     [$05A5] -> r16
$06D8: $05A5:  
$06D9: $3000:     r16 = $00
$06DA: $F469:     if (Z=0) then goto $6E8
               F: 1 -> ssd_out_flag  ...
$06DB: $E001:     $01 -> r16
$06DC: $9300:     r16 -> [$05A5]
$06DD: $05A5:  
-----          L: 
$06DE: $DFA6:  F: rcall $685 (_ssd_Start_I2C)
-----          L: 
               F: SSD_ADDR -> TWDR  ...
$06DF: $E708:     $78 -> r16
$06E0: $9300:     r16 -> [$00BB]
$06E1: $00BB:  
$06E2: $DF94:  F: rcall $677 (_ssd_Send_Byte)
-----          L: 
               F: $40 -> TWDR  ...
$06E3: $E400:     $40 -> r16
$06E4: $9300:     r16 -> [$00BB]
$06E5: $00BB:  
$06E6: $DF90:  F: rcall $677 (_ssd_Send_Byte)
-----          L: 
$06E7: $D006:  F: rcall $6EE (_ssd_Pop)
-----          L: 
-----          L: 
               F: -> Z  ...
$06E8: $91FF:     -> r31
$06E9: $91EF:     -> r30
               F: -> SREG  ...
$06EA: $910F:     -> r16
$06EB: $BF0F:     r16 -> p$3F
$06EC: $911F:  F: -> r17 (-> r17)
$06ED: $9508:  F: RET (ret)
-----          V: _ssd_Pop
               F: Z ->  ...
$06EE: $93EF:     r30 ->
$06EF: $93FF:     r31 ->
-----          L: 
               F: ssd_out_buffer_out -> Z  ...
$06F0: $91E0:     [$05A3] -> r30
$06F1: $05A3:  
$06F2: $91F0:     [$05A4] -> r31
$06F3: $05A4:  
               C: if (Z = ssd_out_buffer_in) then goto $0715 ...
$06F4: $9110:     [$05A1] -> r17
$06F5: $05A1:  
$06F6: $17E1:     r30 = r17
$06F7: $9110:     [$05A2] -> r17
$06F8: $05A2:  
$06F9: $07F1:     r31 = r17=
$06FA: $F0D1:     if (Z=1) then goto $715
$06FB: $9631:  F: r30,r31 + $01 (Z + 1)
               C: if (Z >= @ssd_out_buffer + SSD_SIZE_BUFFER) then goto $0702 ...
$06FC: $3AE1:     r30 = $A1
$06FD: $E015:     $05 -> r17
$06FE: $07F1:     r31 = r17=
$06FF: $F010:     if ( < ) then goto $702
               F: @ssd_out_buffer -> Z  ...
$0700: $E2E1:     $21 -> r30
$0701: $E0F5:     $05 -> r31
-----          L: 
               F: [Z] -> TWDR  ...
$0702: $8100:     [Z+$00] -> r16
$0703: $9300:     r16 -> [$00BB]
$0704: $00BB:  
$0705: $E000:  S: $00 -> r16 ($00->r16)
$0706: $9300:  S: r16 -> [$00B9] (r16->TWSR)
$0707: $00B9:  
$0708: $E00C:  S: $0C -> r16 ($0C->r16)
$0709: $9300:  S: r16 -> [$00B8] (r16->TWBR)
$070A: $00B8:  
$070B: $E805:  S: $85 -> r16 ($85->r16)
$070C: $9300:  S: r16 -> [$00BC] (r16->TWCR)
$070D: $00BC:  
-----          L: 
               F: Z -> ssd_out_buffer_out  ...
$070E: $93E0:     r30 -> [$05A3]
$070F: $05A3:  
$0710: $93F0:     r31 -> [$05A4]
$0711: $05A4:  
               F: -> Z  ...
$0712: $91FF:     -> r31
$0713: $91EF:     -> r30
$0714: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$0715: $DF3D:  F: rcall $653 (_ssd_Stop_I2C)
-----          L: 
               F: 0 -> ssd_out_flag  ...
$0716: $E000:     $00 -> r16
$0717: $9300:     r16 -> [$05A5]
$0718: $05A5:  
               F: -> Z  ...
$0719: $91FF:     -> r31
$071A: $91EF:     -> r30
$071B: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Print.alg    ***********
-----          V: _print_string_l_
               F: << Z  ...
$071C: $0FEE:     << r30
$071D: $1FFF:     << r31 <
-----          L: 
$071E: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0722 ...
$071F: $3000:     r16 = $00
$0720: $F409:     if (Z=0) then goto $722
$0721: $9508:  F: RET (ret)
$0722: $DB73:  F: rcall $296 (_ssd_Parse_r16)
$0723: $CFFA:  J: goto $71E (RJMP)
-----          L: 
$0724: $9508:  F: RET (ret)
-----          V: _print_string_
               F: Z -> PRINT_Z_temp  ...
$0725: $93E0:     r30 -> [$05A6]
$0726: $05A6:  
$0727: $93F0:     r31 -> [$05A7]
$0728: $05A7:  
               F: -> Z  ...
$0729: $91FF:     -> r31
$072A: $91EF:     -> r30
               F: << Z  ...
$072B: $0FEE:     << r30
$072C: $1FFF:     << r31 <
-----          L: 
$072D: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0732 ...
$072E: $3000:     r16 = $00
$072F: $F011:     if (Z=1) then goto $732
$0730: $DB65:  F: rcall $296 (_ssd_Parse_r16)
$0731: $CFFB:  J: goto $72D (RJMP)
-----          L: 
$0732: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$0733: $95F6:     r31 >>
$0734: $95E7:     > r30 >>
               F: Z ->  ...
$0735: $93EF:     r30 ->
$0736: $93FF:     r31 ->
               F: PRINT_Z_temp -> Z  ...
$0737: $91E0:     [$05A6] -> r30
$0738: $05A6:  
$0739: $91F0:     [$05A7] -> r31
$073A: $05A7:  
-----          L: 
$073B: $9508:  F: RET (ret)
-----          V: _print_string_v_
-----          L: 
$073C: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
               C: if (r16 = EOS) then goto $0740 ...
$073D: $3000:     r16 = $00
$073E: $F409:     if (Z=0) then goto $740
$073F: $9508:  F: RET (ret)
$0740: $DB55:  F: rcall $296 (_ssd_Parse_r16)
$0741: $CFFA:  J: goto $73C (RJMP)
-----          L: 
$0742: $9508:  F: RET (ret)
-----          V: _print_HEX_
$0743: $2F0F:  F: r31 -> r16 (ZH -> r16)
$0744: $9502:  F: >> r16 << (>>r16<<)
$0745: $D03B:  F: rcall $781 (_Print_HEX_Char)
-----          L: 
$0746: $2F0F:  F: r31 -> r16 (ZH -> r16)
$0747: $D039:  F: rcall $781 (_Print_HEX_Char)
-----          L: 
$0748: $2F0E:  F: r30 -> r16 (ZL -> r16)
$0749: $9502:  F: >> r16 << (>>r16<<)
$074A: $D036:  F: rcall $781 (_Print_HEX_Char)
-----          L: 
$074B: $2F0E:  F: r30 -> r16 (ZL -> r16)
$074C: $D034:  F: rcall $781 (_Print_HEX_Char)
-----          L: 
$074D: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_DEC_
-----          L: 
               F: "0" -> PRINT_Dec0_Flag  ...
$074E: $E300:     $30 -> r16
$074F: $9300:     r16 -> [$05A8]
$0750: $05A8:  
-----          L: 
               F: 10000 -> r17:Word  ...
$0751: $E110:     $10 -> r17
$0752: $E227:     $27 -> r18
$0753: $D019:  F: rcall $76D (_Print_DEC_Char)
-----          L: 
               F: 1000 -> r17:Word  ...
$0754: $EE18:     $E8 -> r17
$0755: $E023:     $03 -> r18
$0756: $D016:  F: rcall $76D (_Print_DEC_Char)
-----          L: 
               F: 100 -> r17:Word  ...
$0757: $E614:     $64 -> r17
$0758: $E020:     $00 -> r18
$0759: $D013:  F: rcall $76D (_Print_DEC_Char)
-----          L: 
               F: 10 -> r17:Word  ...
$075A: $E01A:     $0A -> r17
$075B: $E020:     $00 -> r18
$075C: $D010:  F: rcall $76D (_Print_DEC_Char)
-----          L: 
$075D: $E300:  F: $30 -> r16 ("0" -> r16)
$075E: $0F0E:  F: r16 + r30 (r16 + ZL)
$075F: $DB36:  F: rcall $296 (_ssd_Parse_r16)
$0760: $9508:  F: RET (ret)
-----          L: 
-----          V: _print_BIT_
-----          L: 
               F: << Z  ...
$0761: $0FEE:     << r30
$0762: $1FFF:     << r31 <
$0763: $F008:  C: if (C=1) then goto $765 (C = 0)
$0764: $E300:  F: $30 -> r16 (PRINT_BIT_ZERO_CHAR -> r16)
$0765: $F408:  C: if (C=0) then goto $767 (C = 1)
$0766: $E301:  F: $31 -> r16 (PRINT_BIT_ONE_CHAR -> r16)
$0767: $931F:  F: r17 -> (r17 ->)
$0768: $DB2D:  F: rcall $296 (_ssd_Parse_r16)
$0769: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $0761 ...
$076A: $951A:     r17 --
$076B: $F7A9:     if (Z=0) then goto $761
$076C: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_DEC_Char
$076D: $E300:  F: $30 -> r16 ("0" -> r16)
-----          L: 
               C: if (Z < r17:Word) then goto $0775 ...
$076E: $17E1:     r30 = r17
$076F: $07F2:     r31 = r18=
$0770: $F020:     if ( < ) then goto $775
               F: Z - r17:Word  ...
$0771: $1BE1:     r30 - r17
$0772: $0BF2:     r31 - r18 -
$0773: $9503:  F: r16 ++ (r16 ++)
$0774: $CFF9:  J: goto $76E (RJMP)
-----          L: 
-----          L: 
               C: if (r16 -= "0") then goto $077D ...
$0775: $3300:     r16 = $30
$0776: $F431:     if (Z=0) then goto $77D
$0777: $9110:  F: [$05A8] -> r17 (PRINT_Dec0_Flag -> r17)
$0778: $05A8:  
               C: if (r17 -= "0") then goto $077F ...
$0779: $3310:     r17 = $30
$077A: $F421:     if (Z=0) then goto $77F
-----          L: 
$077B: $E300:  F: $30 -> r16 (PRINT_DEC_ZERO_CHAR -> r16)
-----          L: 
$077C: $C002:  J: goto $77F (RJMP)
-----          L: 
$077D: $9300:  F: r16 -> [$05A8] (r16 -> PRINT_Dec0_Flag)
$077E: $05A8:  
-----          L: 
$077F: $DB16:  F: rcall $296 (_ssd_Parse_r16)
$0780: $9508:  F: RET (ret)
-----          L: 
-----          V: _Print_HEX_Char
$0781: $700F:  F: r16 & $0F (r16 & #b00001111)
               C: if (r16 < 10) then goto $0785 ...
$0782: $300A:     r16 = $0A
$0783: $F408:     if ( >= ) then goto $785
$0784: $5D00:  F: r16 - $D0 (r16 + "0")
               C: if (r16 < 16) then goto $0788 ...
$0785: $3100:     r16 = $10
$0786: $F408:     if ( >= ) then goto $788
$0787: $5C09:  F: r16 - $C9 (r16 + "A"-10)
$0788: $DB0D:  F: rcall $296 (_ssd_Parse_r16)
$0789: $9508:  F: RET (ret)
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          V: _PrintU_string_l_
               F: << Z  ...
$078A: $0FEE:     << r30
$078B: $1FFF:     << r31 <
-----          L: 
$078C: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0790 ...
$078D: $3000:     r16 = $00
$078E: $F409:     if (Z=0) then goto $790
$078F: $9508:  F: RET (ret)
$0790: $DA3F:  F: rcall $1D0 (_UART_PUSH_r16)
$0791: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$0792: $1C42:  
$0793: $CFF8:  J: goto $78C (RJMP)
-----          L: 
$0794: $9508:  F: RET (ret)
-----          V: _PrintU_string_
               F: Z -> PrintU_Z_temp  ...
$0795: $93E0:     r30 -> [$05A9]
$0796: $05A9:  
$0797: $93F0:     r31 -> [$05AA]
$0798: $05AA:  
               F: -> Z  ...
$0799: $91FF:     -> r31
$079A: $91EF:     -> r30
               F: << Z  ...
$079B: $0FEE:     << r30
$079C: $1FFF:     << r31 <
-----          L: 
$079D: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $07A4 ...
$079E: $3000:     r16 = $00
$079F: $F021:     if (Z=1) then goto $7A4
$07A0: $DA2F:  F: rcall $1D0 (_UART_PUSH_r16)
$07A1: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$07A2: $1C42:  
$07A3: $CFF9:  J: goto $79D (RJMP)
-----          L: 
$07A4: $9631:  F: r30,r31 + $01 (Z + 1)
               F: Z >>  ...
$07A5: $95F6:     r31 >>
$07A6: $95E7:     > r30 >>
               F: Z ->  ...
$07A7: $93EF:     r30 ->
$07A8: $93FF:     r31 ->
               F: PrintU_Z_temp -> Z  ...
$07A9: $91E0:     [$05A9] -> r30
$07AA: $05A9:  
$07AB: $91F0:     [$05AA] -> r31
$07AC: $05AA:  
-----          L: 
$07AD: $9508:  F: RET (ret)
-----          V: _PrintU_string_v_
-----          L: 
$07AE: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
               C: if (r16 = EOS) then goto $07B2 ...
$07AF: $3000:     r16 = $00
$07B0: $F409:     if (Z=0) then goto $7B2
$07B1: $9508:  F: RET (ret)
$07B2: $DA1D:  F: rcall $1D0 (_UART_PUSH_r16)
$07B3: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$07B4: $1C42:  
$07B5: $CFF8:  J: goto $7AE (RJMP)
-----          L: 
$07B6: $9508:  F: RET (ret)
-----          V: _PrintU_HEX_
$07B7: $2F0E:  F: r30 -> r16 (ZL -> r16)
$07B8: $9502:  F: >> r16 << (>>r16<<)
$07B9: $D03C:  F: rcall $7F6 (_PrintU_HEX_Char)
-----          L: 
$07BA: $2F0E:  F: r30 -> r16 (ZL -> r16)
$07BB: $D03A:  F: rcall $7F6 (_PrintU_HEX_Char)
-----          L: 
$07BC: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_DEC_
-----          L: 
               F: "0" -> PrintU_Dec0_Flag  ...
$07BD: $E300:     $30 -> r16
$07BE: $9300:     r16 -> [$05AB]
$07BF: $05AB:  
-----          L: 
               F: 10000 -> r17:Word  ...
$07C0: $E110:     $10 -> r17
$07C1: $E227:     $27 -> r18
$07C2: $D01D:  F: rcall $7E0 (_PrintU_DEC_Char)
-----          L: 
               F: 1000 -> r17:Word  ...
$07C3: $EE18:     $E8 -> r17
$07C4: $E023:     $03 -> r18
$07C5: $D01A:  F: rcall $7E0 (_PrintU_DEC_Char)
-----          L: 
               F: 100 -> r17:Word  ...
$07C6: $E614:     $64 -> r17
$07C7: $E020:     $00 -> r18
$07C8: $D017:  F: rcall $7E0 (_PrintU_DEC_Char)
-----          L: 
               F: 10 -> r17:Word  ...
$07C9: $E01A:     $0A -> r17
$07CA: $E020:     $00 -> r18
$07CB: $D014:  F: rcall $7E0 (_PrintU_DEC_Char)
-----          L: 
$07CC: $E300:  F: $30 -> r16 ("0" -> r16)
$07CD: $0F0E:  F: r16 + r30 (r16 + ZL)
$07CE: $DA01:  F: rcall $1D0 (_UART_PUSH_r16)
$07CF: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$07D0: $1C42:  
$07D1: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_BIT_
-----          L: 
               F: << Z  ...
$07D2: $0FEE:     << r30
$07D3: $1FFF:     << r31 <
$07D4: $F008:  C: if (C=1) then goto $7D6 (C = 0)
$07D5: $E300:  F: $30 -> r16 (PrintU_BIT_ZERO_CHAR -> r16)
$07D6: $F408:  C: if (C=0) then goto $7D8 (C = 1)
$07D7: $E301:  F: $31 -> r16 (PrintU_BIT_ONE_CHAR -> r16)
$07D8: $931F:  F: r17 -> (r17 ->)
$07D9: $D9F6:  F: rcall $1D0 (_UART_PUSH_r16)
$07DA: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$07DB: $1C42:  
$07DC: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $07D2 ...
$07DD: $951A:     r17 --
$07DE: $F799:     if (Z=0) then goto $7D2
$07DF: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_DEC_Char
$07E0: $E300:  F: $30 -> r16 ("0" -> r16)
-----          L: 
               C: if (Z < r17:Word) then goto $07E8 ...
$07E1: $17E1:     r30 = r17
$07E2: $07F2:     r31 = r18=
$07E3: $F020:     if ( < ) then goto $7E8
               F: Z - r17:Word  ...
$07E4: $1BE1:     r30 - r17
$07E5: $0BF2:     r31 - r18 -
$07E6: $9503:  F: r16 ++ (r16 ++)
$07E7: $CFF9:  J: goto $7E1 (RJMP)
-----          L: 
-----          L: 
               C: if (r16 -= "0") then goto $07F0 ...
$07E8: $3300:     r16 = $30
$07E9: $F431:     if (Z=0) then goto $7F0
$07EA: $9110:  F: [$05AB] -> r17 (PrintU_Dec0_Flag -> r17)
$07EB: $05AB:  
               C: if (r17 -= "0") then goto $07F2 ...
$07EC: $3310:     r17 = $30
$07ED: $F421:     if (Z=0) then goto $7F2
$07EE: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$07EF: $C002:  J: goto $7F2 (RJMP)
-----          L: 
$07F0: $9300:  F: r16 -> [$05AB] (r16 -> PrintU_Dec0_Flag)
$07F1: $05AB:  
-----          L: 
$07F2: $D9DD:  F: rcall $1D0 (_UART_PUSH_r16)
$07F3: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$07F4: $1C42:  
$07F5: $9508:  F: RET (ret)
-----          L: 
-----          V: _PrintU_HEX_Char
$07F6: $700F:  F: r16 & $0F (r16 & #b00001111)
               C: if (r16 < 10) then goto $07FA ...
$07F7: $300A:     r16 = $0A
$07F8: $F408:     if ( >= ) then goto $7FA
$07F9: $5D00:  F: r16 - $D0 (r16 + "0")
               C: if (r16 < 16) then goto $07FD ...
$07FA: $3100:     r16 = $10
$07FB: $F408:     if ( >= ) then goto $7FD
$07FC: $5C09:  F: r16 - $C9 (r16 + "A"-10)
$07FD: $D9D2:  F: rcall $1D0 (_UART_PUSH_r16)
$07FE: $940E:  F: CALL $1C42 (_wlParse_nextCRC)
$07FF: $1C42:  
$0800: $9508:  F: RET (ret)
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\Logic.alg    ***********
-----          V: _Logic_Event_R_Entr
               F: People_Number ++  ...
$0801: $9100:     [$05AC] -> r16
$0802: $05AC:  
$0803: $9503:     r16 ++
$0804: $9300:     r16 -> [$05AC]
$0805: $05AC:  
               C: if (People_Number = 1) then goto $0812 ...
$0806: $9100:     [$05AC] -> r16
$0807: $05AC:  
$0808: $3001:     r16 = $01
$0809: $F041:     if (Z=1) then goto $812
               C: if (Effect_Direction = 1) then goto $0811 ...
$080A: $9100:     [$05FA] -> r16
$080B: $05FA:  
$080C: $3001:     r16 = $01
$080D: $F019:     if (Z=1) then goto $811
$080E: $E007:  F: $07 -> r16 (CROSSATTEND -> r16)
$080F: $D051:  F: rcall $861 (_Effect_Set_Mode_)
$0810: $9508:  F: RET (ret)
-----          L: 
$0811: $9508:  F: RET (ret)
-----          L: 
               F: 1 -> Effect_Direction  ...
$0812: $E001:     $01 -> r16
$0813: $9300:     r16 -> [$05FA]
$0814: $05FA:  
$0815: $E005:  F: $05 -> r16 (ENTRANCE -> r16)
$0816: $D04A:  F: rcall $861 (_Effect_Set_Mode_)
$0817: $9508:  F: RET (ret)
-----          V: _Logic_Event_L_Entr
               F: People_Number ++  ...
$0818: $9100:     [$05AC] -> r16
$0819: $05AC:  
$081A: $9503:     r16 ++
$081B: $9300:     r16 -> [$05AC]
$081C: $05AC:  
               C: if (People_Number = 1) then goto $0829 ...
$081D: $9100:     [$05AC] -> r16
$081E: $05AC:  
$081F: $3001:     r16 = $01
$0820: $F041:     if (Z=1) then goto $829
               C: if (Effect_Direction = 0) then goto $0828 ...
$0821: $9100:     [$05FA] -> r16
$0822: $05FA:  
$0823: $3000:     r16 = $00
$0824: $F019:     if (Z=1) then goto $828
$0825: $E007:  F: $07 -> r16 (CROSSATTEND -> r16)
$0826: $D03A:  F: rcall $861 (_Effect_Set_Mode_)
$0827: $9508:  F: RET (ret)
-----          L: 
$0828: $9508:  F: RET (ret)
-----          L: 
               F: 0 -> Effect_Direction  ...
$0829: $E000:     $00 -> r16
$082A: $9300:     r16 -> [$05FA]
$082B: $05FA:  
$082C: $E005:  F: $05 -> r16 (ENTRANCE -> r16)
$082D: $D033:  F: rcall $861 (_Effect_Set_Mode_)
$082E: $9508:  F: RET (ret)
-----          V: _Logic_Event_R_Exit
               C: if (People_Number = 0) then goto $0834 ...
$082F: $9100:     [$05AC] -> r16
$0830: $05AC:  
$0831: $3000:     r16 = $00
$0832: $F409:     if (Z=0) then goto $834
$0833: $9508:  F: RET (ret)
               F: People_Number --  ...
$0834: $9100:     [$05AC] -> r16
$0835: $05AC:  
$0836: $950A:     r16 --
$0837: $9300:     r16 -> [$05AC]
$0838: $05AC:  
               C: if (People_Number = 0) then goto $083E ...
$0839: $9100:     [$05AC] -> r16
$083A: $05AC:  
$083B: $3000:     r16 = $00
$083C: $F009:     if (Z=1) then goto $83E
$083D: $9508:  F: RET (ret)
-----          L: 
               F: 0 -> Effect_Direction  ...
$083E: $E000:     $00 -> r16
$083F: $9300:     r16 -> [$05FA]
$0840: $05FA:  
$0841: $E008:  F: $08 -> r16 (EXIT -> r16)
$0842: $D01E:  F: rcall $861 (_Effect_Set_Mode_)
$0843: $9508:  F: RET (ret)
-----          V: _Logic_Event_L_Exit
               C: if (People_Number = 0) then goto $0849 ...
$0844: $9100:     [$05AC] -> r16
$0845: $05AC:  
$0846: $3000:     r16 = $00
$0847: $F409:     if (Z=0) then goto $849
$0848: $9508:  F: RET (ret)
               F: People_Number --  ...
$0849: $9100:     [$05AC] -> r16
$084A: $05AC:  
$084B: $950A:     r16 --
$084C: $9300:     r16 -> [$05AC]
$084D: $05AC:  
               C: if (People_Number = 0) then goto $0853 ...
$084E: $9100:     [$05AC] -> r16
$084F: $05AC:  
$0850: $3000:     r16 = $00
$0851: $F009:     if (Z=1) then goto $853
$0852: $9508:  F: RET (ret)
-----          L: 
               F: 1 -> Effect_Direction  ...
$0853: $E001:     $01 -> r16
$0854: $9300:     r16 -> [$05FA]
$0855: $05FA:  
$0856: $E008:  F: $08 -> r16 (EXIT -> r16)
$0857: $D009:  F: rcall $861 (_Effect_Set_Mode_)
$0858: $9508:  F: RET (ret)
-----          V: _Logic_Event_Standby
               F: 0 -> Effect_Direction  ...
$0859: $E000:     $00 -> r16
$085A: $9300:     r16 -> [$05FA]
$085B: $05FA:  
               F: 0 -> People_Number  ...
$085C: $9300:     r16 -> [$05AC]
$085D: $05AC:  
$085E: $E004:  F: $04 -> r16 (STANDBY -> r16)
$085F: $D001:  F: rcall $861 (_Effect_Set_Mode_)
$0860: $9508:  F: RET (ret)
-----          V: _Effect_Set_Mode_
$0861: $931F:  F: r17 -> (r17 ->)
$0862: $E010:  F: $00 -> r17 (0 -> r17)
$0863: $9300:  F: r16 -> [$05F7] (r16 -> Effect_Mode)
$0864: $05F7:  
               C: if (r16 = GAP) then goto $0867 ...
$0865: $3003:     r16 = $03
$0866: $F401:     if (Z=0) then goto $867
               C: if (r16 = STANDBY) then goto $086B ...
$0867: $3004:     r16 = $04
$0868: $F411:     if (Z=0) then goto $86B
$0869: $9110:  F: [$0602] -> r17 (Effect_Standby -> r17)
$086A: $0602:  
               C: if (r16 = ENTRANCE) then goto $086F ...
$086B: $3005:     r16 = $05
$086C: $F411:     if (Z=0) then goto $86F
$086D: $9110:  F: [$0606] -> r17 (Effect_Entrance -> r17)
$086E: $0606:  
               C: if (r16 = ATTEND) then goto $0873 ...
$086F: $3006:     r16 = $06
$0870: $F411:     if (Z=0) then goto $873
$0871: $9110:  F: [$060A] -> r17 (Effect_Attend -> r17)
$0872: $060A:  
               C: if (r16 = CROSSATTEND) then goto $0877 ...
$0873: $3007:     r16 = $07
$0874: $F411:     if (Z=0) then goto $877
$0875: $9110:  F: [$060E] -> r17 (Effect_CrossAttend -> r17)
$0876: $060E:  
               C: if (r16 = EXIT) then goto $087B ...
$0877: $3008:     r16 = $08
$0878: $F411:     if (Z=0) then goto $87B
$0879: $9110:  F: [$0612] -> r17 (Effect_Exit -> r17)
$087A: $0612:  
$087B: $9310:  F: r17 -> [$05F8] (r17 -> Effect_Number)
$087C: $05F8:  
$087D: $911F:  F: -> r17 (-> r17)
$087E: $9508:  F: RET (ret)
-----          V: _Effect_End
-----          L: 
               C: if (Effect_Demo_Mode -= 0) then goto $08CC ...
$087F: $9100:     [$05F9] -> r16
$0880: $05F9:  
$0881: $3000:     r16 = $00
$0882: $F009:     if (Z=1) then goto $884
$0883: $C048:     goto $8CC (RJMP)
-----          L: 
-----          L: 
$0884: $9100:  F: [$05F7] -> r16 (Effect_Mode -> r16)
$0885: $05F7:  
               C: if (r16 -= GAP) then goto $088B ...
$0886: $3003:     r16 = $03
$0887: $F419:     if (Z=0) then goto $88B
$0888: $E004:  F: $04 -> r16 (STANDBY -> r16)
$0889: $DFD7:  F: rcall $861 (_Effect_Set_Mode_)
$088A: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= STANDBY) then goto $0897 ...
$088B: $3004:     r16 = $04
$088C: $F451:     if (Z=0) then goto $897
               C: if (Effect_Number = 255) then goto $0895 ...
$088D: $9100:     [$05F8] -> r16
$088E: $05F8:  
$088F: $3F0F:     r16 = $FF
$0890: $F021:     if (Z=1) then goto $895
               F: 255 -> Effect_Number  ...
$0891: $EF0F:     $FF -> r16
$0892: $9300:     r16 -> [$05F8]
$0893: $05F8:  
$0894: $9508:  F: RET (ret)
-----          L: 
$0895: $DFC3:  F: rcall $859 (_Logic_Event_Standby)
$0896: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= ENTRANCE) then goto $08A0 ...
$0897: $3005:     r16 = $05
$0898: $F439:     if (Z=0) then goto $8A0
$0899: $E006:  F: $06 -> r16 (ATTEND -> r16)
$089A: $DFC6:  F: rcall $861 (_Effect_Set_Mode_)
               F: Effect_Work_Timer -> Stair_Work_Counter  ...
$089B: $9100:     [$0619] -> r16
$089C: $0619:  
$089D: $9300:     r16 -> [$05F6]
$089E: $05F6:  
$089F: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= ATTEND) then goto $08BB ...
$08A0: $3006:     r16 = $06
$08A1: $F4C9:     if (Z=0) then goto $8BB
               C: if (Stair_Work_Counter --) then goto $08AB ...
$08A2: $9100:     [$05F6] -> r16
$08A3: $05F6:  
$08A4: $5001:     r16 - $01
$08A5: $9300:     r16 -> [$05F6]
$08A6: $05F6:  
$08A7: $F419:     if (Z=0) then goto $8AB
$08A8: $E008:  F: $08 -> r16 (EXIT -> r16)
$08A9: $DFB7:  F: rcall $861 (_Effect_Set_Mode_)
$08AA: $9508:  F: RET (ret)
-----          L: 
               C: if (Effect_Number = 255) then goto $08B8 ...
$08AB: $9100:     [$05F8] -> r16
$08AC: $05F8:  
$08AD: $3F0F:     r16 = $FF
$08AE: $F049:     if (Z=1) then goto $8B8
               F: Stair_Work_Counter ++  ...
$08AF: $9100:     [$05F6] -> r16
$08B0: $05F6:  
$08B1: $9503:     r16 ++
$08B2: $9300:     r16 -> [$05F6]
$08B3: $05F6:  
               F: 255 -> Effect_Number  ...
$08B4: $EF0F:     $FF -> r16
$08B5: $9300:     r16 -> [$05F8]
$08B6: $05F8:  
$08B7: $9508:  F: RET (ret)
-----          L: 
$08B8: $E006:  F: $06 -> r16 (ATTEND -> r16)
$08B9: $DFA7:  F: rcall $861 (_Effect_Set_Mode_)
$08BA: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= CROSSATTEND) then goto $08C7 ...
$08BB: $3007:     r16 = $07
$08BC: $F451:     if (Z=0) then goto $8C7
               C: if (Stair_Work_Counter --) then goto $08C4 ...
$08BD: $9100:     [$05F6] -> r16
$08BE: $05F6:  
$08BF: $5001:     r16 - $01
$08C0: $9300:     r16 -> [$05F6]
$08C1: $05F6:  
$08C2: $F409:     if (Z=0) then goto $8C4
$08C3: $9508:  F: RET (ret)
$08C4: $E008:  F: $08 -> r16 (EXIT -> r16)
$08C5: $DF9B:  F: rcall $861 (_Effect_Set_Mode_)
$08C6: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= EXIT) then goto $08CB ...
$08C7: $3008:     r16 = $08
$08C8: $F411:     if (Z=0) then goto $8CB
$08C9: $DF8F:  F: rcall $859 (_Logic_Event_Standby)
$08CA: $9508:  F: RET (ret)
-----          L: 
$08CB: $9508:  F: RET (ret)
-----          V: 
               C: if (Effect_Mode < 4) then goto $08D3 ...
$08CC: $9100:     [$05F7] -> r16
$08CD: $05F7:  
$08CE: $3004:     r16 = $04
$08CF: $F018:     if ( < ) then goto $8D3
$08D0: $E003:  F: $03 -> r16 (GAP -> r16)
$08D1: $DF8F:  F: rcall $861 (_Effect_Set_Mode_)
$08D2: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$08D3: $9100:  F: [$062F] -> r16 (D_Menu_Mode_Pos -> r16)
$08D4: $062F:  
$08D5: $5F0F:  F: r16 - $FF (r16 + 1)
$08D6: $DF8A:  F: rcall $861 (_Effect_Set_Mode_)
$08D7: $9508:  F: RET (ret)
-----          V: _Logic_Init
               F: 0 -> People_Number  ...
$08D8: $E000:     $00 -> r16
$08D9: $9300:     r16 -> [$05AC]
$08DA: $05AC:  
$08DB: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Stairs.alg    ***********
-----          V: _Stairs_Init
$08DC: $9508:  F: RET (ret)
-----          V: _Stairs_Vis_ReDraw
               F: Z ->  ...
$08DD: $93EF:     r30 ->
$08DE: $93FF:     r31 ->
               F: Y ->  ...
$08DF: $93CF:     r28 ->
$08E0: $93DF:     r29 ->
               F: r0:Word ->  ...
$08E1: $920F:     r0 ->
$08E2: $921F:     r1 ->
-----          L: 
-----          L: 
-----          L: 
$08E3: $E001:  F: $01 -> r16 (1 -> r16)
$08E4: $E010:  F: $00 -> r17 (0 -> r17)
$08E5: $D989:  F: rcall $26F (_ssd_Pos_)
-----          L: 
$08E6: $E118:  F: $18 -> r17 (24 -> r17)
$08E7: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$08E8: $0616:  
$08E9: $1B10:  F: r17 - r16 (r17 - r16)
$08EA: $2F01:  F: r17 -> r16 (r17 -> r16)
$08EB: $0F11:  F: << r17 (<<r17)
$08EC: $0F11:  F: << r17 (<<r17)
$08ED: $0F10:  F: r17 + r16 (r17 + r16)
-----          L: 
$08EE: $9516:  F: r17 >> (r17>>)
$08EF: $9513:  F: r17 ++ (r17++)
-----          L: 
$08F0: $E000:  F: $00 -> r16 (0 -> r16)
$08F1: $DDB2:  F: rcall $6A4 (_ssd_Push)
               C: if (r17 --) then goto $08F0 ...
$08F2: $951A:     r17 --
$08F3: $F7E1:     if (Z=0) then goto $8F0
-----          L: 
               F: 0 -> Y  ...
$08F4: $E0C0:     $00 -> r28
$08F5: $E0D0:     $00 -> r29
-----          L: 
               C: if (Effect_Direction = 1) then goto $0924 ...
$08F6: $9100:     [$05FA] -> r16
$08F7: $05FA:  
$08F8: $3001:     r16 = $01
$08F9: $F151:     if (Z=1) then goto $924
-----          L: 
-----          L: 
-----          L: 
               F: @Stair_Level_Out -> Z  ...
$08FA: $EAED:     $AD -> r30
$08FB: $E0F5:     $05 -> r31
               F: Z + Yh  ...
$08FC: $0FED:     r30 + r29
$08FD: $E010:     $00 -> r17
$08FE: $1FF1:     r31 + r17 +
-----          L: 
$08FF: $95C0:  F: | r28 (|Yl)
$0900: $9101:  F: [Z++] -> r16 ([Z++] -> r16)
$0901: $9F0C:  F: r16 * r28 (r16 * Yl)
$0902: $2D11:  F: r1 -> r17 (r1 -> r17)
$0903: $95C0:  F: | r28 (|Yl)
-----          L: 
$0904: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0905: $9F0C:  F: r16 * r28 (r16 * Yl)
$0906: $0D11:  F: r17 + r1 (r17 + r1)
-----          L: 
$0907: $D014:  F: rcall $91C (_Disp_8_Convert)
$0908: $2F01:  F: r17 -> r16 (r17 -> r16)
$0909: $DD9A:  F: rcall $6A4 (_ssd_Push)
-----          L: 
               C: if (Yl = 192) then goto $090E ...
$090A: $3CC0:     r28 = $C0
$090B: $F411:     if (Z=0) then goto $90E
$090C: $E000:  F: $00 -> r16 (0 -> r16)
$090D: $DD96:  F: rcall $6A4 (_ssd_Push)
-----          L: 
               F: Y + 64  ...
$090E: $5CC0:     r28 - $C0
$090F: $4FDF:     r29 - $FF -
$0910: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$0911: $0616:  
               C: if (Yh < r16) then goto $08FA ...
$0912: $17D0:     r29 = r16
$0913: $F330:     if ( < ) then goto $8FA
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0914: $D94F:  F: rcall $264 (_ssd_Clr_rest_line)
-----          L: 
-----          L: 
-----          L: 
               F: -> r0:Word  ...
$0915: $901F:     -> r1
$0916: $900F:     -> r0
               F: -> Y  ...
$0917: $91DF:     -> r29
$0918: $91CF:     -> r28
               F: -> Z  ...
$0919: $91FF:     -> r31
$091A: $91EF:     -> r30
$091B: $9508:  F: RET (ret)
-----          V: _Disp_8_Convert
-----          L: 
$091C: $E70F:  F: $7F -> r16 (#b01111111 -> r16)
-----          L: 
$091D: $5210:  F: r17 - $20 (r17 - 32)
$091E: $F010:  C: if (C=1) then goto $921 (C = 1)
$091F: $9506:  F: r16 >> (r16 >>)
$0920: $CFFC:  J: goto $91D (RJMP)
-----          L: 
$0921: $9500:  F: | r16 (|r16)
$0922: $2F10:  F: r16 -> r17 (r16 -> r17)
$0923: $9508:  F: RET (ret)
-----          V: 
-----          L: 
-----          L: 
               F: @Stair_Level_Out -> Z  ...
$0924: $EAED:     $AD -> r30
$0925: $E0F5:     $05 -> r31
               F: Z + Stairs_Number  ...
$0926: $9110:     [$0616] -> r17
$0927: $0616:  
$0928: $0FE1:     r30 + r17
$0929: $E010:     $00 -> r17
$092A: $1FF1:     r31 + r17 +
               F: Z - Yh  ...
$092B: $1BED:     r30 - r29
$092C: $40F0:     r31 - $00 -
-----          L: 
$092D: $9731:  F: r30,r31 - $01 (Z - 1)
$092E: $95C0:  F: | r28 (|Yl)
$092F: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0930: $9F0C:  F: r16 * r28 (r16 * Yl)
$0931: $2D11:  F: r1 -> r17 (r1 -> r17)
$0932: $95C0:  F: | r28 (|Yl)
-----          L: 
$0933: $9731:  F: r30,r31 - $01 (Z - 1)
$0934: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0935: $9F0C:  F: r16 * r28 (r16 * Yl)
$0936: $0D11:  F: r17 + r1 (r17 + r1)
-----          L: 
$0937: $DFE4:  F: rcall $91C (_Disp_8_Convert)
$0938: $2F01:  F: r17 -> r16 (r17 -> r16)
$0939: $DD6A:  F: rcall $6A4 (_ssd_Push)
-----          L: 
               C: if (Yl = 192) then goto $093E ...
$093A: $3CC0:     r28 = $C0
$093B: $F411:     if (Z=0) then goto $93E
$093C: $E000:  F: $00 -> r16 (0 -> r16)
$093D: $DD66:  F: rcall $6A4 (_ssd_Push)
-----          L: 
               F: Y + 64  ...
$093E: $5CC0:     r28 - $C0
$093F: $4FDF:     r29 - $FF -
$0940: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$0941: $0616:  
               C: if (Yh < r16) then goto $0924 ...
$0942: $17D0:     r29 = r16
$0943: $F300:     if ( < ) then goto $924
$0944: $CFCF:  J: goto $914 (RJMP)
-----          V: _Load_from_EEPROM
               F: Y ->  ...
$0945: $93CF:     r28 ->
$0946: $93DF:     r29 ->
               F: Z ->  ...
$0947: $93EF:     r30 ->
$0948: $93FF:     r31 ->
               F: @EE_Effect_Set_Table -> Y  ...
$0949: $E0C2:     $02 -> r28
$094A: $E0D0:     $00 -> r29
               F: @Effect_Set_Table -> Z  ...
$094B: $EFEE:     $FE -> r30
$094C: $E0F5:     $05 -> r31
$094D: $E200:  F: $20 -> r16 (SET_TABLE_SIZE -> r16)
-----          L: 
$094E: $930F:  F: r16 -> (r16 ->)
               F: EE[Y++] -> [Z++]  ...
$094F: $BDC1:     r28 -> p$21
$0950: $BDD2:     r29 -> p$22
$0951: $9621:     r28,r29 + $01
$0952: $9AF8:     1 -> p$1F.0
$0953: $B500:     p$20 -> r16
$0954: $9301:     r16 -> [Z++]
$0955: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $094E ...
$0956: $950A:     r16 --
$0957: $F7B1:     if (Z=0) then goto $94E
               F: -> Z  ...
$0958: $91FF:     -> r31
$0959: $91EF:     -> r30
               F: -> Y  ...
$095A: $91DF:     -> r29
$095B: $91CF:     -> r28
$095C: $9508:  F: RET (ret)
-----          V: _Save_to_EEPROM
               F: Y ->  ...
$095D: $93CF:     r28 ->
$095E: $93DF:     r29 ->
               F: Z ->  ...
$095F: $93EF:     r30 ->
$0960: $93FF:     r31 ->
               F: @EE_Effect_Set_Table -> Y  ...
$0961: $E0C2:     $02 -> r28
$0962: $E0D0:     $00 -> r29
               F: @Effect_Set_Table -> Z  ...
$0963: $EFEE:     $FE -> r30
$0964: $E0F5:     $05 -> r31
$0965: $E200:  F: $20 -> r16 (SET_TABLE_SIZE -> r16)
-----          L: 
$0966: $930F:  F: r16 -> (r16 ->)
               F: [Z++] -> EE[Y++]  ...
$0967: $9101:     [Z++] -> r16
$0968: $BDC1:     r28 -> p$21
$0969: $BDD2:     r29 -> p$22
$096A: $9621:     r28,r29 + $01
$096B: $BD00:     r16 -> p$20
$096C: $9AFA:     1 -> p$1F.2
$096D: $9AF9:     1 -> p$1F.1
$096E: $99F9:     if (p$1F.1=0 then SKIP
$096F: $CFFE:     goto $96E (RJMP)
$0970: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0966 ...
$0971: $950A:     r16 --
$0972: $F799:     if (Z=0) then goto $966
               F: -> Z  ...
$0973: $91FF:     -> r31
$0974: $91EF:     -> r30
               F: -> Y  ...
$0975: $91DF:     -> r29
$0976: $91CF:     -> r28
$0977: $9508:  F: RET (ret)
-----          V: _Load_from_FLASH
               F: Y ->  ...
$0978: $93CF:     r28 ->
$0979: $93DF:     r29 ->
               F: Z ->  ...
$097A: $93EF:     r30 ->
$097B: $93FF:     r31 ->
               F: 2*FLASH_Effect_Set_Table -> Z  ...
$097C: $E1E8:     $18 -> r30
$097D: $E1F3:     $13 -> r31
               F: @Effect_Set_Table -> Y  ...
$097E: $EFCE:     $FE -> r28
$097F: $E0D5:     $05 -> r29
$0980: $E200:  F: $20 -> r16 (SET_TABLE_SIZE -> r16)
-----          L: 
$0981: $930F:  F: r16 -> (r16 ->)
               F: LPM[Z++] -> [Y++]  ...
$0982: $9105:     LPM[Z++] -> r16
$0983: $9309:     r16 -> [Y++]
$0984: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0981 ...
$0985: $950A:     r16 --
$0986: $F7D1:     if (Z=0) then goto $981
               F: -> Z  ...
$0987: $91FF:     -> r31
$0988: $91EF:     -> r30
               F: -> Y  ...
$0989: $91DF:     -> r29
$098A: $91CF:     -> r28
$098B: $9508:  F: RET (ret)
-----          L: 
-----          L: FLASH_Effect_Set_Table
$098C: $00 $0F $0F $0F
$098E: $00 $07 $0F $0F
$0990: $00 $07 $0F $0F
$0992: $00 $07 $0F $0F
$0994: $00 $07 $0F $0F
$0996: $00 $07 $0F $0F
$0998: $18 $02 $00 $08
$099A: $00 $00 $00 $00
-----          V: _Load_Plasma
               F: Y ->  ...
$099C: $93CF:     r28 ->
$099D: $93DF:     r29 ->
               F: Z ->  ...
$099E: $93EF:     r30 ->
$099F: $93FF:     r31 ->
               F: 4 -> Effect_Overall  ...
$09A0: $E004:     $04 -> r16
$09A1: $9300:     r16 -> [$05FE]
$09A2: $05FE:  
               F: 2*FLASH_Effect_VScheme_Table + 4*(4*5) -> Z  ...
$09A3: $E3E0:     $30 -> r30
$09A4: $E1F4:     $14 -> r31
$09A5: $C03C:  J: goto $9E2 (RJMP)
-----          V: _Load_Fire
               F: Y ->  ...
$09A6: $93CF:     r28 ->
$09A7: $93DF:     r29 ->
               F: Z ->  ...
$09A8: $93EF:     r30 ->
$09A9: $93FF:     r31 ->
               F: 3 -> Effect_Overall  ...
$09AA: $E003:     $03 -> r16
$09AB: $9300:     r16 -> [$05FE]
$09AC: $05FE:  
               F: 2*FLASH_Effect_VScheme_Table + 3*(4*5) -> Z  ...
$09AD: $E1EC:     $1C -> r30
$09AE: $E1F4:     $14 -> r31
$09AF: $C032:  J: goto $9E2 (RJMP)
-----          V: _Load_Rain
               F: Y ->  ...
$09B0: $93CF:     r28 ->
$09B1: $93DF:     r29 ->
               F: Z ->  ...
$09B2: $93EF:     r30 ->
$09B3: $93FF:     r31 ->
               F: 2 -> Effect_Overall  ...
$09B4: $E002:     $02 -> r16
$09B5: $9300:     r16 -> [$05FE]
$09B6: $05FE:  
               F: 2*FLASH_Effect_VScheme_Table + 2*(4*5) -> Z  ...
$09B7: $E0E8:     $08 -> r30
$09B8: $E1F4:     $14 -> r31
$09B9: $C028:  J: goto $9E2 (RJMP)
-----          V: _Load_Wave
               F: Y ->  ...
$09BA: $93CF:     r28 ->
$09BB: $93DF:     r29 ->
               F: Z ->  ...
$09BC: $93EF:     r30 ->
$09BD: $93FF:     r31 ->
               F: 1 -> Effect_Overall  ...
$09BE: $E001:     $01 -> r16
$09BF: $9300:     r16 -> [$05FE]
$09C0: $05FE:  
               F: 2*FLASH_Effect_VScheme_Table + 1*(4*5) -> Z  ...
$09C1: $EFE4:     $F4 -> r30
$09C2: $E1F3:     $13 -> r31
$09C3: $C01E:  J: goto $9E2 (RJMP)
-----          V: _Load_VScheme
               C: if (r16 = 0) then goto $09D8 ...
$09C4: $3000:     r16 = $00
$09C5: $F091:     if (Z=1) then goto $9D8
               C: if (r16 = 1) then goto $09BA ...
$09C6: $3001:     r16 = $01
$09C7: $F391:     if (Z=1) then goto $9BA
               C: if (r16 = 2) then goto $09B0 ...
$09C8: $3002:     r16 = $02
$09C9: $F331:     if (Z=1) then goto $9B0
               C: if (r16 = 3) then goto $09A6 ...
$09CA: $3003:     r16 = $03
$09CB: $F2D1:     if (Z=1) then goto $9A6
               C: if (r16 = 4) then goto $099C ...
$09CC: $3004:     r16 = $04
$09CD: $F271:     if (Z=1) then goto $99C
-----          L: 
               C: if (r16 = 5) then goto $0A36 ...
$09CE: $3005:     r16 = $05
$09CF: $F409:     if (Z=0) then goto $9D1
$09D0: $C065:     goto $A36 (RJMP)
               C: if (r16 = 6) then goto $0A2C ...
$09D1: $3006:     r16 = $06
$09D2: $F409:     if (Z=0) then goto $9D4
$09D3: $C058:     goto $A2C (RJMP)
               C: if (r16 = 7) then goto $0A22 ...
$09D4: $3007:     r16 = $07
$09D5: $F409:     if (Z=0) then goto $9D7
$09D6: $C04B:     goto $A22 (RJMP)
-----          L: 
$09D7: $9508:  F: RET (RET)
-----          V: _Load_Base
               F: Y ->  ...
$09D8: $93CF:     r28 ->
$09D9: $93DF:     r29 ->
               F: Z ->  ...
$09DA: $93EF:     r30 ->
$09DB: $93FF:     r31 ->
               F: 0 -> Effect_Overall  ...
$09DC: $E000:     $00 -> r16
$09DD: $9300:     r16 -> [$05FE]
$09DE: $05FE:  
               F: 2*FLASH_Effect_VScheme_Table + 0*(4*5) -> Z  ...
$09DF: $EEE0:     $E0 -> r30
$09E0: $E1F3:     $13 -> r31
$09E1: $C000:  J: goto $9E2 (RJMP)
-----          V: _Load_VScheme_
               F: @Effect_Standby -> Y  ...
$09E2: $E0C2:     $02 -> r28
$09E3: $E0D6:     $06 -> r29
$09E4: $E104:  F: $14 -> r16 (4*5 -> r16)
-----          L: 
$09E5: $930F:  F: r16 -> (r16 ->)
               F: LPM[Z++] -> [Y++]  ...
$09E6: $9105:     LPM[Z++] -> r16
$09E7: $9309:     r16 -> [Y++]
$09E8: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $09E5 ...
$09E9: $950A:     r16 --
$09EA: $F7D1:     if (Z=0) then goto $9E5
               F: -> Z  ...
$09EB: $91FF:     -> r31
$09EC: $91EF:     -> r30
               F: -> Y  ...
$09ED: $91DF:     -> r29
$09EE: $91CF:     -> r28
$09EF: $9508:  F: RET (ret)
-----          L: 
-----          L: FLASH_Effect_VScheme_Table
$09F0: $00 $07 $0F $0F
$09F2: $00 $07 $0F $0F
$09F4: $00 $07 $0F $0F
$09F6: $00 $07 $0F $0F
$09F8: $00 $07 $0F $0F
-----          L: 
$09FA: $01 $07 $0F $0F
$09FC: $01 $07 $0F $0F
$09FE: $01 $07 $0F $0F
$0A00: $01 $07 $0F $0F
$0A02: $01 $07 $0F $0F
-----          L: 
$0A04: $02 $07 $0F $0F
$0A06: $02 $07 $0F $0F
$0A08: $02 $07 $0F $0F
$0A0A: $02 $07 $0F $0F
$0A0C: $02 $07 $0F $0F
-----          L: 
$0A0E: $03 $07 $0F $0F
$0A10: $03 $07 $0F $0F
$0A12: $03 $07 $0F $0F
$0A14: $03 $07 $0F $0F
$0A16: $03 $07 $0F $0F
-----          L: 
$0A18: $04 $07 $0F $0F
$0A1A: $04 $07 $0F $0F
$0A1C: $04 $07 $0F $0F
$0A1E: $04 $07 $0F $0F
$0A20: $04 $07 $0F $0F
-----          V: _Load_Preset_2
               F: Y ->  ...
$0A22: $93CF:     r28 ->
$0A23: $93DF:     r29 ->
               F: Z ->  ...
$0A24: $93EF:     r30 ->
$0A25: $93FF:     r31 ->
               F: 7 -> Effect_Overall  ...
$0A26: $E007:     $07 -> r16
$0A27: $9300:     r16 -> [$05FE]
$0A28: $05FE:  
               F: @EE_Preset_Table + 2*(4*5) -> Z  ...
$0A29: $E4EA:     $4A -> r30
$0A2A: $E0F0:     $00 -> r31
$0A2B: $9508:  F: RET (RET)
-----          V: _Load_Preset_1
               F: Y ->  ...
$0A2C: $93CF:     r28 ->
$0A2D: $93DF:     r29 ->
               F: Z ->  ...
$0A2E: $93EF:     r30 ->
$0A2F: $93FF:     r31 ->
               F: 6 -> Effect_Overall  ...
$0A30: $E006:     $06 -> r16
$0A31: $9300:     r16 -> [$05FE]
$0A32: $05FE:  
               F: @EE_Preset_Table + 1*(4*5) -> Z  ...
$0A33: $E3E6:     $36 -> r30
$0A34: $E0F0:     $00 -> r31
$0A35: $9508:  F: RET (RET)
-----          V: _Load_Preset_0
               F: Y ->  ...
$0A36: $93CF:     r28 ->
$0A37: $93DF:     r29 ->
               F: Z ->  ...
$0A38: $93EF:     r30 ->
$0A39: $93FF:     r31 ->
               F: 5 -> Effect_Overall  ...
$0A3A: $E005:     $05 -> r16
$0A3B: $9300:     r16 -> [$05FE]
$0A3C: $05FE:  
               F: @EE_Preset_Table + 0*(4*5) -> Z  ...
$0A3D: $E2E2:     $22 -> r30
$0A3E: $E0F0:     $00 -> r31
$0A3F: $C000:  J: goto $A40 (RJMP)
-----          V: _Load_Preset_from_EEPROM
               F: @Effect_Standby -> Y  ...
$0A40: $E0C2:     $02 -> r28
$0A41: $E0D6:     $06 -> r29
$0A42: $E104:  F: $14 -> r16 (4*5 -> r16)
-----          L: 
$0A43: $930F:  F: r16 -> (r16 ->)
               F: EE[Z++] -> [Y++]  ...
$0A44: $BDE1:     r30 -> p$21
$0A45: $BDF2:     r31 -> p$22
$0A46: $9631:     r30,r31 + $01
$0A47: $9AF8:     1 -> p$1F.0
$0A48: $B500:     p$20 -> r16
$0A49: $9309:     r16 -> [Y++]
$0A4A: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0A43 ...
$0A4B: $950A:     r16 --
$0A4C: $F7B1:     if (Z=0) then goto $A43
               F: -> Z  ...
$0A4D: $91FF:     -> r31
$0A4E: $91EF:     -> r30
               F: -> Y  ...
$0A4F: $91DF:     -> r29
$0A50: $91CF:     -> r28
$0A51: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          V: _Menu_Parse
               F: X ->  ...
$0A52: $93AF:     r26 ->
$0A53: $93BF:     r27 ->
               F: Y ->  ...
$0A54: $93CF:     r28 ->
$0A55: $93DF:     r29 ->
               F: Z ->  ...
$0A56: $93EF:     r30 ->
$0A57: $93FF:     r31 ->
$0A58: $932F:  F: r18 -> (Temp ->)
-----          L: _Menu_Parse_Break
-----          L: 
               F: 1 -> Menu_Draw_Flag  ...
$0A59: $E001:     $01 -> r16
$0A5A: $9300:     r16 -> [$062A]
$0A5B: $062A:  
$0A5C: $E000:  F: $00 -> r16 (0 -> r16)
$0A5D: $E011:  F: $01 -> r17 (MENU_DISPL_START_LINE -> r17)
$0A5E: $D810:  F: rcall $26F (_ssd_Pos_)
-----          L: 
-----          L: 
-----          L: _Menu_ReParse
               F: Menu_Pointer -> Z  ...
$0A5F: $91E0:     [$0624] -> r30
$0A60: $0624:  
$0A61: $91F0:     [$0625] -> r31
$0A62: $0625:  
               F: << Z  ...
$0A63: $0FEE:     << r30
$0A64: $1FFF:     << r31 <
-----          L: 
$0A65: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 -= TITLE) then goto $0AD0 ...
$0A66: $3001:     r16 = $01
$0A67: $F009:     if (Z=1) then goto $A69
$0A68: $C067:     goto $AD0 (RJMP)
-----          L: 
$0A69: $9120:  F: [$0626] -> r18 (Menu_Action -> Temp)
$0A6A: $0626:  
               C: if (Temp -= HOME) then goto $0A77 ...
$0A6B: $3020:     r18 = $00
$0A6C: $F451:     if (Z=0) then goto $A77
               F: D_Menu -> Menu_Pointer  ...
$0A6D: $EC0B:     $CB -> r16
$0A6E: $9300:     r16 -> [$0624]
$0A6F: $0624:  
$0A70: $E00C:     $0C -> r16
$0A71: $9300:     r16 -> [$0625]
$0A72: $0625:  
               F: SHOW -> Menu_Action  ...
$0A73: $E001:     $01 -> r16
$0A74: $9300:     r16 -> [$0626]
$0A75: $0626:  
$0A76: $CFE8:  J: goto $A5F (RJMP)
-----          L: 
-----          L: 
$0A77: $D23C:  F: rcall $CB4 (_Find_End_String)
-----          L: 
               F: LPM[Z++]:Word -> r16:Word  ...
$0A78: $9105:     LPM[Z++] -> r16
$0A79: $9115:     LPM[Z++] -> r17
               C: if (Temp -= ESC) then goto $0A84 ...
$0A7A: $3023:     r18 = $03
$0A7B: $F441:     if (Z=0) then goto $A84
               F: r16:Word -> Menu_Pointer  ...
$0A7C: $9300:     r16 -> [$0624]
$0A7D: $0624:  
$0A7E: $9310:     r17 -> [$0625]
$0A7F: $0625:  
               F: SHOW -> Menu_Action  ...
$0A80: $E001:     $01 -> r16
$0A81: $9300:     r16 -> [$0626]
$0A82: $0626:  
$0A83: $CFDB:  J: goto $A5F (RJMP)
-----          L: 
-----          L: 
               C: if (Temp -= UP) then goto $0A92 ...
$0A84: $3026:     r18 = $06
$0A85: $F461:     if (Z=0) then goto $A92
               F: LPM[Z++]:Word -> r16:Word  ...
$0A86: $9105:     LPM[Z++] -> r16
$0A87: $9115:     LPM[Z++] -> r17
$0A88: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0A89: $8100:  F: [Z] -> r16 ([Z] -> r16)
               C: if (r16 >= 2) then goto $0A8D ...
$0A8A: $3002:     r16 = $02
$0A8B: $F008:     if ( < ) then goto $A8D
$0A8C: $950A:  F: r16 -- (r16 --)
$0A8D: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0A8E: $E001:     $01 -> r16
$0A8F: $9300:     r16 -> [$0626]
$0A90: $0626:  
$0A91: $CFCD:  J: goto $A5F (RJMP)
-----          L: 
-----          L: 
               C: if (Temp -= DOWN) then goto $0AA6 ...
$0A92: $3027:     r18 = $07
$0A93: $F491:     if (Z=0) then goto $AA6
               F: LPM[Z++]:Word -> r16:Word  ...
$0A94: $9105:     LPM[Z++] -> r16
$0A95: $9115:     LPM[Z++] -> r17
$0A96: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0A97: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0A98: $8100:  F: [Z] -> r16 ([Z] -> r16)
               C: if (r16 = 0) then goto $0A9C ...
$0A99: $3000:     r16 = $00
$0A9A: $F409:     if (Z=0) then goto $A9C
$0A9B: $E001:  F: $01 -> r16 (1 -> r16)
$0A9C: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 < Temp) then goto $0AA1 ...
$0A9D: $1702:     r16 = r18
$0A9E: $F010:     if ( < ) then goto $AA1
$0A9F: $2F02:  F: r18 -> r16 (Temp -> r16)
$0AA0: $950A:  F: r16 -- (r16 --)
-----          L: 
$0AA1: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0AA2: $E001:     $01 -> r16
$0AA3: $9300:     r16 -> [$0626]
$0AA4: $0626:  
$0AA5: $CFB9:  J: goto $A5F (RJMP)
-----          L: 
-----          L: 
$0AA6: $D1AB:  F: rcall $C52 (_Menu_Get_Pointed_Val)
$0AA7: $2FA0:  F: r16 -> r26 (r16 -> Menu_Sel_Line)
-----          L: 
$0AA8: $91B5:  F: LPM[Z++] -> r27 (LPM[Z++] -> Menu_Size)
               C: if (Menu_Size = 0) then goto $0AD0 ...
$0AA9: $30B0:     r27 = $00
$0AAA: $F129:     if (Z=1) then goto $AD0
-----          L: 
               C: if (Menu_Sel_Line >= Menu_Size) then goto $0AAE ...
$0AAB: $17AB:     r26 = r27
$0AAC: $F008:     if ( < ) then goto $AAE
$0AAD: $E0A1:  F: $01 -> r26 (1 -> Menu_Sel_Line)
-----          L: 
               C: if (Menu_Sel_Line = 0) then goto $0AB1 ...
$0AAE: $30A0:     r26 = $00
$0AAF: $F409:     if (Z=0) then goto $AB1
$0AB0: $E0A1:  F: $01 -> r26 (1 -> Menu_Sel_Line)
-----          L: 
$0AB1: $E0C1:  F: $01 -> r28 (MENU_DISPL_START_LINE -> Menu_Dev_Line_Out)
-----          L: 
-----          L: 
               F: Menu_Pointer -> Z  ...
$0AB2: $91E0:     [$0624] -> r30
$0AB3: $0624:  
$0AB4: $91F0:     [$0625] -> r31
$0AB5: $0625:  
               F: << Z  ...
$0AB6: $0FEE:     << r30
$0AB7: $1FFF:     << r31 <
$0AB8: $27DD:  F: ^ r29 (^Menu_Cur_Line)
-----          L: 
$0AB9: $D15A:  F: rcall $C14 (_Menu_Parse_and_Print_Line)
-----          L: 
$0ABA: $D1FD:  F: rcall $CB8 (_Find_No_Zerro)
-----          L: 
               C: if (Menu_Dev_Line_Out >= MENU_DISPL_WINDOW_SIZE + MENU_DISPL_START_LINE) then goto $0AC5 ...
$0ABB: $30C8:     r28 = $08
$0ABC: $F440:     if ( >= ) then goto $AC5
-----          L: 
$0ABD: $95D3:  F: r29 ++ (Menu_Cur_Line ++)
$0ABE: $13DB:  C: if (r29=r27) then SKIP (Menu_Cur_Line -= Menu_Size)
$0ABF: $CFF9:  C: goto $AB9 (RJMP) (Menu_Cur_Line -= Menu_Size)
-----          L: 
-----          L: 
$0AC0: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0AC1: $0264:  
-----          L: 
$0AC2: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
               C: if (Menu_Dev_Line_Out < MENU_DISPL_WINDOW_SIZE + MENU_DISPL_START_LINE) then goto $0AC0 ...
$0AC3: $30C8:     r28 = $08
$0AC4: $F3D8:     if ( < ) then goto $AC0
-----          L: 
-----          L: _Menu_Parse_End
-----          L: 
-----          L: 
               F: 0 -> Menu_Draw_Flag  ...
$0AC5: $E000:     $00 -> r16
$0AC6: $9300:     r16 -> [$062A]
$0AC7: $062A:  
-----          L: 
$0AC8: $912F:  F: -> r18 (-> Temp)
               F: -> Z  ...
$0AC9: $91FF:     -> r31
$0ACA: $91EF:     -> r30
               F: -> Y  ...
$0ACB: $91DF:     -> r29
$0ACC: $91CF:     -> r28
               F: -> X  ...
$0ACD: $91BF:     -> r27
$0ACE: $91AF:     -> r26
$0ACF: $9508:  F: RET (ret)
-----          V: _Menu_Error_Structure
$0AD0: $E201:  F: $21 -> r16 ("!" -> r16)
$0AD1: $940E:  F: CALL $296 (_ssd_Parse_r16)
$0AD2: $0296:  
-----          L: 
$0AD3: $CFF1:  J: goto $AC5 (RJMP)
-----          V: _Menu_Print_DEC_Temp
-----          L: 
$0AD4: $E310:  F: $30 -> r17 ("0" -> r17)
-----          L: 
               C: if (Temp < 100) then goto $0ADA ...
$0AD5: $3624:     r18 = $64
$0AD6: $F018:     if ( < ) then goto $ADA
$0AD7: $5624:  F: r18 - $64 (Temp - 100)
$0AD8: $9513:  F: r17 ++ (r17 ++)
$0AD9: $CFFB:  J: goto $AD5 (RJMP)
-----          L: 
               C: if (r17 -= "0") then goto $0ADF ...
$0ADA: $3310:     r17 = $30
$0ADB: $F019:     if (Z=1) then goto $ADF
$0ADC: $2F01:  F: r17 -> r16 (r17 -> r16)
$0ADD: $940E:  F: CALL $296 (_ssd_Parse_r16)
$0ADE: $0296:  
-----          L: 
-----          L: 
$0ADF: $E310:  F: $30 -> r17 ("0" -> r17)
-----          L: 
               C: if (Temp < 10) then goto $0AE5 ...
$0AE0: $302A:     r18 = $0A
$0AE1: $F018:     if ( < ) then goto $AE5
$0AE2: $502A:  F: r18 - $0A (Temp - 10)
$0AE3: $9513:  F: r17 ++ (r17 ++)
$0AE4: $CFFB:  J: goto $AE0 (RJMP)
-----          L: 
               C: if (r17 -= "0") then goto $0AEA ...
$0AE5: $3310:     r17 = $30
$0AE6: $F019:     if (Z=1) then goto $AEA
$0AE7: $2F01:  F: r17 -> r16 (r17 -> r16)
$0AE8: $940E:  F: CALL $296 (_ssd_Parse_r16)
$0AE9: $0296:  
-----          L: 
-----          L: 
$0AEA: $E310:  F: $30 -> r17 ("0" -> r17)
$0AEB: $0F12:  F: r17 + r18 (r17 + Temp)
$0AEC: $2F01:  F: r17 -> r16 (r17 -> r16)
$0AED: $940E:  F: CALL $296 (_ssd_Parse_r16)
$0AEE: $0296:  
-----          L: 
$0AEF: $9508:  F: RET (ret)
-----          V: _Menu_Print_Post_Cursor
-----          L: 
               C: if (Menu_Cur_Line=Menu_Sel_Line) then goto $0AFA ...
$0AF0: $17DA:     r29 = r26
$0AF1: $F041:     if (Z=1) then goto $AFA
               F: Z ->  ...
$0AF2: $93EF:     r30 ->
$0AF3: $93FF:     r31 ->
               F: D_Menu_Unsel_Post*2 -> Z  ...
$0AF4: $E1E4:     $14 -> r30
$0AF5: $E1F6:     $16 -> r31
$0AF6: $D1C7:  F: rcall $CBE (_Menu_Print_String_Z)
               F: -> Z  ...
$0AF7: $91FF:     -> r31
$0AF8: $91EF:     -> r30
$0AF9: $C007:  J: goto $B01 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: Z ->  ...
$0AFA: $93EF:     r30 ->
$0AFB: $93FF:     r31 ->
               F: D_Menu_Sel_Post*2 -> Z  ...
$0AFC: $E0E4:     $04 -> r30
$0AFD: $E1F6:     $16 -> r31
$0AFE: $D1BF:  F: rcall $CBE (_Menu_Print_String_Z)
               F: -> Z  ...
$0AFF: $91FF:     -> r31
$0B00: $91EF:     -> r30
-----          L: 
$0B01: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          L: 
-----          L: D_Menu_Sel_Post
$0B02: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
-----          L: D_Menu_Unsel_Post
$0B0A: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
-----          V: _Menu_Parse_TEXT
-----          L: 
$0B12: $D1B2:  F: rcall $CC5 (_Menu_Test_Cur_Line)
$0B13: $F438:  C: if (C=0) then goto $B1B (C = 0)
-----          L: 
-----          L: 
$0B14: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0B15: $D11A:  F: rcall $C30 (_Menu_Print_Pre_Cursor)
-----          L: 
$0B16: $D1A7:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
$0B17: $DFD8:  F: rcall $AF0 (_Menu_Print_Post_Cursor)
-----          L: 
$0B18: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0B19: $0264:  
-----          L: 
-----          L: 
$0B1A: $9508:  F: RET (ret)
-----          V: 
$0B1B: $D198:  F: rcall $CB4 (_Find_End_String)
$0B1C: $9508:  F: RET (ret)
-----          V: _Menu_Parse_SLIDE
-----          L: 
$0B1D: $D1A7:  F: rcall $CC5 (_Menu_Test_Cur_Line)
$0B1E: $F008:  C: if (C=1) then goto $B20 (C = 0)
$0B1F: $C05D:  C: goto $B7D (RJMP) (C = 0)
-----          L: 
-----          L: 
$0B20: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0B21: $D10E:  F: rcall $C30 (_Menu_Print_Pre_Cursor)
-----          L: 
$0B22: $D19B:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
               F: LPM[Z++]:Word -> r16:Word  ...
$0B23: $9105:     LPM[Z++] -> r16
$0B24: $9115:     LPM[Z++] -> r17
-----          L: 
$0B25: $13DA:  C: if (r29=r26) then SKIP (Menu_Cur_Line -= Menu_Sel_Line)
$0B26: $C04A:  C: goto $B71 (RJMP) (Menu_Cur_Line -= Menu_Sel_Line)
$0B27: $9120:  F: [$0626] -> r18 (Menu_Action -> Temp)
$0B28: $0626:  
               C: if (Temp -= LEFT) then goto $0B41 ...
$0B29: $3024:     r18 = $04
$0B2A: $F4B1:     if (Z=0) then goto $B41
$0B2B: $9125:  F: LPM[Z++] -> r18 (LPM[Z++] -> Temp)
$0B2C: $932F:  F: r18 -> (Temp ->)
$0B2D: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0B2E: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0B2F: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0B30: $911F:  F: -> r17 (-> r17)
               C: if (r16 -= 0) then goto $0B34 ...
$0B31: $3000:     r16 = $00
$0B32: $F009:     if (Z=1) then goto $B34
$0B33: $950A:  F: r16 -- (r16 --)
               C: if (r16 < r17) then goto $0B37 ...
$0B34: $1701:     r16 = r17
$0B35: $F408:     if ( >= ) then goto $B37
$0B36: $2F01:  F: r17 -> r16 (r17 -> r16)
               C: if (r16 >= Temp) then goto $0B3A ...
$0B37: $1702:     r16 = r18
$0B38: $F008:     if ( < ) then goto $B3A
$0B39: $2F02:  F: r18 -> r16 (Temp -> r16)
$0B3A: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0B3B: $E001:     $01 -> r16
$0B3C: $9300:     r16 -> [$0626]
$0B3D: $0626:  
$0B3E: $910F:  F: -> r16 (-> r16)
$0B3F: $910F:  F: -> r16 (-> r16)
$0B40: $CF18:  J: goto $A59 (RJMP)
-----          L: 
               C: if (Temp -= RIGHT) then goto $0B59 ...
$0B41: $3025:     r18 = $05
$0B42: $F4B1:     if (Z=0) then goto $B59
$0B43: $9125:  F: LPM[Z++] -> r18 (LPM[Z++] -> Temp)
$0B44: $932F:  F: r18 -> (Temp ->)
$0B45: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0B46: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0B47: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0B48: $911F:  F: -> r17 (-> r17)
               C: if (r16 -= 255) then goto $0B4C ...
$0B49: $3F0F:     r16 = $FF
$0B4A: $F009:     if (Z=1) then goto $B4C
$0B4B: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 >= Temp) then goto $0B4F ...
$0B4C: $1702:     r16 = r18
$0B4D: $F008:     if ( < ) then goto $B4F
$0B4E: $2F02:  F: r18 -> r16 (Temp -> r16)
               C: if (r16 < r17) then goto $0B52 ...
$0B4F: $1701:     r16 = r17
$0B50: $F408:     if ( >= ) then goto $B52
$0B51: $2F01:  F: r17 -> r16 (r17 -> r16)
$0B52: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0B53: $E001:     $01 -> r16
$0B54: $9300:     r16 -> [$0626]
$0B55: $0626:  
$0B56: $910F:  F: -> r16 (-> r16)
$0B57: $910F:  F: -> r16 (-> r16)
$0B58: $CF00:  J: goto $A59 (RJMP)
-----          L: 
               C: if (Temp -= ENTER) then goto $0B71 ...
$0B59: $3022:     r18 = $02
$0B5A: $F4B1:     if (Z=0) then goto $B71
$0B5B: $9125:  F: LPM[Z++] -> r18 (LPM[Z++] -> Temp)
$0B5C: $932F:  F: r18 -> (Temp ->)
$0B5D: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0B5E: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0B5F: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0B60: $911F:  F: -> r17 (-> r17)
               C: if (r16 -= 255) then goto $0B64 ...
$0B61: $3F0F:     r16 = $FF
$0B62: $F009:     if (Z=1) then goto $B64
$0B63: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 > Temp) then goto $0B67 ...
$0B64: $1720:     r18 = r16
$0B65: $F408:     if ( >= ) then goto $B67
$0B66: $2F01:  F: r17 -> r16 (r17 -> r16)
               C: if (r16 < r17) then goto $0B6A ...
$0B67: $1701:     r16 = r17
$0B68: $F408:     if ( >= ) then goto $B6A
$0B69: $2F01:  F: r17 -> r16 (r17 -> r16)
$0B6A: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0B6B: $E001:     $01 -> r16
$0B6C: $9300:     r16 -> [$0626]
$0B6D: $0626:  
$0B6E: $910F:  F: -> r16 (-> r16)
$0B6F: $910F:  F: -> r16 (-> r16)
$0B70: $CEE8:  J: goto $A59 (RJMP)
-----          L: 
-----          L: 
-----          L: 
               F: Z ->  ...
$0B71: $93EF:     r30 ->
$0B72: $93FF:     r31 ->
$0B73: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0B74: $8120:  F: [Z] -> r18 ([Z] -> Temp)
               F: -> Z  ...
$0B75: $91FF:     -> r31
$0B76: $91EF:     -> r30
-----          L: 
$0B77: $DF5C:  F: rcall $AD4 (_Menu_Print_DEC_Temp)
-----          L: 
$0B78: $DF77:  F: rcall $AF0 (_Menu_Print_Post_Cursor)
-----          L: 
$0B79: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0B7A: $0264:  
-----          L: 
$0B7B: $9632:  F: r30,r31 + $02 (Z + 2)
$0B7C: $9508:  F: RET (ret)
-----          V: 
$0B7D: $D136:  F: rcall $CB4 (_Find_End_String)
-----          L: 
$0B7E: $9634:  F: r30,r31 + $04 (Z + 4)
$0B7F: $9508:  F: RET (ret)
-----          V: _Menu_Parse_CHOICE
-----          L: 
$0B80: $D144:  F: rcall $CC5 (_Menu_Test_Cur_Line)
$0B81: $F008:  C: if (C=1) then goto $B83 (C = 0)
$0B82: $C04C:  C: goto $BCF (RJMP) (C = 0)
-----          L: 
-----          L: 
$0B83: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0B84: $D0AB:  F: rcall $C30 (_Menu_Print_Pre_Cursor)
-----          L: 
$0B85: $D138:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
               F: LPM[Z++]:Word -> r16:Word  ...
$0B86: $9105:     LPM[Z++] -> r16
$0B87: $9115:     LPM[Z++] -> r17
-----          L: 
$0B88: $13DA:  C: if (r29=r26) then SKIP (Menu_Cur_Line -= Menu_Sel_Line)
$0B89: $C030:  C: goto $BBA (RJMP) (Menu_Cur_Line -= Menu_Sel_Line)
$0B8A: $9120:  F: [$0626] -> r18 (Menu_Action -> Temp)
$0B8B: $0626:  
               C: if (Temp -= LEFT) then goto $0B9A ...
$0B8C: $3024:     r18 = $04
$0B8D: $F461:     if (Z=0) then goto $B9A
$0B8E: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0B8F: $8100:  F: [Z] -> r16 ([Z] -> r16)
               C: if (r16 -= 0) then goto $0B93 ...
$0B90: $3000:     r16 = $00
$0B91: $F009:     if (Z=1) then goto $B93
$0B92: $950A:  F: r16 -- (r16 --)
$0B93: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0B94: $E001:     $01 -> r16
$0B95: $9300:     r16 -> [$0626]
$0B96: $0626:  
$0B97: $910F:  F: -> r16 (-> r16)
$0B98: $910F:  F: -> r16 (-> r16)
$0B99: $CEBF:  J: goto $A59 (RJMP)
-----          L: 
               C: if (Temp -= RIGHT) then goto $0BAA ...
$0B9A: $3025:     r18 = $05
$0B9B: $F471:     if (Z=0) then goto $BAA
$0B9C: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0B9D: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0B9E: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0B9F: $952A:  F: r18 -- (Temp --)
               C: if (r16 < Temp) then goto $0BA3 ...
$0BA0: $1702:     r16 = r18
$0BA1: $F408:     if ( >= ) then goto $BA3
$0BA2: $9503:  F: r16 ++ (r16 ++)
$0BA3: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0BA4: $E001:     $01 -> r16
$0BA5: $9300:     r16 -> [$0626]
$0BA6: $0626:  
$0BA7: $910F:  F: -> r16 (-> r16)
$0BA8: $910F:  F: -> r16 (-> r16)
$0BA9: $CEAF:  J: goto $A59 (RJMP)
-----          L: 
               C: if (Temp -= ENTER) then goto $0BBA ...
$0BAA: $3022:     r18 = $02
$0BAB: $F471:     if (Z=0) then goto $BBA
$0BAC: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0BAD: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0BAE: $8100:  F: [Z] -> r16 ([Z] -> r16)
$0BAF: $9503:  F: r16 ++ (r16 ++)
               C: if (r16 >= Temp) then goto $0BB3 ...
$0BB0: $1702:     r16 = r18
$0BB1: $F008:     if ( < ) then goto $BB3
$0BB2: $E000:  F: $00 -> r16 (0 -> r16)
$0BB3: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0BB4: $E001:     $01 -> r16
$0BB5: $9300:     r16 -> [$0626]
$0BB6: $0626:  
$0BB7: $910F:  F: -> r16 (-> r16)
$0BB8: $910F:  F: -> r16 (-> r16)
$0BB9: $CE9F:  J: goto $A59 (RJMP)
-----          L: 
-----          L: 
               F: Z ->  ...
$0BBA: $93EF:     r30 ->
$0BBB: $93FF:     r31 ->
$0BBC: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0BBD: $8120:  F: [Z] -> r18 ([Z] -> Temp)
               F: -> Z  ...
$0BBE: $91FF:     -> r31
$0BBF: $91EF:     -> r30
-----          L: 
$0BC0: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
-----          L: 
-----          L: 
$0BC1: $930F:  F: r16 -> (r16 ->)
               C: if (Temp=0) then goto $0BC6 ...
$0BC2: $3020:     r18 = $00
$0BC3: $F011:     if (Z=1) then goto $BC6
$0BC4: $D0EF:  F: rcall $CB4 (_Find_End_String)
$0BC5: $C001:  J: goto $BC7 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
$0BC6: $D0F7:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
$0BC7: $952A:  F: r18 -- (Temp --)
$0BC8: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0BC1 ...
$0BC9: $950A:     r16 --
$0BCA: $F7B1:     if (Z=0) then goto $BC1
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          L: 
$0BCB: $DF24:  F: rcall $AF0 (_Menu_Print_Post_Cursor)
-----          L: 
$0BCC: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0BCD: $0264:  
-----          L: 
$0BCE: $9508:  F: RET (ret)
-----          V: 
$0BCF: $D0E4:  F: rcall $CB4 (_Find_End_String)
-----          L: 
$0BD0: $9632:  F: r30,r31 + $02 (Z + 2)
$0BD1: $9121:  F: [Z++] -> r18 ([Z++] -> Temp)
-----          L: 
-----          L: 
$0BD2: $D0E1:  F: rcall $CB4 (_Find_End_String)
               C: if (Temp --) then goto $0BD2 ...
$0BD3: $952A:     r18 --
$0BD4: $F7E9:     if (Z=0) then goto $BD2
$0BD5: $9508:  F: RET (ret)
-----          V: _Menu_Parse_ACTION
-----          L: 
$0BD6: $D0EE:  F: rcall $CC5 (_Menu_Test_Cur_Line)
$0BD7: $F4D8:  C: if (C=0) then goto $BF3 (C = 0)
-----          L: 
-----          L: 
$0BD8: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0BD9: $D056:  F: rcall $C30 (_Menu_Print_Pre_Cursor)
-----          L: 
$0BDA: $D0E3:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
$0BDB: $DF14:  F: rcall $AF0 (_Menu_Print_Post_Cursor)
-----          L: 
$0BDC: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0BDD: $0264:  
-----          L: 
-----          L: 
               F: LPM[Z++]:Word -> r16:Word  ...
$0BDE: $9105:     LPM[Z++] -> r16
$0BDF: $9115:     LPM[Z++] -> r17
$0BE0: $13DA:  C: if (r29=r26) then SKIP (Menu_Cur_Line -= Menu_Sel_Line)
$0BE1: $C010:  C: goto $BF2 (RJMP) (Menu_Cur_Line -= Menu_Sel_Line)
$0BE2: $9120:  F: [$0626] -> r18 (Menu_Action -> Temp)
$0BE3: $0626:  
               C: if (Temp -= ENTER) then goto $0BF2 ...
$0BE4: $3022:     r18 = $02
$0BE5: $F461:     if (Z=0) then goto $BF2
               F: Z ->  ...
$0BE6: $93EF:     r30 ->
$0BE7: $93FF:     r31 ->
$0BE8: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0BE9: $9509:  F: CALL[Z] (CALL[Z])
               F: -> Z  ...
$0BEA: $91FF:     -> r31
$0BEB: $91EF:     -> r30
               F: SHOW -> Menu_Action  ...
$0BEC: $E001:     $01 -> r16
$0BED: $9300:     r16 -> [$0626]
$0BEE: $0626:  
$0BEF: $910F:  F: -> r16 (-> r16)
$0BF0: $910F:  F: -> r16 (-> r16)
$0BF1: $CE67:  J: goto $A59 (RJMP)
-----          L: 
$0BF2: $9508:  F: RET (ret)
-----          V: 
$0BF3: $D0C0:  F: rcall $CB4 (_Find_End_String)
$0BF4: $9632:  F: r30,r31 + $02 (Z + 2)
$0BF5: $9508:  F: RET (ret)
-----          V: _Menu_Parse_SUBMENU
-----          L: 
$0BF6: $D0CE:  F: rcall $CC5 (_Menu_Test_Cur_Line)
$0BF7: $F4C8:  C: if (C=0) then goto $C11 (C = 0)
-----          L: 
-----          L: 
$0BF8: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0BF9: $D036:  F: rcall $C30 (_Menu_Print_Pre_Cursor)
-----          L: 
$0BFA: $D0C3:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
$0BFB: $DEF4:  F: rcall $AF0 (_Menu_Print_Post_Cursor)
-----          L: 
$0BFC: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0BFD: $0264:  
-----          L: 
-----          L: 
               F: LPM[Z++]:Word -> r16:Word  ...
$0BFE: $9105:     LPM[Z++] -> r16
$0BFF: $9115:     LPM[Z++] -> r17
$0C00: $13DA:  C: if (r29=r26) then SKIP (Menu_Cur_Line -= Menu_Sel_Line)
$0C01: $C00E:  C: goto $C10 (RJMP) (Menu_Cur_Line -= Menu_Sel_Line)
$0C02: $9120:  F: [$0626] -> r18 (Menu_Action -> Temp)
$0C03: $0626:  
               C: if (Temp -= ENTER) then goto $0C10 ...
$0C04: $3022:     r18 = $02
$0C05: $F451:     if (Z=0) then goto $C10
               F: r16:Word -> Menu_Pointer  ...
$0C06: $9300:     r16 -> [$0624]
$0C07: $0624:  
$0C08: $9310:     r17 -> [$0625]
$0C09: $0625:  
               F: SHOW -> Menu_Action  ...
$0C0A: $E001:     $01 -> r16
$0C0B: $9300:     r16 -> [$0626]
$0C0C: $0626:  
$0C0D: $910F:  F: -> r16 (-> r16)
$0C0E: $910F:  F: -> r16 (-> r16)
$0C0F: $CE49:  J: goto $A59 (RJMP)
-----          L: 
$0C10: $9508:  F: RET (ret)
-----          V: 
$0C11: $D0A2:  F: rcall $CB4 (_Find_End_String)
$0C12: $9632:  F: r30,r31 + $02 (Z + 2)
$0C13: $9508:  F: RET (ret)
-----          V: _Menu_Parse_and_Print_Line
-----          L: 
-----          L: 
$0C14: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
-----          L: 
               C: if (r16 = TITLE) then goto $0C5F ...
$0C15: $3001:     r16 = $01
$0C16: $F409:     if (Z=0) then goto $C18
$0C17: $C047:     goto $C5F (RJMP)
               C: if (r16 = SUBMENU) then goto $0BF6 ...
$0C18: $3002:     r16 = $02
$0C19: $F2E1:     if (Z=1) then goto $BF6
               C: if (r16 = ACTION) then goto $0BD6 ...
$0C1A: $3003:     r16 = $03
$0C1B: $F409:     if (Z=0) then goto $C1D
$0C1C: $CFB9:     goto $BD6 (RJMP)
               C: if (r16 = CHOICE) then goto $0B80 ...
$0C1D: $3004:     r16 = $04
$0C1E: $F409:     if (Z=0) then goto $C20
$0C1F: $CF60:     goto $B80 (RJMP)
               C: if (r16 = SLIDE) then goto $0B1D ...
$0C20: $3005:     r16 = $05
$0C21: $F409:     if (Z=0) then goto $C23
$0C22: $CEFA:     goto $B1D (RJMP)
               C: if (r16 = CHECK) then goto $0C68 ...
$0C23: $3006:     r16 = $06
$0C24: $F409:     if (Z=0) then goto $C26
$0C25: $C042:     goto $C68 (RJMP)
               C: if (r16 = TEXT) then goto $0B12 ...
$0C26: $3007:     r16 = $07
$0C27: $F409:     if (Z=0) then goto $C29
$0C28: $CEE9:     goto $B12 (RJMP)
-----          L: 
$0C29: $E30F:  F: $3F -> r16 ("?" -> r16)
$0C2A: $940E:  F: CALL $296 (_ssd_Parse_r16)
$0C2B: $0296:  
-----          L: 
$0C2C: $910F:  F: -> r16 (-> r16)
$0C2D: $910F:  F: -> r16 (-> r16)
$0C2E: $CE96:  J: goto $AC5 (RJMP)
$0C2F: $9508:  F: RET (ret)
-----          V: _Menu_Print_Pre_Cursor
-----          L: 
               C: if (Menu_Cur_Line=Menu_Sel_Line) then goto $0C3A ...
$0C30: $17DA:     r29 = r26
$0C31: $F041:     if (Z=1) then goto $C3A
               F: Z ->  ...
$0C32: $93EF:     r30 ->
$0C33: $93FF:     r31 ->
               F: D_Menu_Unsel_Pre*2 -> Z  ...
$0C34: $E9E4:     $94 -> r30
$0C35: $E1F8:     $18 -> r31
$0C36: $D087:  F: rcall $CBE (_Menu_Print_String_Z)
               F: -> Z  ...
$0C37: $91FF:     -> r31
$0C38: $91EF:     -> r30
$0C39: $C007:  J: goto $C41 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: Z ->  ...
$0C3A: $93EF:     r30 ->
$0C3B: $93FF:     r31 ->
               F: D_Menu_Sel_Pre*2 -> Z  ...
$0C3C: $E8E4:     $84 -> r30
$0C3D: $E1F8:     $18 -> r31
$0C3E: $D07F:  F: rcall $CBE (_Menu_Print_String_Z)
               F: -> Z  ...
$0C3F: $91FF:     -> r31
$0C40: $91EF:     -> r30
-----          L: 
$0C41: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          L: 
-----          L: D_Menu_Sel_Pre
$0C42: $11 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
-----          L: D_Menu_Unsel_Pre
$0C4A: $20 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
-----          V: _Menu_Get_Pointed_Val
               F: LPM[Z++]:Word -> r16:Word  ...
$0C52: $9105:     LPM[Z++] -> r16
$0C53: $9115:     LPM[Z++] -> r17
               F: Z ->  ...
$0C54: $93EF:     r30 ->
$0C55: $93FF:     r31 ->
$0C56: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0C57: $8100:  F: [Z] -> r16 ([Z] -> r16)
               C: if (r16 -=0) then goto $0C5C ...
$0C58: $3000:     r16 = $00
$0C59: $F411:     if (Z=0) then goto $C5C
$0C5A: $E001:  F: $01 -> r16 (1 -> r16)
$0C5B: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
               F: -> Z  ...
$0C5C: $91FF:     -> r31
$0C5D: $91EF:     -> r30
$0C5E: $9508:  F: RET (ret)
-----          V: _Menu_Parse_TITLE
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$0C5F: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0C60: $D05D:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
$0C61: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0C62: $0264:  
-----          L: 
-----          L: 
$0C63: $9635:  F: r30,r31 + $05 (Z + 5)
$0C64: $9508:  F: RET (ret)
-----          L: 
$0C65: $D04E:  F: rcall $CB4 (_Find_End_String)
$0C66: $9635:  F: r30,r31 + $05 (Z + 5)
$0C67: $9508:  F: RET (ret)
-----          V: _Menu_Parse_CHECK
-----          L: 
$0C68: $D05C:  F: rcall $CC5 (_Menu_Test_Cur_Line)
$0C69: $F008:  C: if (C=1) then goto $C6B (C = 0)
$0C6A: $C046:  C: goto $CB1 (RJMP) (C = 0)
-----          L: 
-----          L: 
$0C6B: $95C3:  F: r28 ++ (Menu_Dev_Line_Out ++)
-----          L: 
$0C6C: $DFC3:  F: rcall $C30 (_Menu_Print_Pre_Cursor)
-----          L: 
$0C6D: $D050:  F: rcall $CBE (_Menu_Print_String_Z)
-----          L: 
               F: LPM[Z++]:Word -> r16:Word  ...
$0C6E: $9105:     LPM[Z++] -> r16
$0C6F: $9115:     LPM[Z++] -> r17
$0C70: $13DA:  C: if (r29=r26) then SKIP (Menu_Cur_Line -= Menu_Sel_Line)
$0C71: $C013:  C: goto $C85 (RJMP) (Menu_Cur_Line -= Menu_Sel_Line)
$0C72: $9120:  F: [$0626] -> r18 (Menu_Action -> Temp)
$0C73: $0626:  
               C: if (Temp -= ENTER) then goto $0C85 ...
$0C74: $3022:     r18 = $02
$0C75: $F479:     if (Z=0) then goto $C85
$0C76: $9124:  F: LPM[Z] -> r18 (LPM[Z] -> Temp)
$0C77: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0C78: $8100:  F: [Z] -> r16 ([Z] -> r16)
               C: if (r16=Temp) then goto $0C7D ...
$0C79: $1702:     r16 = r18
$0C7A: $F011:     if (Z=1) then goto $C7D
$0C7B: $2F02:  F: r18 -> r16 (Temp -> r16)
$0C7C: $C001:  J: goto $C7E (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
$0C7D: $2700:  F: ^ r16 (^r16)
-----          L: 
$0C7E: $8300:  F: r16 -> [Z] (r16 -> [Z])
               F: SHOW -> Menu_Action  ...
$0C7F: $E001:     $01 -> r16
$0C80: $9300:     r16 -> [$0626]
$0C81: $0626:  
$0C82: $910F:  F: -> r16 (-> r16)
$0C83: $910F:  F: -> r16 (-> r16)
$0C84: $CDD4:  J: goto $A59 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          L: 
-----          L: 
               F: Z ->  ...
$0C85: $93EF:     r30 ->
$0C86: $93FF:     r31 ->
$0C87: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$0C88: $8100:  F: [Z] -> r16 ([Z] -> r16)
               F: -> Z  ...
$0C89: $91FF:     -> r31
$0C8A: $91EF:     -> r30
-----          L: 
$0C8B: $9115:  F: LPM[Z++] -> r17 (LPM[Z++] -> r17)
-----          L: 
-----          L: 
               C: if (r16=r17) then goto $0C96 ...
$0C8C: $1701:     r16 = r17
$0C8D: $F041:     if (Z=1) then goto $C96
               F: Z ->  ...
$0C8E: $93EF:     r30 ->
$0C8F: $93FF:     r31 ->
               F: D_Menu_Check_Off*2 -> Z  ...
$0C90: $E5E2:     $52 -> r30
$0C91: $E1F9:     $19 -> r31
$0C92: $D02B:  F: rcall $CBE (_Menu_Print_String_Z)
               F: -> Z  ...
$0C93: $91FF:     -> r31
$0C94: $91EF:     -> r30
$0C95: $C007:  J: goto $C9D (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: Z ->  ...
$0C96: $93EF:     r30 ->
$0C97: $93FF:     r31 ->
               F: D_Menu_Check_On*2 -> Z  ...
$0C98: $E4E2:     $42 -> r30
$0C99: $E1F9:     $19 -> r31
$0C9A: $D023:  F: rcall $CBE (_Menu_Print_String_Z)
               F: -> Z  ...
$0C9B: $91FF:     -> r31
$0C9C: $91EF:     -> r30
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          L: 
$0C9D: $DE52:  F: rcall $AF0 (_Menu_Print_Post_Cursor)
-----          L: 
$0C9E: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$0C9F: $0264:  
-----          L: 
$0CA0: $9508:  F: RET (ret)
-----          L: D_Menu_Check_On
$0CA1: $1F $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
-----          L: D_Menu_Check_Off
$0CA9: $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00
-----          V: 
$0CB1: $D002:  F: rcall $CB4 (_Find_End_String)
-----          L: 
$0CB2: $9633:  F: r30,r31 + $03 (Z + 3)
$0CB3: $9508:  F: RET (ret)
-----          V: _Find_End_String
-----          L: 
$0CB4: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 -= EOS) then goto $0CB4 ...
$0CB5: $3000:     r16 = $00
$0CB6: $F7E9:     if (Z=0) then goto $CB4
$0CB7: $9508:  F: RET (ret)
-----          V: _Find_No_Zerro
-----          L: 
$0CB8: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
               C: if (r16 -= 0) then goto $0CBC ...
$0CB9: $3000:     r16 = $00
$0CBA: $F009:     if (Z=1) then goto $CBC
$0CBB: $9508:  F: RET (ret)
$0CBC: $9631:  F: r30,r31 + $01 (Z + 1)
$0CBD: $CFFA:  J: goto $CB8 (RJMP)
-----          V: _Menu_Print_String_Z
-----          L: 
-----          L: 
$0CBE: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 = EOS) then goto $0CC2 ...
$0CBF: $3000:     r16 = $00
$0CC0: $F409:     if (Z=0) then goto $CC2
$0CC1: $9508:  F: RET (ret)
$0CC2: $940E:  F: CALL $296 (_ssd_Parse_r16)
$0CC3: $0296:  
-----          L: 
$0CC4: $CFF9:  J: goto $CBE (RJMP)
-----          V: _Menu_Test_Cur_Line
$0CC5: $2F0A:  F: r26 -> r16 (Menu_Sel_Line -> r16)
$0CC6: $1B0D:  F: r16 - r29 (r16 - Menu_Cur_Line)
$0CC7: $F010:  C: if (C=1) then goto $CCA (C = 1)
               C: if (r16 >= MENU_DISPL_WINDOW_SIZE - MENU_TITLE_STICKY) then goto $0CCA ...
$0CC8: $3006:     r16 = $06
$0CC9: $F400:     if ( >= ) then goto $CCA
-----          L: 
-----          L: 
$0CCA: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu_Struct.alg    ***********
-----          V: D_Menu
-----          V: D_Menu_General
$0CCB: $01 $05 $20 $20 $20 $CE $E1 $F9 $E8 $E5 $20 $ED $E0 $F1 $F2 $F0
$0CD3: $EE $E9 $EA $E8 $20 $20 $20 $01 $00 $CB $0C $2D $06 $0B
$0CDA: $05 $CA $EE $EB $2E $D1 $F2 $F3 $EF $E5 $ED $E5 $E9 $20 $2E $2E
$0CE2: $2E $2E $20 $00 $16 $06 $08 $18
$0CE6: $05 $EE $E1 $F9 $2E $F1 $EA $EE $F0 $EE $F1 $F2 $FC $20 $2E $2E
$0CEE: $2E $2E $20 $00 $FF $05 $00 $0F
$0CF2: $05 $EE $E1 $F9 $2E $FF $F0 $EA $EE $F1 $F2 $FC $20 $2E $2E $2E
$0CFA: $2E $2E $20 $00 $00 $06 $00 $0F
$0CFE: $05 $EE $E1 $F9 $2E $EA $EE $ED $F2 $F0 $E0 $F1 $F2 $20 $2E $2E
$0D06: $2E $2E $20 $00 $01 $06 $00 $0F
$0D0A: $05 $FF $F0 $EA $2E $EA $F0 $E0 $E9 $ED $2E $F1 $F2 $F3 $EF $E5
$0D12: $ED $2E $20 $00 $18 $06 $00 $0F
$0D16: $05 $F6 $E8 $EA $EB $2E $20 $E4 $EE $20 $EE $F2 $EA $EB $2E $20
$0D1E: $2E $2E $20 $00 $19 $06 $01 $19
$0D22: $05 $C4 $E0 $F2 $F7 $E8 $EA $EE $E2 $20 $ED $E0 $20 $F1 $F2 $EE
$0D2A: $F0 $2E $20 $00 $17 $06 $01 $02
$0D2E: $03 $20 $18 $18 $00 $42 $0D $00
$0D32: $02 $E4 $EE $EF $EE $EB $ED $E8 $F2 $E5 $EB $FC $ED $EE $20 $20
$0D3A: $20 $20 $20 $20 $3E $00 $73 $0D
$0D3E: $03 $20 $18 $18 $00 $42 $0D $00
-----          V: _Menu_General_Do_
               F: 0 -> Memu_Level  ...
$0D42: $E000:     $00 -> r16
$0D43: $9300:     r16 -> [$062B]
$0D44: $062B:  
               F: 0 -> Effect_Demo_Mode  ...
$0D45: $9300:     r16 -> [$05F9]
$0D46: $05F9:  
-----          L: 
$0D47: $DC15:  F: rcall $95D (_Save_to_EEPROM)
-----          L: 
               F: 50/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_MAIN_MENU]  ...
$0D48: $E005:     $05 -> r16
$0D49: $9300:     r16 -> [$051A]
$0D4A: $051A:  
               F: 50/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_MAIN_MENU]  ...
$0D4B: $9300:     r16 -> [$051D]
$0D4C: $051D:  
-----          L: 
$0D4D: $9508:  F: RET (ret)
-----          V: _Do_Default
               F: 0 -> Memu_Level  ...
$0D4E: $E000:     $00 -> r16
$0D4F: $9300:     r16 -> [$062B]
$0D50: $062B:  
               F: 0 -> Effect_Demo_Mode  ...
$0D51: $9300:     r16 -> [$05F9]
$0D52: $05F9:  
-----          L: 
               F: 255 -> EE_Effect_Set_Table  ...
$0D53: $EF0F:     $FF -> r16
$0D54: $E012:     $02 -> r17
$0D55: $BD11:     r17 -> p$21
$0D56: $E010:     $00 -> r17
$0D57: $BD12:     r17 -> p$22
$0D58: $BD00:     r16 -> p$20
$0D59: $9AFA:     1 -> p$1F.2
$0D5A: $9AF9:     1 -> p$1F.1
$0D5B: $99F9:     if (p$1F.1=0 then SKIP
$0D5C: $CFFE:     goto $D5B (RJMP)
-----          L: 
$0D5D: $94F8:  F: 0 -> I (0 -> I)
               F: 500-1 -> r16:Word  ...
$0D5E: $EF03:     $F3 -> r16
$0D5F: $E011:     $01 -> r17
$0D60: $940E:  F: CALL $34 (_Wait_ms_)
$0D61: $0034:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          L: 
$0D62: $940C:  J: goto $0
$0D63: $0000:  
$0D64: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu_Struct.alg    ***********
-----          V: _Do_Reset
               F: 0 -> Memu_Level  ...
$0D65: $E000:     $00 -> r16
$0D66: $9300:     r16 -> [$062B]
$0D67: $062B:  
               F: 0 -> Effect_Demo_Mode  ...
$0D68: $9300:     r16 -> [$05F9]
$0D69: $05F9:  
-----          L: 
$0D6A: $DBF2:  F: rcall $95D (_Save_to_EEPROM)
-----          L: 
$0D6B: $94F8:  F: 0 -> I (0 -> I)
               F: 500-1 -> r16:Word  ...
$0D6C: $EF03:     $F3 -> r16
$0D6D: $E011:     $01 -> r17
$0D6E: $940E:  F: CALL $34 (_Wait_ms_)
$0D6F: $0034:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          L: 
$0D70: $940C:  J: goto $0
$0D71: $0000:  
$0D72: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu_Struct.alg    ***********
-----          V: D_Menu_System
$0D73: $01 $05 $20 $20 $20 $D0 $E5 $F8 $E5 $ED $E8 $E5 $20 $EF $F0 $EE
$0D7B: $E1 $EB $E5 $EC $20 $20 $20 $01 $00 $CB $0C $2E $06 $05
$0D82: $03 $CF $E5 $F0 $E5 $E7 $E0 $E3 $F0 $F3 $E7 $EA $E0 $20 $20 $20
$0D8A: $20 $20 $20 $20 $3E $00 $65 $0D
$0D8E: $03 $D1 $E1 $F0 $EE $F1 $20 $ED $E0 $F1 $F2 $F0 $EE $E5 $EA $20
$0D96: $20 $20 $20 $20 $3E $00 $4E $0D
$0D9A: $05 $C2 $EA $EB $2E $20 $F1 $F2 $F3 $EF $E5 $ED $FC $20 $2E $2E
$0DA2: $2E $2E $20 $00 $F5 $05 $00 $18
$0DA6: $02 $20 $18 $18 $00 $CB $0C $00
-----          V: D_Menu_Mode
$0DAA: $01 $05 $20 $20 $CD $E0 $F1 $F2 $F0 $EE $E9 $EA $E8 $20 $F0 $E5
$0DB2: $E6 $E8 $EC $EE $E2 $20 $20 $01 $00 $CB $0C $2F $06 $0D
$0DB9: $02 $E2 $E8 $E7 $F3 $E0 $EB $FC $ED $E0 $FF $20 $F1 $F5 $E5 $EC
$0DC1: $E0 $20 $20 $20 $3E $00 $3F $0E
$0DC5: $03 $20 $18 $18 $00 $42 $0D $00
$0DC9: $02 $EE $E6 $E8 $E4 $E0 $ED $E8 $E5 $20 $20 $20 $20 $20 $20 $20
$0DD1: $20 $20 $20 $20 $3E $00 $A4 $0E
$0DD5: $02 $E2 $F5 $EE $E4 $20 $20 $20 $20 $20 $20 $20 $20 $20 $20 $20
$0DDD: $20 $20 $20 $20 $3E $00 $EF $0E
$0DE1: $02 $E4 $E2 $E8 $E6 $E5 $ED $E8 $E5 $20 $20 $20 $20 $20 $20 $20
$0DE9: $20 $20 $20 $20 $3E $00 $3A $0F
$0DED: $02 $E2 $F1 $F2 $F0 $E5 $F7 $2E $E4 $E2 $E8 $E6 $E5 $ED $E8 $E5
$0DF5: $20 $20 $20 $20 $3E $00 $85 $0F
$0DF9: $02 $E2 $FB $F5 $EE $E4 $20 $20 $20 $20 $20 $20 $20 $20 $20 $20
$0E01: $20 $20 $20 $20 $3E $00 $D0 $0F
$0E05: $03 $20 $18 $18 $00 $42 $0D $00
$0E09: $03 $53 $61 $76 $65 $20 $61 $73 $20 $50 $72 $65 $73 $65 $74 $5F
$0E11: $30 $00 $35 $0E
$0E13: $03 $53 $61 $76 $65 $20 $61 $73 $20 $50 $72 $65 $73 $65 $74 $5F
$0E1B: $31 $00 $84 $0E
$0E1D: $03 $53 $61 $76 $65 $20 $61 $73 $20 $50 $72 $65 $73 $65 $74 $5F
$0E25: $32 $00 $2B $0E
$0E27: $03 $20 $18 $18 $00 $42 $0D $00
-----          V: _Save_Preset_2
               F: Y ->  ...
$0E2B: $93CF:     r28 ->
$0E2C: $93DF:     r29 ->
               F: Z ->  ...
$0E2D: $93EF:     r30 ->
$0E2E: $93FF:     r31 ->
               F: 7 -> Effect_Overall  ...
$0E2F: $E007:     $07 -> r16
$0E30: $9300:     r16 -> [$05FE]
$0E31: $05FE:  
               F: @EE_Preset_Table + 2*(4*5) -> Z  ...
$0E32: $E4EA:     $4A -> r30
$0E33: $E0F0:     $00 -> r31
$0E34: $C059:  J: goto $E8E (RJMP)
-----          V: _Save_Preset_0
               F: Y ->  ...
$0E35: $93CF:     r28 ->
$0E36: $93DF:     r29 ->
               F: Z ->  ...
$0E37: $93EF:     r30 ->
$0E38: $93FF:     r31 ->
               F: 5 -> Effect_Overall  ...
$0E39: $E005:     $05 -> r16
$0E3A: $9300:     r16 -> [$05FE]
$0E3B: $05FE:  
               F: @EE_Preset_Table + 0*(4*5) -> Z  ...
$0E3C: $E2E2:     $22 -> r30
$0E3D: $E0F0:     $00 -> r31
$0E3E: $C04F:  J: goto $E8E (RJMP)
-----          V: D_Menu_Scheme
$0E3F: $01 $05 $20 $20 $20 $C2 $E8 $E7 $F3 $E0 $EB $FC $ED $FB $E5 $20
$0E47: $F1 $F5 $E5 $EC $FB $20 $20 $01 $00 $CB $0C $36 $06 $0A
$0E4E: $03 $42 $61 $73 $65 $00 $79 $0E
$0E52: $03 $57 $61 $76 $65 $00 $79 $0E
$0E56: $03 $52 $61 $69 $6E $00 $79 $0E
$0E5A: $03 $46 $69 $72 $65 $00 $79 $0E
$0E5E: $03 $4D $65 $74 $65 $6F $72 $00 $79 $0E
$0E63: $03 $50 $72 $65 $73 $65 $74 $5F $30 $00 $79 $0E
$0E69: $03 $50 $72 $65 $73 $65 $74 $5F $31 $00 $79 $0E
$0E6F: $03 $50 $72 $65 $73 $65 $74 $5F $32 $00 $79 $0E
$0E75: $02 $20 $18 $18 $00 $AA $0D $00
-----          V: _Do_VScheme
$0E79: $9100:  F: [$0636] -> r16 (D_Menu_Scheme_Pos -> r16)
$0E7A: $0636:  
$0E7B: $950A:  F: r16 -- (r16--)
$0E7C: $DB47:  F: rcall $9C4 (_Load_VScheme)
               F: D_Menu_Mode -> Menu_Pointer  ...
$0E7D: $EA0A:     $AA -> r16
$0E7E: $9300:     r16 -> [$0624]
$0E7F: $0624:  
$0E80: $E00D:     $0D -> r16
$0E81: $9300:     r16 -> [$0625]
$0E82: $0625:  
$0E83: $9508:  F: RET (ret)
-----          V: _Save_Preset_1
               F: Y ->  ...
$0E84: $93CF:     r28 ->
$0E85: $93DF:     r29 ->
               F: Z ->  ...
$0E86: $93EF:     r30 ->
$0E87: $93FF:     r31 ->
               F: 6 -> Effect_Overall  ...
$0E88: $E006:     $06 -> r16
$0E89: $9300:     r16 -> [$05FE]
$0E8A: $05FE:  
               F: @EE_Preset_Table + 1*(4*5) -> Z  ...
$0E8B: $E3E6:     $36 -> r30
$0E8C: $E0F0:     $00 -> r31
$0E8D: $C000:  J: goto $E8E (RJMP)
-----          V: _Save_Preset_to_EEPROM
               F: @Effect_Standby -> Y  ...
$0E8E: $E0C2:     $02 -> r28
$0E8F: $E0D6:     $06 -> r29
$0E90: $E104:  F: $14 -> r16 (4*5 -> r16)
-----          L: 
$0E91: $930F:  F: r16 -> (r16 ->)
               F: [Y++] -> EE[Z++]  ...
$0E92: $9109:     [Y++] -> r16
$0E93: $BDE1:     r30 -> p$21
$0E94: $BDF2:     r31 -> p$22
$0E95: $9631:     r30,r31 + $01
$0E96: $BD00:     r16 -> p$20
$0E97: $9AFA:     1 -> p$1F.2
$0E98: $9AF9:     1 -> p$1F.1
$0E99: $99F9:     if (p$1F.1=0 then SKIP
$0E9A: $CFFE:     goto $E99 (RJMP)
$0E9B: $910F:  F: -> r16 (-> r16)
               C: if (r16 --) then goto $0E91 ...
$0E9C: $950A:     r16 --
$0E9D: $F799:     if (Z=0) then goto $E91
               F: -> Z  ...
$0E9E: $91FF:     -> r31
$0E9F: $91EF:     -> r30
               F: -> Y  ...
$0EA0: $91DF:     -> r29
$0EA1: $91CF:     -> r28
$0EA2: $DE9F:  F: rcall $D42 (_Menu_General_Do_)
$0EA3: $9508:  F: RET (ret)
-----          V: D_Menu_Standby
$0EA4: $01 $05 $20 $20 $20 $20 $20 $20 $EE $E6 $E8 $E4 $E0 $ED $E8 $E5
$0EAC: $20 $20 $20 $20 $20 $20 $20 $01 $00 $AA $0D $31 $06 $06
$0EB3: $04 $FD $F4 $F4 $E5 $EA $F2 $3A $00 $02 $06 $05 $62 $61 $73 $65
$0EBB: $00 $77 $61 $76 $65 $00 $72 $61 $69 $6E $00 $66 $69 $72 $65 $00
$0EC3: $6D $65 $74 $65 $6F $72 $00 $00
$0EC7: $05 $F1 $EA $EE $F0 $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E
$0ECF: $2E $2E $20 $00 $03 $06 $00 $0F
$0ED3: $05 $FF $F0 $EA $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E $2E
$0EDB: $2E $2E $20 $00 $04 $06 $00 $0F
$0EDF: $05 $EA $EE $ED $F2 $F0 $E0 $F1 $F2 $ED $EE $F1 $F2 $FC $20 $2E
$0EE7: $2E $2E $20 $00 $05 $06 $00 $0F
$0EEB: $02 $20 $18 $18 $00 $AA $0D $00
-----          V: D_Menu_Entrance
$0EEF: $01 $05 $20 $20 $20 $20 $20 $20 $20 $20 $E2 $F5 $EE $E4 $20 $20
$0EF7: $20 $20 $20 $20 $20 $20 $20 $01 $00 $AA $0D $32 $06 $06
$0EFE: $04 $FD $F4 $F4 $E5 $EA $F2 $3A $00 $06 $06 $05 $62 $61 $73 $65
$0F06: $00 $77 $61 $76 $65 $00 $72 $61 $69 $6E $00 $66 $69 $72 $65 $00
$0F0E: $6D $65 $74 $65 $6F $72 $00 $00
$0F12: $05 $F1 $EA $EE $F0 $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E
$0F1A: $2E $2E $20 $00 $07 $06 $00 $0F
$0F1E: $05 $FF $F0 $EA $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E $2E
$0F26: $2E $2E $20 $00 $08 $06 $00 $0F
$0F2A: $05 $EA $EE $ED $F2 $F0 $E0 $F1 $F2 $ED $EE $F1 $F2 $FC $20 $2E
$0F32: $2E $2E $20 $00 $09 $06 $00 $0F
$0F36: $02 $20 $18 $18 $00 $AA $0D $00
-----          V: D_Menu_Attend
$0F3A: $01 $05 $20 $20 $20 $20 $20 $20 $E4 $E2 $E8 $E6 $E5 $ED $E8 $E5
$0F42: $20 $20 $20 $20 $20 $20 $20 $01 $00 $AA $0D $33 $06 $06
$0F49: $04 $FD $F4 $F4 $E5 $EA $F2 $3A $00 $0A $06 $05 $62 $61 $73 $65
$0F51: $00 $77 $61 $76 $65 $00 $72 $61 $69 $6E $00 $66 $69 $72 $65 $00
$0F59: $6D $65 $74 $65 $6F $72 $00 $00
$0F5D: $05 $F1 $EA $EE $F0 $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E
$0F65: $2E $2E $20 $00 $0B $06 $00 $0F
$0F69: $05 $FF $F0 $EA $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E $2E
$0F71: $2E $2E $20 $00 $0C $06 $00 $0F
$0F75: $05 $EA $EE $ED $F2 $F0 $E0 $F1 $F2 $ED $EE $F1 $F2 $FC $20 $2E
$0F7D: $2E $2E $20 $00 $0D $06 $00 $0F
$0F81: $02 $20 $18 $18 $00 $AA $0D $00
-----          V: D_Menu_CrossAttend
$0F85: $01 $05 $20 $20 $E2 $F1 $F2 $F0 $E5 $F7 $ED $2E $E4 $E2 $E8 $E6
$0F8D: $E5 $ED $E8 $E5 $20 $20 $20 $01 $00 $AA $0D $34 $06 $06
$0F94: $04 $FD $F4 $F4 $E5 $EA $F2 $3A $00 $0E $06 $05 $62 $61 $73 $65
$0F9C: $00 $77 $61 $76 $65 $00 $72 $61 $69 $6E $00 $66 $69 $72 $65 $00
$0FA4: $6D $65 $74 $65 $6F $72 $00 $00
$0FA8: $05 $F1 $EA $EE $F0 $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E
$0FB0: $2E $2E $20 $00 $0F $06 $00 $0F
$0FB4: $05 $FF $F0 $EA $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E $2E
$0FBC: $2E $2E $20 $00 $10 $06 $00 $0F
$0FC0: $05 $EA $EE $ED $F2 $F0 $E0 $F1 $F2 $ED $EE $F1 $F2 $FC $20 $2E
$0FC8: $2E $2E $20 $00 $11 $06 $00 $0F
$0FCC: $02 $20 $18 $18 $00 $AA $0D $00
-----          V: D_Menu_Exit
$0FD0: $01 $05 $20 $20 $20 $20 $20 $20 $20 $20 $E2 $FB $F5 $EE $E4 $20
$0FD8: $20 $20 $20 $20 $20 $20 $20 $01 $00 $AA $0D $35 $06 $06
$0FDF: $04 $FD $F4 $F4 $E5 $EA $F2 $3A $00 $12 $06 $05 $62 $61 $73 $65
$0FE7: $00 $77 $61 $76 $65 $00 $72 $61 $69 $6E $00 $66 $69 $72 $65 $00
$0FEF: $6D $65 $74 $65 $6F $72 $00 $00
$0FF3: $05 $F1 $EA $EE $F0 $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E
$0FFB: $2E $2E $20 $00 $13 $06 $00 $0F
$0FFF: $05 $FF $F0 $EA $EE $F1 $F2 $FC $20 $2E $2E $2E $2E $2E $2E $2E
$1007: $2E $2E $20 $00 $14 $06 $00 $0F
$100B: $05 $EA $EE $ED $F2 $F0 $E0 $F1 $F2 $ED $EE $F1 $F2 $FC $20 $2E
$1013: $2E $2E $20 $00 $15 $06 $00 $0F
$1017: $02 $20 $18 $18 $00 $AA $0D $00
-----          V: D_Menu_Simulation
$101B: $01 $05 $20 $20 $D1 $E8 $EC $F3 $EB $FF $F2 $EE $F0 $20 $F1 $EE
$1023: $E1 $FB $F2 $E8 $E9 $20 $20 $01 $00 $CB $0C $38 $06 $07
$102A: $03 $E2 $F5 $2E $F1 $EB $E5 $E2 $E0 $20 $20 $20 $20 $3E $5B $2E
$1032: $2E $2E $5D $20 $20 $00 $18 $08
$1036: $03 $E2 $FB $F5 $2E $F1 $EF $F0 $E0 $E2 $E0 $20 $20 $20 $5B $2E
$103E: $2E $3E $5D $20 $20 $00 $2F $08
$1042: $03 $E2 $F5 $2E $F1 $EF $F0 $E0 $E2 $E0 $20 $20 $20 $20 $5B $2E
$104A: $2E $2E $5D $3C $20 $00 $01 $08
$104E: $03 $E2 $FB $F5 $2E $F1 $EB $E5 $E2 $E0 $20 $20 $20 $20 $5B $3C
$1056: $2E $2E $5D $20 $20 $00 $44 $08
$105A: $03 $EE $E6 $E8 $E4 $E0 $ED $E8 $E5 $20 $20 $20 $20 $20 $5B $2E
$1062: $2E $2E $5D $20 $20 $00 $59 $08
$1066: $03 $20 $18 $18 $00 $42 $0D $00
-----          V: D_Menu_Stat
$106A: $01 $05 $20 $20 $20 $20 $20 $D1 $F2 $E0 $F2 $E8 $F1 $F2 $E8 $EA
$1072: $E0 $20 $20 $20 $20 $20 $20 $01 $00 $CB $0C $39 $06 $06
$1079: $05 $F7 $E0 $F1 $2E $F0 $E0 $E1 $EE $F2 $FB $20 $2E $2E $2E $2E
$1081: $2E $20 $00 $1A $06 $00 $00 $00
$1085: $05 $EA $EE $EB $2E $EF $F0 $EE $F5 $EE $E4 $EE $E2 $20 $2E $2E
$108D: $2E $20 $00 $1C $06 $00 $00 $00
$1091: $05 $F7 $E0 $F1 $2E $EF $EE $F1 $EB $2E $EF $F0 $EE $F5 $EE $E4
$1099: $20 $20 $00 $22 $06 $00 $00 $00
$109D: $05 $EF $F0 $EE $F5 $2E $20 $E7 $E0 $20 $F7 $E0 $F1 $20 $2E $2E
$10A5: $2E $20 $00 $23 $06 $00 $00 $00
$10A9: $03 $20 $18 $18 $00 $42 $0D $00
-----          V: D_Menu_Info
$10AD: $01 $05 $20 $20 $20 $20 $20 $C8 $ED $F4 $EE $F0 $EC $E0 $F6 $E8
$10B5: $FF $20 $20 $20 $20 $20 $20 $01 $00 $CB $0C $3A $06 $06
$10BC: $03 $20 $20 $20 $20 $20 $20 $20 $20 $20 $18 $00 $42 $0D
$10C3: $03 $07 $20 $20 $2D $57 $61 $6C $6B $69 $6E $67 $20 $4C $69 $67
$10CB: $68 $74 $2D $20 $20 $20 $01 $00 $42 $0D
$10D0: $03 $06 $05 $20 $20 $20 $20 $20 $20 $20 $20 $20 $20 $20 $76 $65
$10D8: $72 $20 $31 $2E $30 $01 $00 $42 $0D $00
$10DD: $03 $20 $20 $20 $20 $20 $20 $20 $20 $20 $18 $00 $42 $0D
$10E4: $03 $20 $02 $77 $77 $77 $2E $73 $6F $69 $2D $74 $65 $63 $68 $2E
$10EC: $63 $6F $6D $01 $00 $42 $0D $00
-----          V: _Menu_Main_Click
-----          L: 
$10F0: $9100:  F: [$062C] -> r16 (Menu_Main_counter -> r16)
$10F1: $062C:  
$10F2: $9503:  F: r16 ++ (r16 ++)
$10F3: $9300:  F: r16 -> [$062B] (r16 -> Memu_Level)
$10F4: $062B:  
               C: if (r16 -= 1) then goto $1102 ...
$10F5: $3001:     r16 = $01
$10F6: $F459:     if (Z=0) then goto $1102
               F: D_Menu_General -> Menu_Pointer  ...
$10F7: $EC0B:     $CB -> r16
$10F8: $9300:     r16 -> [$0624]
$10F9: $0624:  
$10FA: $E00C:     $0C -> r16
$10FB: $9300:     r16 -> [$0625]
$10FC: $0625:  
               F: SHOW -> Menu_Action  ...
$10FD: $E001:     $01 -> r16
$10FE: $9300:     r16 -> [$0626]
$10FF: $0626:  
$1100: $D951:  F: rcall $A52 (_Menu_Parse)
$1101: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= 2) then goto $1112 ...
$1102: $3002:     r16 = $02
$1103: $F471:     if (Z=0) then goto $1112
               F: 1 -> Effect_Demo_Mode  ...
$1104: $E001:     $01 -> r16
$1105: $9300:     r16 -> [$05F9]
$1106: $05F9:  
               F: D_Menu_Mode -> Menu_Pointer  ...
$1107: $EA0A:     $AA -> r16
$1108: $9300:     r16 -> [$0624]
$1109: $0624:  
$110A: $E00D:     $0D -> r16
$110B: $9300:     r16 -> [$0625]
$110C: $0625:  
               F: SHOW -> Menu_Action  ...
$110D: $E001:     $01 -> r16
$110E: $9300:     r16 -> [$0626]
$110F: $0626:  
$1110: $D941:  F: rcall $A52 (_Menu_Parse)
$1111: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= 3) then goto $111F ...
$1112: $3003:     r16 = $03
$1113: $F459:     if (Z=0) then goto $111F
               F: D_Menu_Simulation -> Menu_Pointer  ...
$1114: $E10B:     $1B -> r16
$1115: $9300:     r16 -> [$0624]
$1116: $0624:  
$1117: $E100:     $10 -> r16
$1118: $9300:     r16 -> [$0625]
$1119: $0625:  
               F: SHOW -> Menu_Action  ...
$111A: $E001:     $01 -> r16
$111B: $9300:     r16 -> [$0626]
$111C: $0626:  
$111D: $D934:  F: rcall $A52 (_Menu_Parse)
$111E: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= 4) then goto $112C ...
$111F: $3004:     r16 = $04
$1120: $F459:     if (Z=0) then goto $112C
               F: D_Menu_Stat -> Menu_Pointer  ...
$1121: $E60A:     $6A -> r16
$1122: $9300:     r16 -> [$0624]
$1123: $0624:  
$1124: $E100:     $10 -> r16
$1125: $9300:     r16 -> [$0625]
$1126: $0625:  
               F: SHOW -> Menu_Action  ...
$1127: $E001:     $01 -> r16
$1128: $9300:     r16 -> [$0626]
$1129: $0626:  
$112A: $D927:  F: rcall $A52 (_Menu_Parse)
$112B: $9508:  F: RET (ret)
-----          L: 
               C: if (r16 -= 5) then goto $1139 ...
$112C: $3005:     r16 = $05
$112D: $F459:     if (Z=0) then goto $1139
               F: D_Menu_Info -> Menu_Pointer  ...
$112E: $EA0D:     $AD -> r16
$112F: $9300:     r16 -> [$0624]
$1130: $0624:  
$1131: $E100:     $10 -> r16
$1132: $9300:     r16 -> [$0625]
$1133: $0625:  
               F: SHOW -> Menu_Action  ...
$1134: $E001:     $01 -> r16
$1135: $9300:     r16 -> [$0626]
$1136: $0626:  
$1137: $D91A:  F: rcall $A52 (_Menu_Parse)
$1138: $9508:  F: RET (ret)
-----          L: 
$1139: $9508:  F: RET (ret)
-----          V: _Menu_Main_Move
-----          L: 
               C: if (EX_Key_Encoder_Flag = 0) then goto $114A ...
$113A: $9100:     [$010C] -> r16
$113B: $010C:  
$113C: $3000:     r16 = $00
$113D: $F061:     if (Z=1) then goto $114A
$113E: $9100:  F: [$062C] -> r16 (Menu_Main_counter -> r16)
$113F: $062C:  
               C: if (r16 >= 7) then goto $1143 ...
$1140: $3007:     r16 = $07
$1141: $F008:     if ( < ) then goto $1143
$1142: $9508:  F: RET (ret)
$1143: $9503:  F: r16 ++ (r16 ++)
$1144: $9300:  F: r16 -> [$062C] (r16 -> Menu_Main_counter)
$1145: $062C:  
               F: MSHOW -> Menu_actFlag  ...
$1146: $EF0D:     $FD -> r16
$1147: $9300:     r16 -> [$063B]
$1148: $063B:  
$1149: $9508:  F: RET (ret)
-----          L: 
-----          L: 
$114A: $9100:  F: [$062C] -> r16 (Menu_Main_counter  -> r16)
$114B: $062C:  
               C: if (r16 = 0) then goto $114F ...
$114C: $3000:     r16 = $00
$114D: $F409:     if (Z=0) then goto $114F
$114E: $9508:  F: RET (ret)
$114F: $950A:  F: r16 -- (r16 --)
$1150: $9300:  F: r16 -> [$062C] (r16 -> Menu_Main_counter)
$1151: $062C:  
               F: MSHOW -> Menu_actFlag  ...
$1152: $EF0D:     $FD -> r16
$1153: $9300:     r16 -> [$063B]
$1154: $063B:  
$1155: $9508:  F: RET (ret)
-----          V: _Menu_Main_Reset
-----          L: 
$1156: $940E:  F: CALL $287 (_ssd_Clr)
$1157: $0287:  
-----          L: 
$1158: $C02E:  J: goto $1187 (RJMP)
-----          V: _Menu_Regular_Move
               C: if (EX_Key_Encoder_Hold = 1) then goto $116C ...
$1159: $9100:     [$010D] -> r16
$115A: $010D:  
$115B: $3001:     r16 = $01
$115C: $F079:     if (Z=1) then goto $116C
               C: if (EX_Key_Encoder_Flag = 1) then goto $1164 ...
$115D: $9100:     [$010C] -> r16
$115E: $010C:  
$115F: $3001:     r16 = $01
$1160: $F419:     if (Z=0) then goto $1164
               F: UP -> Menu_actFlag  ...
$1161: $E006:     $06 -> r16
$1162: $9300:     r16 -> [$063B]
$1163: $063B:  
               C: if (EX_Key_Encoder_Flag = 0) then goto $116B ...
$1164: $9100:     [$010C] -> r16
$1165: $010C:  
$1166: $3000:     r16 = $00
$1167: $F419:     if (Z=0) then goto $116B
               F: DOWN -> Menu_actFlag  ...
$1168: $E007:     $07 -> r16
$1169: $9300:     r16 -> [$063B]
$116A: $063B:  
$116B: $9508:  F: RET (ret)
-----          L: 
               C: if (EX_Key_Encoder_Flag = 1) then goto $1173 ...
$116C: $9100:     [$010C] -> r16
$116D: $010C:  
$116E: $3001:     r16 = $01
$116F: $F419:     if (Z=0) then goto $1173
               F: RIGHT -> Menu_actFlag  ...
$1170: $E005:     $05 -> r16
$1171: $9300:     r16 -> [$063B]
$1172: $063B:  
               C: if (EX_Key_Encoder_Flag = 0) then goto $117A ...
$1173: $9100:     [$010C] -> r16
$1174: $010C:  
$1175: $3000:     r16 = $00
$1176: $F419:     if (Z=0) then goto $117A
               F: LEFT -> Menu_actFlag  ...
$1177: $E004:     $04 -> r16
$1178: $9300:     r16 -> [$063B]
$1179: $063B:  
$117A: $9508:  F: RET (ret)
-----          V: _Menu_Main_Show
-----          L: 
-----          L: 
$117B: $E000:  F: $00 -> r16 (0 -> r16)
$117C: $E013:  F: $03 -> r17 (3 -> r17)
$117D: $940E:  F: CALL $26F (_ssd_Pos_)
$117E: $026F:  
$117F: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$1180: $0264:  
$1181: $E000:  F: $00 -> r16 (0 -> r16)
$1182: $E015:  F: $05 -> r17 (5 -> r17)
$1183: $940E:  F: CALL $26F (_ssd_Pos_)
$1184: $026F:  
$1185: $940E:  F: CALL $264 (_ssd_Clr_rest_line)
$1186: $0264:  
-----          L: 
               F: 1 -> Menu_Draw_Flag  ...
$1187: $E001:     $01 -> r16
$1188: $9300:     r16 -> [$062A]
$1189: $062A:  
-----          L: 
-----          L: 
-----          L: 
$118A: $9100:  F: [$062C] -> r16 (Menu_Main_counter -> r16)
$118B: $062C:  
$118C: $0F00:  F: << r16 (<<r16)
$118D: $0F00:  F: << r16 (<<r16)
               C: if (r16 >= 24) then goto $1191 ...
$118E: $3108:     r16 = $18
$118F: $F008:     if ( < ) then goto $1191
$1190: $5108:  F: r16 - $18 (r16 - 24)
-----          L: 
$1191: $E014:  F: $04 -> r17 (4 -> r17)
$1192: $940E:  F: CALL $26F (_ssd_Pos_)
$1193: $026F:  
               C: if (Menu_Main_counter -= 0) then goto $11B5 ...
$1194: $9100:     [$062C] -> r16
$1195: $062C:  
$1196: $3000:     r16 = $00
$1197: $F4E9:     if (Z=0) then goto $11B5
$1198: $940E:  F: CALL $725 (_print_string_)
$1199: $0725:  
$119A: $20 $20 $20 $20 $20 $20 $20 $20 $20 $20 $20 $18 $18 $18 $18 $18
$11A2: $18 $18 $20 $00
$11A4: $E000:  F: $00 -> r16 (0 -> r16)
$11A5: $E017:  F: $07 -> r17 (7 -> r17)
$11A6: $940E:  F: CALL $26F (_ssd_Pos_)
$11A7: $026F:  
$11A8: $940E:  F: CALL $725 (_print_string_)
$11A9: $0725:  
$11AA: $20 $20 $20 $20 $20 $20 $C2 $FB $EA $EB $FE $F7 $E5 $ED $EE $20
$11B2: $20 $20 $20 $20 $20 $00
-----          L: 
               C: if (Menu_Main_counter -= 1) then goto $11D6 ...
$11B5: $9100:     [$062C] -> r16
$11B6: $062C:  
$11B7: $3001:     r16 = $01
$11B8: $F4E9:     if (Z=0) then goto $11D6
$11B9: $940E:  F: CALL $725 (_print_string_)
$11BA: $0725:  
$11BB: $20 $20 $20 $20 $18 $20 $20 $20 $20 $20 $20 $18 $18 $18 $18 $18
$11C3: $18 $20 $20 $00
$11C5: $E000:  F: $00 -> r16 (0 -> r16)
$11C6: $E017:  F: $07 -> r17 (7 -> r17)
$11C7: $940E:  F: CALL $26F (_ssd_Pos_)
$11C8: $026F:  
$11C9: $940E:  F: CALL $725 (_print_string_)
$11CA: $0725:  
$11CB: $20 $CF $EB $E0 $E2 $ED $E0 $FF $20 $EF $F0 $EE $F1 $F2 $E0 $FF
$11D3: $20 $F2 $E5 $EC $E0 $00
-----          L: 
               C: if (Menu_Main_counter -= 2) then goto $11F7 ...
$11D6: $9100:     [$062C] -> r16
$11D7: $062C:  
$11D8: $3002:     r16 = $02
$11D9: $F4E9:     if (Z=0) then goto $11F7
$11DA: $940E:  F: CALL $725 (_print_string_)
$11DB: $0725:  
$11DC: $20 $20 $20 $18 $18 $20 $20 $20 $20 $20 $20 $18 $18 $18 $18 $18
$11E4: $20 $20 $00 $00
$11E6: $E000:  F: $00 -> r16 (0 -> r16)
$11E7: $E017:  F: $07 -> r17 (7 -> r17)
$11E8: $940E:  F: CALL $26F (_ssd_Pos_)
$11E9: $026F:  
$11EA: $940E:  F: CALL $725 (_print_string_)
$11EB: $0725:  
$11EC: $20 $C1 $FB $F1 $F2 $F0 $E0 $FF $20 $EF $F0 $EE $F1 $F2 $E0 $FF
$11F4: $20 $F2 $E5 $EC $E0 $00
-----          L: 
               C: if (Menu_Main_counter -= 3) then goto $1217 ...
$11F7: $9100:     [$062C] -> r16
$11F8: $062C:  
$11F9: $3003:     r16 = $03
$11FA: $F4E1:     if (Z=0) then goto $1217
$11FB: $940E:  F: CALL $725 (_print_string_)
$11FC: $0725:  
$11FD: $20 $20 $18 $18 $18 $20 $20 $20 $20 $20 $20 $18 $18 $18 $18 $20
$1205: $20 $00
$1206: $E000:  F: $00 -> r16 (0 -> r16)
$1207: $E017:  F: $07 -> r17 (7 -> r17)
$1208: $940E:  F: CALL $26F (_ssd_Pos_)
$1209: $026F:  
$120A: $940E:  F: CALL $725 (_print_string_)
$120B: $0725:  
$120C: $20 $20 $20 $20 $20 $20 $D2 $E5 $EC $E0 $20 $E2 $EE $E4 $FB $20
$1214: $20 $20 $20 $20 $20 $00
-----          L: 
               C: if (Menu_Main_counter -= 4) then goto $1237 ...
$1217: $9100:     [$062C] -> r16
$1218: $062C:  
$1219: $3004:     r16 = $04
$121A: $F4E1:     if (Z=0) then goto $1237
$121B: $940E:  F: CALL $725 (_print_string_)
$121C: $0725:  
$121D: $20 $18 $18 $18 $18 $20 $20 $20 $20 $20 $20 $18 $18 $18 $20 $20
$1225: $00 $00
$1226: $E000:  F: $00 -> r16 (0 -> r16)
$1227: $E017:  F: $07 -> r17 (7 -> r17)
$1228: $940E:  F: CALL $26F (_ssd_Pos_)
$1229: $026F:  
$122A: $940E:  F: CALL $725 (_print_string_)
$122B: $0725:  
$122C: $20 $20 $20 $20 $20 $20 $D2 $E5 $EC $E0 $20 $EE $E3 $ED $FF $20
$1234: $20 $20 $20 $20 $20 $00
-----          L: 
-----          L: 
               C: if (Menu_Main_counter -= 5) then goto $1256 ...
$1237: $9100:     [$062C] -> r16
$1238: $062C:  
$1239: $3005:     r16 = $05
$123A: $F4D9:     if (Z=0) then goto $1256
$123B: $940E:  F: CALL $725 (_print_string_)
$123C: $0725:  
$123D: $18 $18 $18 $18 $18 $20 $20 $20 $20 $20 $20 $18 $18 $20 $20 $00
$1245: $E000:  F: $00 -> r16 (0 -> r16)
$1246: $E017:  F: $07 -> r17 (7 -> r17)
$1247: $940E:  F: CALL $26F (_ssd_Pos_)
$1248: $026F:  
$1249: $940E:  F: CALL $725 (_print_string_)
$124A: $0725:  
$124B: $20 $20 $20 $20 $20 $20 $CC $EE $FF $20 $F2 $E5 $EC $E0 $20 $31
$1253: $20 $20 $20 $20 $20 $00
-----          L: 
-----          L: 
               C: if (Menu_Main_counter -= 6) then goto $1277 ...
$1256: $9100:     [$062C] -> r16
$1257: $062C:  
$1258: $3006:     r16 = $06
$1259: $F4E9:     if (Z=0) then goto $1277
$125A: $940E:  F: CALL $725 (_print_string_)
$125B: $0725:  
$125C: $20 $20 $20 $18 $18 $18 $18 $18 $18 $20 $20 $20 $20 $20 $20 $18
$1264: $20 $20 $00 $00
$1266: $E000:  F: $00 -> r16 (0 -> r16)
$1267: $E017:  F: $07 -> r17 (7 -> r17)
$1268: $940E:  F: CALL $26F (_ssd_Pos_)
$1269: $026F:  
$126A: $940E:  F: CALL $725 (_print_string_)
$126B: $0725:  
$126C: $20 $20 $20 $20 $20 $20 $CC $EE $FF $20 $F2 $E5 $EC $E0 $20 $32
$1274: $20 $20 $20 $20 $20 $00
-----          L: 
-----          L: 
               C: if (Menu_Main_counter -= 7) then goto $12A4 ...
$1277: $9100:     [$062C] -> r16
$1278: $062C:  
$1279: $3007:     r16 = $07
$127A: $F549:     if (Z=0) then goto $12A4
$127B: $940E:  F: CALL $725 (_print_string_)
$127C: $0725:  
$127D: $20 $20 $18 $18 $18 $18 $18 $18 $18 $20 $20 $20 $20 $20 $20 $00
$1285: $E000:  F: $00 -> r16 (0 -> r16)
$1286: $E017:  F: $07 -> r17 (7 -> r17)
$1287: $940E:  F: CALL $26F (_ssd_Pos_)
$1288: $026F:  
$1289: $940E:  F: CALL $725 (_print_string_)
$128A: $0725:  
$128B: $20 $20 $20 $20 $20 $20 $C8 $ED $F4 $EE $F0 $EC $E0 $F6 $E8 $FF
$1293: $20 $20 $20 $20 $20 $00
$1296: $940E:  F: CALL $725 (_print_string_)
$1297: $0725:  
$1298: $20 $C8 $EC $E8 $F2 $E0 $F6 $E8 $E8 $20 $EF $F0 $E8 $F1 $F3 $F2
$12A0: $F1 $F2 $E2 $E8 $FF $20 $00 $00
-----          L: 
$12A4: $9100:  F: [$062C] -> r16 (Menu_Main_counter -> r16)
$12A5: $062C:  
$12A6: $0F00:  F: << r16 (<<r16)
$12A7: $0F00:  F: << r16 (<<r16)
$12A8: $5D0C:  F: r16 - $DC (r16 + 36)
-----          L: 
$12A9: $E013:  F: $03 -> r17 (3 -> r17)
$12AA: $940E:  F: CALL $26F (_ssd_Pos_)
$12AB: $026F:  
$12AC: $9100:  F: [$062C] -> r16 (Menu_Main_counter -> r16)
$12AD: $062C:  
$12AE: $940E:  F: CALL $36E (_ssd_spite_)
$12AF: $036E:  
-----          L: 
               F: 0 -> Menu_Draw_Flag  ...
$12B0: $E000:     $00 -> r16
$12B1: $9300:     r16 -> [$062A]
$12B2: $062A:  
-----          L: 
$12B3: $9508:  F: RET (ret)
*********   D:\Projects\WalkingLight\Firmwares\mcu\Effects.alg    ***********
-----          V: EDisp_Flash_Bank
-----          L: 
-----          L: 
$12B4: $03 $00
$12B5: $0C $10 $00 $00
$12B7: $0A $64 $00 $00
-----          L: 
$12B9: $08 $0A
$12BA: $0B $00
$12BB: $0C $10 $00 $00
$12BD: $0E $15 $01 $00
$12BF: $0C $08 $03 $00
$12C1: $0A $5E $01 $00
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$12C3: $04 $00
$12C4: $0E $10 $01 $00
$12C6: $15 $00
$12C7: $0C $04 $64 $00
$12C9: $0A $1F $04 $00
-----          L: 
$12CB: $05 $00
$12CC: $12 $00 $01 $00
$12CE: $0E $07 $F6 $00
$12D0: $0A $FA $00 $00
-----          L: 
$12D2: $06 $00
$12D3: $0C $00 $FF $00
$12D5: $0E $18 $03 $00
$12D7: $0A $F4 $01 $00
-----          L: 
$12D9: $07 $00
$12DA: $0C $00 $FF $00
$12DC: $0E $18 $03 $00
$12DE: $15 $00
$12DF: $0A $F4 $01 $00
-----          L: 
$12E1: $08 $00
$12E2: $13 $09 $01 $00
$12E4: $0E $07 $0A $00
$12E6: $14 $00
$12E7: $0A $FA $00 $00
-----          L: 
-----          L: 
$12E9: $04 $01
$12EA: $0E $10 $01 $00
$12EC: $0E $17 $02 $00
$12EE: $0E $17 $03 $00
$12F0: $14 $00
$12F1: $15 $00
$12F2: $0C $04 $64 $00
$12F4: $0A $1F $04 $00
-----          L: 
$12F6: $05 $01
$12F7: $11 $00 $02 $00
$12F9: $0E $03 $01 $00
$12FB: $0E $03 $02 $00
$12FD: $0E $03 $03 $00
$12FF: $0A $FA $00 $00
-----          L: 
$1301: $06 $01
$1302: $0C $00 $FF $00
$1304: $0E $18 $01 $00
$1306: $0E $18 $02 $00
$1308: $0E $18 $03 $00
$130A: $0A $2C $01 $00
-----          L: 
$130C: $07 $01
$130D: $0C $00 $FF $00
$130F: $0E $18 $01 $00
$1311: $0E $18 $02 $00
$1313: $0E $18 $03 $00
$1315: $15 $00
$1316: $0A $2C $01 $00
-----          L: 
$1318: $08 $01
$1319: $0C $00 $FF $00
$131B: $11 $08 $02 $00
$131D: $0E $03 $01 $00
$131F: $0E $03 $02 $00
$1321: $0E $03 $03 $00
$1323: $0A $FA $00 $00
-----          L: 
-----          L: 
$1325: $04 $02
$1326: $0B $00
$1327: $0F $17 $01 $00
$1329: $0C $08 $14 $00
$132B: $0A $0A $00 $00
-----          L: 
$132D: $05 $02
$132E: $0B $00
$132F: $0F $07 $01 $00
$1331: $0A $46 $00 $00
-----          L: 
$1333: $06 $02
$1334: $0B $00
$1335: $0C $07 $14 $00
$1337: $0F $00 $01 $00
$1339: $0A $FA $00 $00
-----          L: 
$133B: $07 $02
$133C: $0B $00
$133D: $0C $07 $14 $00
$133F: $0F $00 $01 $00
$1341: $0A $FA $00 $00
-----          L: 
$1343: $08 $02
$1344: $0B $00
$1345: $0F $08 $01 $00
$1347: $0A $78 $00 $00
-----          L: 
-----          L: 
$1349: $04 $03
$134A: $0B $00
$134B: $0F $00 $01 $00
$134D: $10 $00 $80 $00
$134F: $14 $00
$1350: $15 $00
$1351: $0A $2C $01 $00
-----          L: 
$1353: $05 $03
$1354: $0B $00
$1355: $0F $07 $03 $00
$1357: $11 $04 $02 $00
$1359: $14 $00
$135A: $10 $00 $78 $00
$135C: $14 $00
$135D: $0A $FA $00 $00
-----          L: 
$135F: $06 $03
$1360: $0B $00
$1361: $0F $07 $03 $00
$1363: $14 $00
$1364: $10 $00 $78 $00
$1366: $14 $00
$1367: $0A $FA $00 $00
-----          L: 
$1369: $07 $03
$136A: $0B $00
$136B: $0F $00 $03 $00
$136D: $10 $00 $80 $00
$136F: $14 $00
$1370: $15 $00
$1371: $0A $2C $01 $00
-----          L: 
$1373: $08 $03
$1374: $0B $00
$1375: $14 $00
$1376: $10 $00 $78 $00
$1378: $14 $00
$1379: $0A $FA $00 $00
-----          L: 
-----          L: 
$137B: $04 $04
$137C: $0E $07 $01 $00
$137E: $14 $05
$137F: $0C $04 $46 $00
$1381: $0A $F0 $00 $00
-----          L: 
$1383: $05 $04
$1384: $0B $00
$1385: $0E $07 $01 $00
$1387: $10 $00 $02 $00
$1389: $0A $F0 $00 $00
-----          L: 
$138B: $06 $04
$138C: $0B $00
$138D: $0E $07 $02 $00
$138F: $10 $00 $02 $00
$1391: $0A $F0 $00 $00
-----          L: 
$1393: $07 $04
$1394: $0B $00
$1395: $0E $07 $01 $00
$1397: $10 $00 $02 $00
$1399: $14 $05
$139A: $0A $F0 $00 $00
-----          L: 
$139C: $08 $04
$139D: $0B $00
$139E: $0C $08 $01 $00
$13A0: $0A $F0 $00 $00
-----          L: 
-----          L: 
-----          L: 
$13A2: $01 $00
*********   D:\Projects\WalkingLight\Firmwares\mcu\EDisp.alg    ***********
-----          V: _Round_EDisp
-----          L: 
-----          L: 
$13A3: $6034:  F: r19 ! $04 (1 -> F_Effect_End)
-----          L: 
-----          L: 
               F: EDisp_Pointer_Flash_Bank -> Z  ...
$13A4: $91E0:     [$063C] -> r30
$13A5: $063C:  
$13A6: $91F0:     [$063D] -> r31
$13A7: $063D:  
$13A8: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
-----          L: 
               C: if (r16 >= EDISP_ELEMENT_NUMB) then goto $13AC ...
$13A9: $310E:     r16 = $1E
$13AA: $F008:     if ( < ) then goto $13AC
$13AB: $E001:  F: $01 -> r16 (1 -> r16)
-----          L: 
               F: EDisp_Handl_List*2 -> Z  ...
$13AC: $E6EE:     $6E -> r30
$13AD: $E2F7:     $27 -> r31
$13AE: $0F00:  F: << r16 (<< r16)
               F: Z + r16 +  ...
$13AF: $1FE0:     r30 + r16 +
$13B0: $E010:     $00 -> r17
$13B1: $1FF1:     r31 + r17 +
               F: LPM[Z++]:Word -> r16:Word  ...
$13B2: $9105:     LPM[Z++] -> r16
$13B3: $9115:     LPM[Z++] -> r17
$13B4: $01F8:  F: r16,r17 -> r30,r31 (r16:Word -> Z)
$13B5: $9509:  F: CALL[Z] (CALL[Z])
$13B6: $CFED:  J: goto $13A4 (RJMP)
-----          V: EDisp_Handl_List
-----          L: 
$13B7: $DD $13
$13B8: $EB $13
$13B9: $EB $13
$13BA: $1F $14
-----          L: 
$13BB: $E8 $14
$13BC: $B8 $14
$13BD: $88 $14
$13BE: $58 $14
$13BF: $28 $14
$13C0: $EB $13
-----          L: 
$13C1: $18 $15
$13C2: $36 $15
$13C3: $8F $15
$13C4: $B2 $15
$13C5: $D7 $15
$13C6: $0E $16
$13C7: $3D $16
$13C8: $6F $16
$13C9: $95 $16
$13CA: $F0 $16
$13CB: $22 $17
-----          L: 
$13CC: $43 $17
$13CD: $58 $17
-----          L: 
-----          V: _Init_EDisp
-----          L: 
               F: 2 * EDisp_Flash_Bank -> EDisp_Pointer_Flash_Bank  ...
$13CE: $E608:     $68 -> r16
$13CF: $9300:     r16 -> [$063C]
$13D0: $063C:  
$13D1: $E205:     $25 -> r16
$13D2: $9300:     r16 -> [$063D]
$13D3: $063D:  
               F: @EDisp_SRAM_Bank -> EDisp_Pointer_SRAM_Bank  ...
$13D4: $E400:     $40 -> r16
$13D5: $9300:     r16 -> [$063E]
$13D6: $063E:  
$13D7: $E006:     $06 -> r16
$13D8: $9300:     r16 -> [$063F]
$13D9: $063F:  
-----          L: 
-----          L: 
$13DA: $7F3E:  F: r19 & $FE (0 -> F_Disp)
$13DB: $7F3D:  F: r19 & $FD (0 -> F_Effect)
$13DC: $9508:  F: RET (ret)
-----          V: _00_Element
$13DD: $E001:  F: $01 -> r16 (1 -> r16)
$13DE: $D303:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$13DF: $9508:  F: RET (ret)
-----          V: _MGet_Var
$13E0: $931F:  F: r17 -> (r17 ->)
               F: EDisp_Pointer_SRAM_Bank -> Z  ...
$13E1: $91E0:     [$063E] -> r30
$13E2: $063E:  
$13E3: $91F0:     [$063F] -> r31
$13E4: $063F:  
               F: Z + r16  ...
$13E5: $0FE0:     r30 + r16
$13E6: $E010:     $00 -> r17
$13E7: $1FF1:     r31 + r17 +
$13E8: $8100:  F: [Z] -> r16 ([Z] -> r16)
$13E9: $911F:  F: -> r17 (-> r17)
$13EA: $9508:  F: RET (ret)
-----          V: _01_Element
-----          L: 
$13EB: $94F8:  F: 0 -> I (0 -> I)
-----          L: 
-----          L: 
               C: if (Effect_Number = 255) then goto $1417 ...
$13EC: $9100:     [$05F8] -> r16
$13ED: $05F8:  
$13EE: $3F0F:     r16 = $FF
$13EF: $F139:     if (Z=1) then goto $1417
-----          L: 
-----          L: 
$13F0: $E070:  F: $00 -> r23 (0 -> ETemp)
               F: @Stair_Level_Out -> Y  ...
$13F1: $EACD:     $AD -> r28
$13F2: $E0D5:     $05 -> r29
$13F3: $E010:  F: $00 -> r17 (0 -> r17)
-----          L: 
$13F4: $A908:  F: [Y+$30] -> r 16 ([Y + 2*STAIR_MAX_NUMB] -> r16)
$13F5: $AB78:  F: r23 -> [Y+$30] (ETemp -> [Y + 2*STAIR_MAX_NUMB])
-----          L: 
$13F6: $8F08:  F: r16 -> [Y+$18] (r16 -> [Y + STAIR_MAX_NUMB])
-----          L: 
$13F7: $9160:  F: [$05FD] -> r22 (Effect_Result_Contrast -> EMod)
$13F8: $05FD:  
$13F9: $0F06:  F: r16 + r22 (r16 + EMod)
$13FA: $F408:  C: if (C=0) then goto $13FC (C = 1)
$13FB: $EF0F:  F: $FF -> r16 (255 -> r16)
-----          L: 
$13FC: $9160:  F: [$05FC] -> r22 (Effect_Result_Bright -> EMod)
$13FD: $05FC:  
$13FE: $9F06:  F: r16 * r22 (r16 * EMod)
$13FF: $2D01:  F: r1 -> r16 (r1 -> r16)
-----          L: 
$1400: $9160:  F: [$0616] -> r22 (Stairs_Number -> EMod)
$1401: $0616:  
$1402: $956A:  F: r22 -- (EMod --)
               C: if (r17 = EMod) then goto $1407 ...
$1403: $1716:     r17 = r22
$1404: $F011:     if (Z=1) then goto $1407
               C: if (r17 -= 0) then goto $140D ...
$1405: $3010:     r17 = $00
$1406: $F431:     if (Z=0) then goto $140D
-----          L: 
$1407: $9160:  F: [$0618] -> r22 (Effect_Start_End_bright -> EMod)
$1408: $0618:  
$1409: $9562:  F: >> r22 << (>> EMod <<)
               C: if (EMod >= r16) then goto $140D ...
$140A: $1760:     r22 = r16
$140B: $F008:     if ( < ) then goto $140D
$140C: $2F06:  F: r22 -> r16 (EMod -> r16)
-----          L: 
-----          L: 
$140D: $9160:  F: [$05F5] -> r22 (Stair_On -> EMod)
$140E: $05F5:  
$140F: $956A:  F: r22 -- (EMod --)
               C: if (r17 = EMod) then goto $1413 ...
$1410: $1716:     r17 = r22
$1411: $F409:     if (Z=0) then goto $1413
$1412: $EF0F:  F: $FF -> r16 (255 -> r16)
-----          L: 
$1413: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
-----          L: 
$1414: $9513:  F: r17 ++ (r17++)
               C: if (r17 < STAIR_MAX_NUMB) then goto $13F4 ...
$1415: $3118:     r17 = $18
$1416: $F2E8:     if ( < ) then goto $13F4
-----          L: 
$1417: $FD32:  C: if (r19.2=0 then SKIP (F_Effect_End = 1)
$1418: $940E:  F: CALL $87F (_Effect_End)
$1419: $087F:  
-----          L: 
$141A: $DFB3:  F: rcall $13CE (_Init_EDisp)
-----          L: 
$141B: $910F:  F: -> r16 (-> r16)
$141C: $910F:  F: -> r16 (-> r16)
$141D: $9478:  F: 1 -> I (1 -> I)
$141E: $9508:  F: RET (ret)
-----          V: _03_Element
$141F: $7F3D:  F: r19 & $FD (0 -> F_Effect)
-----          L: 
               C: if (Effect_Mode = GAP) then goto $1425 ...
$1420: $9100:     [$05F7] -> r16
$1421: $05F7:  
$1422: $3003:     r16 = $03
$1423: $F409:     if (Z=0) then goto $1425
$1424: $6032:  F: r19 ! $02 (1 -> F_Effect)
-----          L: 
-----          L: 
-----          L: 
$1425: $E002:  F: $02 -> r16 (2 -> r16)
$1426: $D2BB:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1427: $9508:  F: RET (ret)
-----          V: _08_Element
$1428: $7F3D:  F: r19 & $FD (0 -> F_Effect)
-----          L: 
               C: if (Effect_Mode -= EXIT) then goto $1455 ...
$1429: $9100:     [$05F7] -> r16
$142A: $05F7:  
$142B: $3008:     r16 = $08
$142C: $F541:     if (Z=0) then goto $1455
$142D: $E001:  F: $01 -> r16 (1 -> r16)
$142E: $D29A:  F: rcall $16C9 (_MGet_Cnst)
               C: if (r16 -= Effect_Number) then goto $1455 ...
$142F: $9110:     [$05F8] -> r17
$1430: $05F8:  
$1431: $1701:     r16 = r17
$1432: $F511:     if (Z=0) then goto $1455
$1433: $6032:  F: r19 ! $02 (1 -> F_Effect)
$1434: $9100:  F: [$05FF] -> r16 (Effect_Overall_Speed -> r16)
$1435: $05FF:  
$1436: $9502:  F: >> r16 << (>> r16 <<)
$1437: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$1438: $9110:  F: [$0613] -> r17 (Effect_EXIT_Speed -> r17)
$1439: $0613:  
$143A: $9512:  F: >> r17 << (>> r17 <<)
$143B: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$143C: $9F01:  F: r16 * r17 (r16*r17)
$143D: $9210:  F: r1 -> [$05FB] (r1 -> Effect_Result_Speed)
$143E: $05FB:  
-----          L: 
$143F: $9100:  F: [$0600] -> r16 (Effect_Overall_Bright -> r16)
$1440: $0600:  
$1441: $9502:  F: >> r16 << (>> r16 <<)
$1442: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$1443: $9110:  F: [$0614] -> r17 (Effect_EXIT_Bright -> r17)
$1444: $0614:  
$1445: $9512:  F: >> r17 << (>> r17 <<)
$1446: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$1447: $9F01:  F: r16 * r17 (r16*r17)
$1448: $9210:  F: r1 -> [$05FC] (r1 -> Effect_Result_Bright)
$1449: $05FC:  
-----          L: 
$144A: $9100:  F: [$0601] -> r16 (Effect_Overall_Contrast -> r16)
$144B: $0601:  
$144C: $9502:  F: >> r16 << (>> r16 <<)
$144D: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$144E: $9110:  F: [$0615] -> r17 (Effect_EXIT_Contrast -> r17)
$144F: $0615:  
$1450: $9512:  F: >> r17 << (>> r17 <<)
$1451: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$1452: $9F01:  F: r16 * r17 (r16*r17)
$1453: $9210:  F: r1 -> [$05FD] (r1 -> Effect_Result_Contrast)
$1454: $05FD:  
-----          L: 
-----          L: 
$1455: $E002:  F: $02 -> r16 (2 -> r16)
$1456: $D28B:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1457: $9508:  F: RET (ret)
-----          V: _07_Element
$1458: $7F3D:  F: r19 & $FD (0 -> F_Effect)
-----          L: 
               C: if (Effect_Mode -= CROSSATTEND) then goto $1485 ...
$1459: $9100:     [$05F7] -> r16
$145A: $05F7:  
$145B: $3007:     r16 = $07
$145C: $F541:     if (Z=0) then goto $1485
$145D: $E001:  F: $01 -> r16 (1 -> r16)
$145E: $D26A:  F: rcall $16C9 (_MGet_Cnst)
               C: if (r16 -= Effect_Number) then goto $1485 ...
$145F: $9110:     [$05F8] -> r17
$1460: $05F8:  
$1461: $1701:     r16 = r17
$1462: $F511:     if (Z=0) then goto $1485
$1463: $6032:  F: r19 ! $02 (1 -> F_Effect)
$1464: $9100:  F: [$05FF] -> r16 (Effect_Overall_Speed -> r16)
$1465: $05FF:  
$1466: $9502:  F: >> r16 << (>> r16 <<)
$1467: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$1468: $9110:  F: [$060F] -> r17 (Effect_CROSSATTEND_Speed -> r17)
$1469: $060F:  
$146A: $9512:  F: >> r17 << (>> r17 <<)
$146B: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$146C: $9F01:  F: r16 * r17 (r16*r17)
$146D: $9210:  F: r1 -> [$05FB] (r1 -> Effect_Result_Speed)
$146E: $05FB:  
-----          L: 
$146F: $9100:  F: [$0600] -> r16 (Effect_Overall_Bright -> r16)
$1470: $0600:  
$1471: $9502:  F: >> r16 << (>> r16 <<)
$1472: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$1473: $9110:  F: [$0610] -> r17 (Effect_CROSSATTEND_Bright -> r17)
$1474: $0610:  
$1475: $9512:  F: >> r17 << (>> r17 <<)
$1476: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$1477: $9F01:  F: r16 * r17 (r16*r17)
$1478: $9210:  F: r1 -> [$05FC] (r1 -> Effect_Result_Bright)
$1479: $05FC:  
-----          L: 
$147A: $9100:  F: [$0601] -> r16 (Effect_Overall_Contrast -> r16)
$147B: $0601:  
$147C: $9502:  F: >> r16 << (>> r16 <<)
$147D: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$147E: $9110:  F: [$0611] -> r17 (Effect_CROSSATTEND_Contrast -> r17)
$147F: $0611:  
$1480: $9512:  F: >> r17 << (>> r17 <<)
$1481: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$1482: $9F01:  F: r16 * r17 (r16*r17)
$1483: $9210:  F: r1 -> [$05FD] (r1 -> Effect_Result_Contrast)
$1484: $05FD:  
-----          L: 
-----          L: 
$1485: $E002:  F: $02 -> r16 (2 -> r16)
$1486: $D25B:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1487: $9508:  F: RET (ret)
-----          V: _06_Element
$1488: $7F3D:  F: r19 & $FD (0 -> F_Effect)
-----          L: 
               C: if (Effect_Mode -= ATTEND) then goto $14B5 ...
$1489: $9100:     [$05F7] -> r16
$148A: $05F7:  
$148B: $3006:     r16 = $06
$148C: $F541:     if (Z=0) then goto $14B5
$148D: $E001:  F: $01 -> r16 (1 -> r16)
$148E: $D23A:  F: rcall $16C9 (_MGet_Cnst)
               C: if (r16 -= Effect_Number) then goto $14B5 ...
$148F: $9110:     [$05F8] -> r17
$1490: $05F8:  
$1491: $1701:     r16 = r17
$1492: $F511:     if (Z=0) then goto $14B5
$1493: $6032:  F: r19 ! $02 (1 -> F_Effect)
$1494: $9100:  F: [$05FF] -> r16 (Effect_Overall_Speed -> r16)
$1495: $05FF:  
$1496: $9502:  F: >> r16 << (>> r16 <<)
$1497: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$1498: $9110:  F: [$060B] -> r17 (Effect_ATTEND_Speed -> r17)
$1499: $060B:  
$149A: $9512:  F: >> r17 << (>> r17 <<)
$149B: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$149C: $9F01:  F: r16 * r17 (r16*r17)
$149D: $9210:  F: r1 -> [$05FB] (r1 -> Effect_Result_Speed)
$149E: $05FB:  
-----          L: 
$149F: $9100:  F: [$0600] -> r16 (Effect_Overall_Bright -> r16)
$14A0: $0600:  
$14A1: $9502:  F: >> r16 << (>> r16 <<)
$14A2: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$14A3: $9110:  F: [$060C] -> r17 (Effect_ATTEND_Bright -> r17)
$14A4: $060C:  
$14A5: $9512:  F: >> r17 << (>> r17 <<)
$14A6: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$14A7: $9F01:  F: r16 * r17 (r16*r17)
$14A8: $9210:  F: r1 -> [$05FC] (r1 -> Effect_Result_Bright)
$14A9: $05FC:  
-----          L: 
$14AA: $9100:  F: [$0601] -> r16 (Effect_Overall_Contrast -> r16)
$14AB: $0601:  
$14AC: $9502:  F: >> r16 << (>> r16 <<)
$14AD: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$14AE: $9110:  F: [$060D] -> r17 (Effect_ATTEND_Contrast -> r17)
$14AF: $060D:  
$14B0: $9512:  F: >> r17 << (>> r17 <<)
$14B1: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$14B2: $9F01:  F: r16 * r17 (r16*r17)
$14B3: $9210:  F: r1 -> [$05FD] (r1 -> Effect_Result_Contrast)
$14B4: $05FD:  
-----          L: 
-----          L: 
$14B5: $E002:  F: $02 -> r16 (2 -> r16)
$14B6: $D22B:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$14B7: $9508:  F: RET (ret)
-----          V: _05_Element
$14B8: $7F3D:  F: r19 & $FD (0 -> F_Effect)
-----          L: 
               C: if (Effect_Mode -= ENTRANCE) then goto $14E5 ...
$14B9: $9100:     [$05F7] -> r16
$14BA: $05F7:  
$14BB: $3005:     r16 = $05
$14BC: $F541:     if (Z=0) then goto $14E5
$14BD: $E001:  F: $01 -> r16 (1 -> r16)
$14BE: $D20A:  F: rcall $16C9 (_MGet_Cnst)
               C: if (r16 -= Effect_Number) then goto $14E5 ...
$14BF: $9110:     [$05F8] -> r17
$14C0: $05F8:  
$14C1: $1701:     r16 = r17
$14C2: $F511:     if (Z=0) then goto $14E5
$14C3: $6032:  F: r19 ! $02 (1 -> F_Effect)
$14C4: $9100:  F: [$05FF] -> r16 (Effect_Overall_Speed -> r16)
$14C5: $05FF:  
$14C6: $9502:  F: >> r16 << (>> r16 <<)
$14C7: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$14C8: $9110:  F: [$0607] -> r17 (Effect_ENTRANCE_Speed -> r17)
$14C9: $0607:  
$14CA: $9512:  F: >> r17 << (>> r17 <<)
$14CB: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$14CC: $9F01:  F: r16 * r17 (r16*r17)
$14CD: $9210:  F: r1 -> [$05FB] (r1 -> Effect_Result_Speed)
$14CE: $05FB:  
-----          L: 
$14CF: $9100:  F: [$0600] -> r16 (Effect_Overall_Bright -> r16)
$14D0: $0600:  
$14D1: $9502:  F: >> r16 << (>> r16 <<)
$14D2: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$14D3: $9110:  F: [$0608] -> r17 (Effect_ENTRANCE_Bright -> r17)
$14D4: $0608:  
$14D5: $9512:  F: >> r17 << (>> r17 <<)
$14D6: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$14D7: $9F01:  F: r16 * r17 (r16*r17)
$14D8: $9210:  F: r1 -> [$05FC] (r1 -> Effect_Result_Bright)
$14D9: $05FC:  
-----          L: 
$14DA: $9100:  F: [$0601] -> r16 (Effect_Overall_Contrast -> r16)
$14DB: $0601:  
$14DC: $9502:  F: >> r16 << (>> r16 <<)
$14DD: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$14DE: $9110:  F: [$0609] -> r17 (Effect_ENTRANCE_Contrast -> r17)
$14DF: $0609:  
$14E0: $9512:  F: >> r17 << (>> r17 <<)
$14E1: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$14E2: $9F01:  F: r16 * r17 (r16*r17)
$14E3: $9210:  F: r1 -> [$05FD] (r1 -> Effect_Result_Contrast)
$14E4: $05FD:  
-----          L: 
-----          L: 
$14E5: $E002:  F: $02 -> r16 (2 -> r16)
$14E6: $D1FB:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$14E7: $9508:  F: RET (ret)
-----          V: _04_Element
$14E8: $7F3D:  F: r19 & $FD (0 -> F_Effect)
-----          L: 
               C: if (Effect_Mode -= STANDBY) then goto $1515 ...
$14E9: $9100:     [$05F7] -> r16
$14EA: $05F7:  
$14EB: $3004:     r16 = $04
$14EC: $F541:     if (Z=0) then goto $1515
$14ED: $E001:  F: $01 -> r16 (1 -> r16)
$14EE: $D1DA:  F: rcall $16C9 (_MGet_Cnst)
               C: if (r16 -= Effect_Number) then goto $1515 ...
$14EF: $9110:     [$05F8] -> r17
$14F0: $05F8:  
$14F1: $1701:     r16 = r17
$14F2: $F511:     if (Z=0) then goto $1515
$14F3: $6032:  F: r19 ! $02 (1 -> F_Effect)
$14F4: $9100:  F: [$05FF] -> r16 (Effect_Overall_Speed -> r16)
$14F5: $05FF:  
$14F6: $9502:  F: >> r16 << (>> r16 <<)
$14F7: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$14F8: $9110:  F: [$0603] -> r17 (Effect_STANDBY_Speed -> r17)
$14F9: $0603:  
$14FA: $9512:  F: >> r17 << (>> r17 <<)
$14FB: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$14FC: $9F01:  F: r16 * r17 (r16*r17)
$14FD: $9210:  F: r1 -> [$05FB] (r1 -> Effect_Result_Speed)
$14FE: $05FB:  
-----          L: 
$14FF: $9100:  F: [$0600] -> r16 (Effect_Overall_Bright -> r16)
$1500: $0600:  
$1501: $9502:  F: >> r16 << (>> r16 <<)
$1502: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$1503: $9110:  F: [$0604] -> r17 (Effect_STANDBY_Bright -> r17)
$1504: $0604:  
$1505: $9512:  F: >> r17 << (>> r17 <<)
$1506: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$1507: $9F01:  F: r16 * r17 (r16*r17)
$1508: $9210:  F: r1 -> [$05FC] (r1 -> Effect_Result_Bright)
$1509: $05FC:  
-----          L: 
$150A: $9100:  F: [$0601] -> r16 (Effect_Overall_Contrast -> r16)
$150B: $0601:  
$150C: $9502:  F: >> r16 << (>> r16 <<)
$150D: $600F:  F: r16 ! $0F (r16 ! #b00001111)
$150E: $9110:  F: [$0605] -> r17 (Effect_STANDBY_Contrast -> r17)
$150F: $0605:  
$1510: $9512:  F: >> r17 << (>> r17 <<)
$1511: $601F:  F: r17 ! $0F (r17 ! #b00001111)
$1512: $9F01:  F: r16 * r17 (r16*r17)
$1513: $9210:  F: r1 -> [$05FD] (r1 -> Effect_Result_Contrast)
$1514: $05FD:  
-----          L: 
-----          L: 
$1515: $E002:  F: $02 -> r16 (2 -> r16)
$1516: $D1CB:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1517: $9508:  F: RET (ret)
-----          V: _10_Element
-----          L: 
$1518: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1519: $C016:  C: goto $1530 (RJMP) (F_Effect = 0)
-----          L: 
$151A: $E001:  F: $01 -> r16 (1 -> r16)
$151B: $D1AD:  F: rcall $16C9 (_MGet_Cnst)
               F: LPM[Z++]:Word -> Y  ...
$151C: $91C5:     LPM[Z++] -> r28
$151D: $91D5:     LPM[Z++] -> r29
-----          L: 
$151E: $E000:  F: $00 -> r16 (0 -> r16)
$151F: $DEC0:  F: rcall $13E0 (_MGet_Var)
               F: [Z++]:Word -> r16:Word  ...
$1520: $9101:     [Z++] -> r16
$1521: $9111:     [Z++] -> r17
               C: if (r16:Word >= Y) then goto $152B ...
$1522: $170C:     r16 = r28
$1523: $071D:     r17 = r29=
$1524: $F430:     if ( >= ) then goto $152B
-----          L: 
               F: r16:Word ++  ...
$1525: $5F0F:     r16 - $FF
$1526: $4F1F:     r17 - $FF -
$1527: $9732:  F: r30,r31 - $02 (Z - 2)
               F: r16:Word -> [Z++]:Word  ...
$1528: $9301:     r16 -> [Z++]
$1529: $9311:     r17 -> [Z++]
-----          L: 
$152A: $7F3B:  F: r19 & $FB (0 -> F_Effect_End)
-----          L: 
-----          L: 
$152B: $E003:  F: $03 -> r16 (3 -> r16)
$152C: $D1B5:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$152D: $E002:  F: $02 -> r16 (2 -> r16)
$152E: $D1A5:  F: rcall $16D4 (_MStep_Var_Pntr)
$152F: $9508:  F: RET (ret)
-----          V: 
$1530: $E000:  F: $00 -> r16 (0 -> r16)
$1531: $DEAE:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z++]:Word  ...
$1532: $E000:     $00 -> r16
$1533: $9301:     r16 -> [Z++]
$1534: $9301:     r16 -> [Z++]
$1535: $CFF5:  J: goto $152B (RJMP)
-----          V: _11_Element
-----          L: 
$1536: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1537: $C052:  C: goto $158A (RJMP) (F_Effect = 0)
-----          L: 
$1538: $E001:  F: $01 -> r16 (1 -> r16)
$1539: $D18F:  F: rcall $16C9 (_MGet_Cnst)
$153A: $2F60:  F: r16 -> r22 (r16 -> EMod)
-----          L: 
               C: if (r16 < 16) then goto $1543 ...
$153B: $3100:     r16 = $10
$153C: $F030:     if ( < ) then goto $1543
-----          L: 
$153D: $E000:  F: $00 -> r16 (0 -> r16)
$153E: $DEA1:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 0) then goto $154F ...
$153F: $3000:     r16 = $00
$1540: $F471:     if (Z=0) then goto $154F
               F: 1 -> [Z]  ...
$1541: $E001:     $01 -> r16
$1542: $8300:     r16 -> [Z+$00]
-----          L: 
-----          L: 
$1543: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
               F: @Stair_Level_Effect -> Y  ...
$1544: $ECC5:     $C5 -> r28
$1545: $E0D5:     $05 -> r29
$1546: $E178:  F: $18 -> r23 (STAIR_MAX_NUMB -> ETemp)
-----          L: 
$1547: $8D08:  F: [Y+$18] -> r 16 ([Y + STAIR_MAX_NUMB] -> r16)
$1548: $8118:  F: [Y] -> r17 ([Y] -> r17)
$1549: $D00A:  F: rcall $1554 (_Do_Mods)
$154A: $8F08:  F: r16 -> [Y+$18] (r16 -> [Y + STAIR_MAX_NUMB])
               F: Y++  ...
$154B: $5FCF:     r28 - $FF
$154C: $4FDF:     r29 - $FF -
               C: if (ETemp --) then goto $1547 ...
$154D: $957A:     r23 --
$154E: $F7C1:     if (Z=0) then goto $1547
-----          L: 
-----          L: 
-----          L: 
$154F: $E002:  F: $02 -> r16 (2 -> r16)
$1550: $D191:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1551: $E001:  F: $01 -> r16 (1 -> r16)
$1552: $D181:  F: rcall $16D4 (_MStep_Var_Pntr)
$1553: $9508:  F: RET (ret)
-----          V: _Do_Mods
               C: if (EMod -= _set) then goto $1558 ...
$1554: $3060:     r22 = $00
$1555: $F411:     if (Z=0) then goto $1558
$1556: $2F01:  F: r17 -> r16 (r17 -> r16)
$1557: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _and) then goto $155C ...
$1558: $3061:     r22 = $01
$1559: $F411:     if (Z=0) then goto $155C
$155A: $2301:  F: r16 & r17 (r16 & r17)
$155B: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _or) then goto $1560 ...
$155C: $3062:     r22 = $02
$155D: $F411:     if (Z=0) then goto $1560
$155E: $2B01:  F: r16 ! r17 (r16 ! r17)
$155F: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _xor) then goto $1564 ...
$1560: $3063:     r22 = $03
$1561: $F411:     if (Z=0) then goto $1564
$1562: $2701:  F: r16 ^ r17 (r16 ^ r17)
$1563: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _mul) then goto $156D ...
$1564: $3064:     r22 = $04
$1565: $F439:     if (Z=0) then goto $156D
               F: r0:Word ->  ...
$1566: $920F:     r0 ->
$1567: $921F:     r1 ->
$1568: $9F01:  F: r16 * r17 (r16 * r17)
$1569: $2D01:  F: r1 -> r16 (r1 -> r16)
               F: -> r0:Word  ...
$156A: $901F:     -> r1
$156B: $900F:     -> r0
$156C: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _max) then goto $1573 ...
$156D: $3065:     r22 = $05
$156E: $F421:     if (Z=0) then goto $1573
               C: if (r16 < r17) then goto $1572 ...
$156F: $1701:     r16 = r17
$1570: $F408:     if ( >= ) then goto $1572
$1571: $2F01:  F: r17 -> r16 (r17 -> r16)
$1572: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _min) then goto $1579 ...
$1573: $3066:     r22 = $06
$1574: $F421:     if (Z=0) then goto $1579
               C: if (r16 >= r17) then goto $1578 ...
$1575: $1701:     r16 = r17
$1576: $F008:     if ( < ) then goto $1578
$1577: $2F01:  F: r17 -> r16 (r17 -> r16)
$1578: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _add) then goto $157F ...
$1579: $3067:     r22 = $07
$157A: $F421:     if (Z=0) then goto $157F
$157B: $0F01:  F: r16 + r17 (r16 + r17)
$157C: $F408:  C: if (C=0) then goto $157E (C = 1)
$157D: $EF0F:  F: $FF -> r16 (255 -> r16)
$157E: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _set_inv) then goto $1584 ...
$157F: $3069:     r22 = $09
$1580: $F419:     if (Z=0) then goto $1584
$1581: $2F01:  F: r17 -> r16 (r17 -> r16)
$1582: $9500:  F: | r16 (|r16)
$1583: $9508:  F: RET (ret)
-----          L: 
               C: if (EMod -= _sub) then goto $1589 ...
$1584: $3068:     r22 = $08
$1585: $F419:     if (Z=0) then goto $1589
$1586: $1B01:  F: r16 - r17 (r16 - r17)
$1587: $F408:  C: if (C=0) then goto $1589 (C = 1)
$1588: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$1589: $9508:  F: RET (ret)
-----          V: 
$158A: $E000:  F: $00 -> r16 (0 -> r16)
$158B: $DE54:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$158C: $E000:     $00 -> r16
$158D: $8300:     r16 -> [Z+$00]
$158E: $CFC0:  J: goto $154F (RJMP)
-----          V: _12_Element
-----          L: 
$158F: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1590: $C01C:  C: goto $15AD (RJMP) (F_Effect = 0)
-----          L: 
$1591: $E001:  F: $01 -> r16 (1 -> r16)
$1592: $D136:  F: rcall $16C9 (_MGet_Cnst)
$1593: $2F60:  F: r16 -> r22 (r16 -> EMod)
-----          L: 
               C: if (r16 < 16) then goto $159C ...
$1594: $3100:     r16 = $10
$1595: $F030:     if ( < ) then goto $159C
-----          L: 
$1596: $E000:  F: $00 -> r16 (0 -> r16)
$1597: $DE48:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 0) then goto $15A8 ...
$1598: $3000:     r16 = $00
$1599: $F471:     if (Z=0) then goto $15A8
               F: 1 -> [Z]  ...
$159A: $E001:     $01 -> r16
$159B: $8300:     r16 -> [Z+$00]
-----          L: 
-----          L: 
$159C: $E002:  F: $02 -> r16 (2 -> r16)
$159D: $D12B:  F: rcall $16C9 (_MGet_Cnst)
$159E: $2F10:  F: r16 -> r17 (r16 -> r17)
-----          L: 
$159F: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$15A0: $EDCD:     $DD -> r28
$15A1: $E0D5:     $05 -> r29
$15A2: $E178:  F: $18 -> r23 (STAIR_MAX_NUMB -> ETemp)
-----          L: 
$15A3: $8108:  F: [Y] -> r16 ([Y] -> r16)
$15A4: $DFAF:  F: rcall $1554 (_Do_Mods)
$15A5: $9309:  F: r16 -> [Y++] (r16 -> [Y ++])
               C: if (ETemp --) then goto $15A3 ...
$15A6: $957A:     r23 --
$15A7: $F7D9:     if (Z=0) then goto $15A3
-----          L: 
-----          L: 
-----          L: 
$15A8: $E003:  F: $03 -> r16 (3 -> r16)
$15A9: $D138:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$15AA: $E001:  F: $01 -> r16 (1 -> r16)
$15AB: $D128:  F: rcall $16D4 (_MStep_Var_Pntr)
$15AC: $9508:  F: RET (ret)
-----          V: 
$15AD: $E000:  F: $00 -> r16 (0 -> r16)
$15AE: $DE31:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$15AF: $E000:     $00 -> r16
$15B0: $8300:     r16 -> [Z+$00]
$15B1: $CFF6:  J: goto $15A8 (RJMP)
-----          V: _13_Element
-----          L: 
$15B2: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$15B3: $C01E:  C: goto $15D2 (RJMP) (F_Effect = 0)
-----          L: 
$15B4: $E001:  F: $01 -> r16 (1 -> r16)
$15B5: $D113:  F: rcall $16C9 (_MGet_Cnst)
$15B6: $2F60:  F: r16 -> r22 (r16 -> EMod)
-----          L: 
               C: if (r16 < 16) then goto $15BF ...
$15B7: $3100:     r16 = $10
$15B8: $F030:     if ( < ) then goto $15BF
-----          L: 
$15B9: $E000:  F: $00 -> r16 (0 -> r16)
$15BA: $DE25:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 0) then goto $15CD ...
$15BB: $3000:     r16 = $00
$15BC: $F481:     if (Z=0) then goto $15CD
               F: 1 -> [Z]  ...
$15BD: $E001:     $01 -> r16
$15BE: $8300:     r16 -> [Z+$00]
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$15BF: $EDCD:     $DD -> r28
$15C0: $E0D5:     $05 -> r29
$15C1: $E003:  F: $03 -> r16 (3 -> r16)
$15C2: $D106:  F: rcall $16C9 (_MGet_Cnst)
               F: Y + r16  ...
$15C3: $0FC0:     r28 + r16
$15C4: $E010:     $00 -> r17
$15C5: $1FD1:     r29 + r17 +
-----          L: 
$15C6: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
$15C7: $E002:  F: $02 -> r16 (2 -> r16)
$15C8: $D100:  F: rcall $16C9 (_MGet_Cnst)
$15C9: $2F10:  F: r16 -> r17 (r16 -> r17)
-----          L: 
$15CA: $8108:  F: [Y] -> r16 ([Y] -> r16)
$15CB: $DF88:  F: rcall $1554 (_Do_Mods)
$15CC: $8308:  F: r16 -> [Y] (r16 -> [Y])
-----          L: 
-----          L: 
$15CD: $E004:  F: $04 -> r16 (4 -> r16)
$15CE: $D113:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$15CF: $E001:  F: $01 -> r16 (1 -> r16)
$15D0: $D103:  F: rcall $16D4 (_MStep_Var_Pntr)
$15D1: $9508:  F: RET (ret)
-----          V: 
$15D2: $E000:  F: $00 -> r16 (0 -> r16)
$15D3: $DE0C:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$15D4: $E000:     $00 -> r16
$15D5: $8300:     r16 -> [Z+$00]
$15D6: $CFF6:  J: goto $15CD (RJMP)
-----          V: _14_Element
-----          L: 
-----          L: 
-----          L: 
$15D7: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$15D8: $C02F:  C: goto $1608 (RJMP) (F_Effect = 0)
-----          L: 
$15D9: $E000:  F: $00 -> r16 (0 -> r16)
$15DA: $DE05:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 = 255) then goto $1603 ...
$15DB: $3F0F:     r16 = $FF
$15DC: $F131:     if (Z=1) then goto $1603
-----          L: 
$15DD: $E001:  F: $01 -> r16 (1 -> r16)
$15DE: $D0EA:  F: rcall $16C9 (_MGet_Cnst)
$15DF: $2F60:  F: r16 -> r22 (r16 -> EMod)
$15E0: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
$15E1: $FF04:  C: if (r16.4=1 then SKIP (r16.4 = 0)
$15E2: $C006:  C: goto $15E9 (RJMP) (r16.4 = 0)
$15E3: $E000:  F: $00 -> r16 (0 -> r16)
$15E4: $DDFB:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 255) then goto $15E8 ...
$15E5: $3F0F:     r16 = $FF
$15E6: $F009:     if (Z=1) then goto $15E8
$15E7: $9503:  F: r16 ++ (r16 ++)
$15E8: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
-----          L: 
-----          L: 
$15E9: $E002:  F: $02 -> r16 (2 -> r16)
$15EA: $D0DE:  F: rcall $16C9 (_MGet_Cnst)
$15EB: $2F10:  F: r16 -> r17 (r16 -> r17)
-----          L: 
$15EC: $E001:  F: $01 -> r16 (1 -> r16)
$15ED: $DDF2:  F: rcall $13E0 (_MGet_Var)
$15EE: $0F01:  F: r16 + r17 (r16 + r17)
$15EF: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
$15F0: $9110:  F: [$0616] -> r17 (Stairs_Number -> r17)
$15F1: $0616:  
$15F2: $9F01:  F: r16 * r17 (r16 * r17)
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$15F3: $EDCD:     $DD -> r28
$15F4: $E0D5:     $05 -> r29
               F: Y + r1  ...
$15F5: $0DC1:     r28 + r1
$15F6: $E010:     $00 -> r17
$15F7: $1FD1:     r29 + r17 +
               C: if (r1 >= STAIR_MAX_NUMB-1) then goto $15FF ...
$15F8: $E117:     $17 -> r17
$15F9: $1611:     r1 = r17
$15FA: $F420:     if ( >= ) then goto $15FF
-----          L: 
$15FB: $8109:  F: [Y+$01] -> r 16 ([Y+1] -> r16)
$15FC: $2D10:  F: r0 -> r17 (r0 -> r17)
$15FD: $DF56:  F: rcall $1554 (_Do_Mods)
$15FE: $8309:  F: r16 -> [Y+$01] (r16 -> [Y+1])
-----          L: 
$15FF: $8108:  F: [Y] -> r16 ([Y] -> r16)
$1600: $9510:  F: | r17 (|r17)
$1601: $DF52:  F: rcall $1554 (_Do_Mods)
$1602: $8308:  F: r16 -> [Y] (r16 -> [Y])
-----          L: 
-----          L: 
$1603: $E003:  F: $03 -> r16 (3 -> r16)
$1604: $D0DD:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1605: $E002:  F: $02 -> r16 (2 -> r16)
$1606: $D0CD:  F: rcall $16D4 (_MStep_Var_Pntr)
$1607: $9508:  F: RET (ret)
-----          V: 
$1608: $E000:  F: $00 -> r16 (0 -> r16)
$1609: $DDD6:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z++]  ...
$160A: $E000:     $00 -> r16
$160B: $9301:     r16 -> [Z++]
               F: 0 -> [Z++]  ...
$160C: $9301:     r16 -> [Z++]
$160D: $CFF5:  J: goto $1603 (RJMP)
-----          V: _15_Element
-----          L: 
-----          L: 
-----          L: 
$160E: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$160F: $C028:  C: goto $1638 (RJMP) (F_Effect = 0)
-----          L: 
$1610: $E001:  F: $01 -> r16 (1 -> r16)
$1611: $D0B7:  F: rcall $16C9 (_MGet_Cnst)
$1612: $2F60:  F: r16 -> r22 (r16 -> EMod)
$1613: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
               C: if (r16 < 16) then goto $161C ...
$1614: $3100:     r16 = $10
$1615: $F030:     if ( < ) then goto $161C
-----          L: 
$1616: $E000:  F: $00 -> r16 (0 -> r16)
$1617: $DDC8:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 0) then goto $1633 ...
$1618: $3000:     r16 = $00
$1619: $F4C9:     if (Z=0) then goto $1633
               F: 1 -> [Z]  ...
$161A: $E001:     $01 -> r16
$161B: $8300:     r16 -> [Z+$00]
-----          L: 
-----          L: 
-----          L: 
$161C: $E002:  F: $02 -> r16 (2 -> r16)
$161D: $D0AB:  F: rcall $16C9 (_MGet_Cnst)
$161E: $2F70:  F: r16 -> r23 (r16 -> ETemp)
-----          L: 
$161F: $940E:  F: CALL $A9 (_RND_Next)
$1620: $00A9:  
$1621: $9110:  F: [$0616] -> r17 (Stairs_Number -> r17)
$1622: $0616:  
-----          L: 
$1623: $1B01:  F: r16 - r17 (r16 - r17)
               C: if (r16 >= r17) then goto $1623 ...
$1624: $1701:     r16 = r17
$1625: $F7E8:     if ( >= ) then goto $1623
               F: @Stair_Level_Temp -> Y  ...
$1626: $EDCD:     $DD -> r28
$1627: $E0D5:     $05 -> r29
               F: Y + r16  ...
$1628: $0FC0:     r28 + r16
$1629: $E010:     $00 -> r17
$162A: $1FD1:     r29 + r17 +
-----          L: 
$162B: $940E:  F: CALL $A9 (_RND_Next)
$162C: $00A9:  
$162D: $2F10:  F: r16 -> r17 (r16 -> r17)
$162E: $8108:  F: [Y] -> r16 ([Y] -> r16)
$162F: $DF24:  F: rcall $1554 (_Do_Mods)
$1630: $8308:  F: r16 -> [Y] (r16 -> [Y])
-----          L: 
               C: if (ETemp --) then goto $161F ...
$1631: $957A:     r23 --
$1632: $F761:     if (Z=0) then goto $161F
-----          L: 
-----          L: 
$1633: $E003:  F: $03 -> r16 (3 -> r16)
$1634: $D0AD:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1635: $E001:  F: $01 -> r16 (1 -> r16)
$1636: $D09D:  F: rcall $16D4 (_MStep_Var_Pntr)
$1637: $9508:  F: RET (ret)
-----          V: 
$1638: $E000:  F: $00 -> r16 (0 -> r16)
$1639: $DDA6:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$163A: $E000:     $00 -> r16
$163B: $8300:     r16 -> [Z+$00]
$163C: $CFF6:  J: goto $1633 (RJMP)
-----          V: _16_Element
-----          L: 
-----          L: 
-----          L: 
$163D: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$163E: $C02B:  C: goto $166A (RJMP) (F_Effect = 0)
-----          L: 
$163F: $E000:  F: $00 -> r16 (0 -> r16)
$1640: $DD9F:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 = 255) then goto $1665 ...
$1641: $3F0F:     r16 = $FF
$1642: $F111:     if (Z=1) then goto $1665
-----          L: 
$1643: $E001:  F: $01 -> r16 (1 -> r16)
$1644: $D084:  F: rcall $16C9 (_MGet_Cnst)
$1645: $2F60:  F: r16 -> r22 (r16 -> EMod)
$1646: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
$1647: $FF04:  C: if (r16.4=1 then SKIP (r16.4 = 0)
$1648: $C006:  C: goto $164F (RJMP) (r16.4 = 0)
$1649: $E000:  F: $00 -> r16 (0 -> r16)
$164A: $DD95:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 255) then goto $164E ...
$164B: $3F0F:     r16 = $FF
$164C: $F009:     if (Z=1) then goto $164E
$164D: $9503:  F: r16 ++ (r16 ++)
$164E: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
-----          L: 
-----          L: 
$164F: $E002:  F: $02 -> r16 (2 -> r16)
$1650: $D078:  F: rcall $16C9 (_MGet_Cnst)
$1651: $2F70:  F: r16 -> r23 (r16 -> ETemp)
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$1652: $EDCD:     $DD -> r28
$1653: $E0D5:     $05 -> r29
$1654: $9110:  F: [$0616] -> r17 (Stairs_Number -> r17)
$1655: $0616:  
-----          L: 
$1656: $931F:  F: r17 -> (r17 ->)
$1657: $9570:  F: | r23 (|ETemp)
$1658: $8108:  F: [Y] -> r16 ([Y] -> r16)
$1659: $9F07:  F: r16 * r23 (r16*ETemp)
$165A: $921F:  F: r1 -> (r1 ->)
$165B: $9570:  F: | r23 (|ETemp)
-----          L: 
$165C: $8119:  F: [Y+$01] -> r 17 ([Y+1] -> r17)
$165D: $9F17:  F: r17 * r23 (r17*ETemp)
$165E: $911F:  F: -> r17 (-> r17)
$165F: $0D11:  F: r17 + r1 (r17 + r1)
$1660: $DEF3:  F: rcall $1554 (_Do_Mods)
$1661: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
-----          L: 
$1662: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $1656 ...
$1663: $951A:     r17 --
$1664: $F789:     if (Z=0) then goto $1656
-----          L: 
-----          L: 
-----          L: 
$1665: $E003:  F: $03 -> r16 (3 -> r16)
$1666: $D07B:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1667: $E001:  F: $01 -> r16 (1 -> r16)
$1668: $D06B:  F: rcall $16D4 (_MStep_Var_Pntr)
$1669: $9508:  F: RET (ret)
-----          V: 
$166A: $E000:  F: $00 -> r16 (0 -> r16)
$166B: $DD74:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$166C: $E000:     $00 -> r16
$166D: $8300:     r16 -> [Z+$00]
$166E: $CFF6:  J: goto $1665 (RJMP)
-----          V: _17_Element
-----          L: 
-----          L: 
-----          L: 
$166F: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1670: $C01F:  C: goto $1690 (RJMP) (F_Effect = 0)
-----          L: 
-----          L: 
$1671: $E001:  F: $01 -> r16 (1 -> r16)
$1672: $D056:  F: rcall $16C9 (_MGet_Cnst)
$1673: $2F60:  F: r16 -> r22 (r16 -> EMod)
$1674: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
-----          L: 
$1675: $E002:  F: $02 -> r16 (2 -> r16)
$1676: $D052:  F: rcall $16C9 (_MGet_Cnst)
$1677: $2F70:  F: r16 -> r23 (r16 -> ETemp)
-----          L: 
$1678: $E000:  F: $00 -> r16 (0 -> r16)
$1679: $DD66:  F: rcall $13E0 (_MGet_Var)
$167A: $0F07:  F: r16 + r23 (r16 + ETemp)
$167B: $F408:  C: if (C=0) then goto $167D (C = 1)
$167C: $EF0F:  F: $FF -> r16 (255 -> r16)
$167D: $2F70:  F: r16 -> r23 (r16 -> ETemp)
$167E: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$167F: $EDCD:     $DD -> r28
$1680: $E0D5:     $05 -> r29
$1681: $9110:  F: [$0616] -> r17 (Stairs_Number -> r17)
$1682: $0616:  
-----          L: 
$1683: $931F:  F: r17 -> (r17 ->)
$1684: $8108:  F: [Y] -> r16 ([Y] -> r16)
$1685: $2F17:  F: r23 -> r17 (ETemp -> r17)
$1686: $DECD:  F: rcall $1554 (_Do_Mods)
$1687: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
$1688: $911F:  F: -> r17 (-> r17)
               C: if (r17 --) then goto $1683 ...
$1689: $951A:     r17 --
$168A: $F7C1:     if (Z=0) then goto $1683
-----          L: 
-----          L: 
-----          L: 
$168B: $E003:  F: $03 -> r16 (3 -> r16)
$168C: $D055:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$168D: $E001:  F: $01 -> r16 (1 -> r16)
$168E: $D045:  F: rcall $16D4 (_MStep_Var_Pntr)
$168F: $9508:  F: RET (ret)
-----          V: 
$1690: $E000:  F: $00 -> r16 (0 -> r16)
$1691: $DD4E:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$1692: $E000:     $00 -> r16
$1693: $8300:     r16 -> [Z+$00]
$1694: $CFF6:  J: goto $168B (RJMP)
-----          V: _18_Element
-----          L: 
-----          L: 
-----          L: 
$1695: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1696: $C02D:  C: goto $16C4 (RJMP) (F_Effect = 0)
-----          L: 
$1697: $E000:  F: $00 -> r16 (0 -> r16)
$1698: $DD47:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 = 255) then goto $16BF ...
$1699: $3F0F:     r16 = $FF
$169A: $F121:     if (Z=1) then goto $16BF
-----          L: 
$169B: $E001:  F: $01 -> r16 (1 -> r16)
$169C: $D02C:  F: rcall $16C9 (_MGet_Cnst)
$169D: $2F60:  F: r16 -> r22 (r16 -> EMod)
$169E: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
$169F: $E002:  F: $02 -> r16 (2 -> r16)
$16A0: $D028:  F: rcall $16C9 (_MGet_Cnst)
$16A1: $2F70:  F: r16 -> r23 (r16 -> ETemp)
-----          L: 
$16A2: $E000:  F: $00 -> r16 (0 -> r16)
$16A3: $DD3C:  F: rcall $13E0 (_MGet_Var)
$16A4: $0F07:  F: r16 + r23 (r16 + ETemp)
$16A5: $F408:  C: if (C=0) then goto $16A7 (C = 1)
$16A6: $EF0F:  F: $FF -> r16 (255 -> r16)
$16A7: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
$16A8: $9110:  F: [$0616] -> r17 (Stairs_Number -> r17)
$16A9: $0616:  
$16AA: $9500:  F: | r16 (|r16)
$16AB: $9F01:  F: r16 * r17 (r16 * r17)
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$16AC: $EDCD:     $DD -> r28
$16AD: $E0D5:     $05 -> r29
$16AE: $9170:  F: [$0616] -> r23 (Stairs_Number -> ETemp)
$16AF: $0616:  
-----          L: 
-----          L: 
               C: if (ETemp < r1) then goto $16B3 ...
$16B0: $1571:     r23 = r1
$16B1: $F408:     if ( >= ) then goto $16B3
$16B2: $EF1F:  F: $FF -> r17 (255 -> r17)
               C: if (ETemp > r1) then goto $16B6 ...
$16B3: $1617:     r1 = r23
$16B4: $F408:     if ( >= ) then goto $16B6
$16B5: $E010:  F: $00 -> r17 (0 -> r17)
               C: if (ETemp = r1) then goto $16B9 ...
$16B6: $1571:     r23 = r1
$16B7: $F409:     if (Z=0) then goto $16B9
$16B8: $2D10:  F: r0 -> r17 (r0 -> r17)
$16B9: $9510:  F: | r17 (|r17)
-----          L: 
$16BA: $8108:  F: [Y] -> r16 ([Y] -> r16)
$16BB: $DE98:  F: rcall $1554 (_Do_Mods)
$16BC: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
               C: if (ETemp --) then goto $16B0 ...
$16BD: $957A:     r23 --
$16BE: $F789:     if (Z=0) then goto $16B0
-----          L: 
-----          L: 
-----          L: 
$16BF: $E003:  F: $03 -> r16 (3 -> r16)
$16C0: $D021:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$16C1: $E001:  F: $01 -> r16 (1 -> r16)
$16C2: $D011:  F: rcall $16D4 (_MStep_Var_Pntr)
$16C3: $9508:  F: RET (ret)
-----          V: 
$16C4: $E000:  F: $00 -> r16 (0 -> r16)
$16C5: $DD1A:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$16C6: $E000:     $00 -> r16
$16C7: $8300:     r16 -> [Z+$00]
$16C8: $CFF6:  J: goto $16BF (RJMP)
-----          V: _MGet_Cnst
$16C9: $931F:  F: r17 -> (r17 ->)
               F: EDisp_Pointer_Flash_Bank -> Z  ...
$16CA: $91E0:     [$063C] -> r30
$16CB: $063C:  
$16CC: $91F0:     [$063D] -> r31
$16CD: $063D:  
               F: Z + r16  ...
$16CE: $0FE0:     r30 + r16
$16CF: $E010:     $00 -> r17
$16D0: $1FF1:     r31 + r17 +
$16D1: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
$16D2: $911F:  F: -> r17 (-> r17)
$16D3: $9508:  F: RET (ret)
-----          V: _MStep_Var_Pntr
$16D4: $931F:  F: r17 -> (r17 ->)
               F: EDisp_Pointer_SRAM_Bank -> Z  ...
$16D5: $91E0:     [$063E] -> r30
$16D6: $063E:  
$16D7: $91F0:     [$063F] -> r31
$16D8: $063F:  
               F: Z + r16  ...
$16D9: $0FE0:     r30 + r16
$16DA: $E010:     $00 -> r17
$16DB: $1FF1:     r31 + r17 +
               F: Z -> EDisp_Pointer_SRAM_Bank  ...
$16DC: $93E0:     r30 -> [$063E]
$16DD: $063E:  
$16DE: $93F0:     r31 -> [$063F]
$16DF: $063F:  
$16E0: $911F:  F: -> r17 (-> r17)
$16E1: $9508:  F: RET (ret)
-----          V: _MStep_Cnst_Pntr
$16E2: $931F:  F: r17 -> (r17 ->)
               F: EDisp_Pointer_Flash_Bank -> Z  ...
$16E3: $91E0:     [$063C] -> r30
$16E4: $063C:  
$16E5: $91F0:     [$063D] -> r31
$16E6: $063D:  
               F: Z + r16  ...
$16E7: $0FE0:     r30 + r16
$16E8: $E010:     $00 -> r17
$16E9: $1FF1:     r31 + r17 +
               F: Z -> EDisp_Pointer_Flash_Bank  ...
$16EA: $93E0:     r30 -> [$063C]
$16EB: $063C:  
$16EC: $93F0:     r31 -> [$063D]
$16ED: $063D:  
$16EE: $911F:  F: -> r17 (-> r17)
$16EF: $9508:  F: RET (ret)
-----          V: _19_Element
-----          L: 
-----          L: 
-----          L: 
$16F0: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$16F1: $C02B:  C: goto $171D (RJMP) (F_Effect = 0)
-----          L: 
$16F2: $E000:  F: $00 -> r16 (0 -> r16)
$16F3: $DCEC:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 = 255) then goto $1718 ...
$16F4: $3F0F:     r16 = $FF
$16F5: $F111:     if (Z=1) then goto $1718
-----          L: 
$16F6: $E001:  F: $01 -> r16 (1 -> r16)
$16F7: $DFD1:  F: rcall $16C9 (_MGet_Cnst)
$16F8: $2F60:  F: r16 -> r22 (r16 -> EMod)
$16F9: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
-----          L: 
$16FA: $E002:  F: $02 -> r16 (2 -> r16)
$16FB: $DFCD:  F: rcall $16C9 (_MGet_Cnst)
$16FC: $2F70:  F: r16 -> r23 (r16 -> ETemp)
-----          L: 
$16FD: $E000:  F: $00 -> r16 (0 -> r16)
$16FE: $DCE1:  F: rcall $13E0 (_MGet_Var)
$16FF: $0F07:  F: r16 + r23 (r16 + ETemp)
$1700: $F408:  C: if (C=0) then goto $1702 (C = 1)
$1701: $EF0F:  F: $FF -> r16 (255 -> r16)
$1702: $8300:  F: r16 -> [Z] (r16 -> [Z])
-----          L: 
$1703: $9110:  F: [$0616] -> r17 (Stairs_Number -> r17)
$1704: $0616:  
$1705: $9F01:  F: r16 * r17 (r16 * r17)
-----          L: 
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$1706: $EDCD:     $DD -> r28
$1707: $E0D5:     $05 -> r29
$1708: $9170:  F: [$0616] -> r23 (Stairs_Number -> ETemp)
$1709: $0616:  
-----          L: 
-----          L: 
               C: if (ETemp < r1) then goto $170D ...
$170A: $1571:     r23 = r1
$170B: $F408:     if ( >= ) then goto $170D
$170C: $EF1F:  F: $FF -> r17 (255 -> r17)
               C: if (ETemp > r1) then goto $1710 ...
$170D: $1617:     r1 = r23
$170E: $F408:     if ( >= ) then goto $1710
$170F: $E010:  F: $00 -> r17 (0 -> r17)
               C: if (ETemp = r1) then goto $1713 ...
$1710: $1571:     r23 = r1
$1711: $F409:     if (Z=0) then goto $1713
$1712: $2D10:  F: r0 -> r17 (r0 -> r17)
-----          L: 
$1713: $8108:  F: [Y] -> r16 ([Y] -> r16)
$1714: $DE3F:  F: rcall $1554 (_Do_Mods)
$1715: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
               C: if (ETemp --) then goto $170A ...
$1716: $957A:     r23 --
$1717: $F791:     if (Z=0) then goto $170A
-----          L: 
-----          L: 
-----          L: 
$1718: $E003:  F: $03 -> r16 (3 -> r16)
$1719: $DFC8:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$171A: $E001:  F: $01 -> r16 (1 -> r16)
$171B: $DFB8:  F: rcall $16D4 (_MStep_Var_Pntr)
$171C: $9508:  F: RET (ret)
-----          V: 
$171D: $E000:  F: $00 -> r16 (0 -> r16)
$171E: $DCC1:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$171F: $E000:     $00 -> r16
$1720: $8300:     r16 -> [Z+$00]
$1721: $CFF6:  J: goto $1718 (RJMP)
-----          V: _20_Element
-----          L: 
-----          L: 
-----          L: 
$1722: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1723: $C01C:  C: goto $1740 (RJMP) (F_Effect = 0)
-----          L: 
$1724: $E001:  F: $01 -> r16 (1 -> r16)
$1725: $DFA3:  F: rcall $16C9 (_MGet_Cnst)
$1726: $2F60:  F: r16 -> r22 (r16 -> EMod)
$1727: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$1728: $EDCD:     $DD -> r28
$1729: $E0D5:     $05 -> r29
$172A: $01FE:  F: r28,r29 -> r30,r31 (Y -> Z)
$172B: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$172C: $0616:  
               F: Z + r16  ...
$172D: $0FE0:     r30 + r16
$172E: $E010:     $00 -> r17
$172F: $1FF1:     r31 + r17 +
               F: Z--  ...
$1730: $50E1:     r30 - $01
$1731: $40F0:     r31 - $00 -
-----          L: 
-----          L: 
$1732: $8008:  F: [Y] -> r0 ([Y] -> r0)
$1733: $8010:  F: [Z] -> r1 ([Z] -> r1)
-----          L: 
$1734: $2D00:  F: r0 -> r16 (r0 -> r16)
$1735: $2D11:  F: r1 -> r17 (r1 -> r17)
$1736: $DE1D:  F: rcall $1554 (_Do_Mods)
$1737: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
-----          L: 
$1738: $2D01:  F: r1 -> r16 (r1 -> r16)
$1739: $2D10:  F: r0 -> r17 (r0 -> r17)
$173A: $DE19:  F: rcall $1554 (_Do_Mods)
$173B: $8300:  F: r16 -> [Z] (r16 -> [Z])
$173C: $9731:  F: r30,r31 - $01 (Z - 1)
-----          L: 
               C: if (Y < Z) then goto $1732 ...
$173D: $17CE:     r28 = r30
$173E: $07DF:     r29 = r31=
$173F: $F390:     if ( < ) then goto $1732
-----          L: 
-----          L: 
$1740: $E002:  F: $02 -> r16 (2 -> r16)
$1741: $DFA0:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1742: $9508:  F: RET (ret)
-----          V: _21_Element
-----          L: 
-----          L: 
-----          L: 
$1743: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1744: $C010:  C: goto $1755 (RJMP) (F_Effect = 0)
-----          L: 
               F: @Stair_Level_Temp -> Y  ...
$1745: $EDCD:     $DD -> r28
$1746: $E0D5:     $05 -> r29
$1747: $01FE:  F: r28,r29 -> r30,r31 (Y -> Z)
$1748: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$1749: $0616:  
               F: Z + r16  ...
$174A: $0FE0:     r30 + r16
$174B: $E010:     $00 -> r17
$174C: $1FF1:     r31 + r17 +
               F: Z--  ...
$174D: $50E1:     r30 - $01
$174E: $40F0:     r31 - $00 -
-----          L: 
-----          L: 
$174F: $9109:  F: [Y++] -> r16 ([Y++] -> r16)
$1750: $8300:  F: r16 -> [Z] (r16 -> [Z])
$1751: $9731:  F: r30,r31 - $01 (Z - 1)
-----          L: 
               C: if (Y < Z) then goto $174F ...
$1752: $17CE:     r28 = r30
$1753: $07DF:     r29 = r31=
$1754: $F3D0:     if ( < ) then goto $174F
-----          L: 
-----          L: 
$1755: $E001:  F: $01 -> r16 (1 -> r16)
$1756: $DF8B:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$1757: $9508:  F: RET (ret)
-----          V: _22_Element
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1758: $FF31:  C: if (r19.1=1 then SKIP (F_Effect = 0)
$1759: $C065:  C: goto $17BF (RJMP) (F_Effect = 0)
-----          L: 
$175A: $E001:  F: $01 -> r16 (1 -> r16)
$175B: $DF6D:  F: rcall $16C9 (_MGet_Cnst)
$175C: $2F60:  F: r16 -> r22 (r16 -> EMod)
$175D: $706F:  F: r22 & $0F (EMod & #b00001111)
-----          L: 
               C: if (r16 < 16) then goto $1766 ...
$175E: $3100:     r16 = $10
$175F: $F030:     if ( < ) then goto $1766
-----          L: 
$1760: $E000:  F: $00 -> r16 (0 -> r16)
$1761: $DC7E:  F: rcall $13E0 (_MGet_Var)
               C: if (r16 -= 0) then goto $1779 ...
$1762: $3000:     r16 = $00
$1763: $F4A9:     if (Z=0) then goto $1779
               F: 1 -> [Z]  ...
$1764: $E001:     $01 -> r16
$1765: $8300:     r16 -> [Z+$00]
-----          L: 
-----          L: 
-----          L: 
$1766: $E002:  F: $02 -> r16 (2 -> r16)
$1767: $DF61:  F: rcall $16C9 (_MGet_Cnst)
-----          L: 
-----          L: 
               F: 2*Patterns_koeff -> Z  ...
$1768: $E6E4:     $64 -> r30
$1769: $E2FF:     $2F -> r31
               F: Z + Stairs_Number  ...
$176A: $9110:     [$0616] -> r17
$176B: $0616:  
$176C: $0FE1:     r30 + r17
$176D: $E010:     $00 -> r17
$176E: $1FF1:     r31 + r17 +
$176F: $91E4:  F: LPM[Z] -> r30 (LPM[Z] -> Zl)
-----          L: 
-----          L: 
               C: if (r16 = 0) then goto $17A4 ...
$1770: $3000:     r16 = $00
$1771: $F191:     if (Z=1) then goto $17A4
               C: if (r16 = 1) then goto $1798 ...
$1772: $3001:     r16 = $01
$1773: $F121:     if (Z=1) then goto $1798
               C: if (r16 = 2) then goto $177E ...
$1774: $3002:     r16 = $02
$1775: $F041:     if (Z=1) then goto $177E
               C: if (r16 = 3) then goto $17C4 ...
$1776: $3003:     r16 = $03
$1777: $F409:     if (Z=0) then goto $1779
$1778: $C04B:     goto $17C4 (RJMP)
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1779: $E003:  F: $03 -> r16 (3 -> r16)
$177A: $DF67:  F: rcall $16E2 (_MStep_Cnst_Pntr)
$177B: $E001:  F: $01 -> r16 (1 -> r16)
$177C: $DF57:  F: rcall $16D4 (_MStep_Var_Pntr)
$177D: $9508:  F: RET (ret)
-----          V: 
$177E: $0FEE:  F: << r30 (<< Zl)
               F: @Stair_Level_Temp -> Y  ...
$177F: $EDCD:     $DD -> r28
$1780: $E0D5:     $05 -> r29
$1781: $E070:  F: $00 -> r23 (0 -> ETemp)
-----          L: 
$1782: $8108:  F: [Y] -> r16 ([Y] -> r16)
$1783: $9F7E:  F: r23 * r30 (ETemp * Zl)
$1784: $2D10:  F: r0 -> r17 (r0 -> r17)
$1785: $DDCE:  F: rcall $1554 (_Do_Mods)
$1786: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
$1787: $9573:  F: r23 ++ (ETemp++)
$1788: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$1789: $0616:  
$178A: $9506:  F: r16 >> (r16 >>)
               C: if (ETemp < r16) then goto $1782 ...
$178B: $1770:     r23 = r16
$178C: $F3A8:     if ( < ) then goto $1782
-----          L: 
$178D: $9170:  F: [$0616] -> r23 (Stairs_Number -> ETemp)
$178E: $0616:  
$178F: $9576:  F: r23 >> (ETemp >>)
-----          L: 
$1790: $8108:  F: [Y] -> r16 ([Y] -> r16)
$1791: $9F7E:  F: r23 * r30 (ETemp * Zl)
$1792: $2D10:  F: r0 -> r17 (r0 -> r17)
$1793: $DDC0:  F: rcall $1554 (_Do_Mods)
$1794: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
               C: if (ETemp --) then goto $1790 ...
$1795: $957A:     r23 --
$1796: $F7C9:     if (Z=0) then goto $1790
$1797: $CFE1:  J: goto $1779 (RJMP)
-----          V: 
               F: @Stair_Level_Temp -> Y  ...
$1798: $EDCD:     $DD -> r28
$1799: $E0D5:     $05 -> r29
$179A: $9170:  F: [$0616] -> r23 (Stairs_Number -> ETemp)
$179B: $0616:  
-----          L: 
$179C: $8108:  F: [Y] -> r16 ([Y] -> r16)
$179D: $9F7E:  F: r23 * r30 (ETemp * Zl)
$179E: $2D10:  F: r0 -> r17 (r0 -> r17)
$179F: $DDB4:  F: rcall $1554 (_Do_Mods)
$17A0: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
               C: if (ETemp --) then goto $179C ...
$17A1: $957A:     r23 --
$17A2: $F7C9:     if (Z=0) then goto $179C
$17A3: $CFD5:  J: goto $1779 (RJMP)
-----          V: 
               F: @Stair_Level_Temp -> Y  ...
$17A4: $EDCD:     $DD -> r28
$17A5: $E0D5:     $05 -> r29
$17A6: $E070:  F: $00 -> r23 (0 -> ETemp)
-----          L: 
$17A7: $8108:  F: [Y] -> r16 ([Y] -> r16)
$17A8: $9F7E:  F: r23 * r30 (ETemp * Zl)
$17A9: $2D10:  F: r0 -> r17 (r0 -> r17)
$17AA: $DDA9:  F: rcall $1554 (_Do_Mods)
$17AB: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
$17AC: $9573:  F: r23 ++ (ETemp++)
               C: if (ETemp < Stairs_Number) then goto $17A7 ...
$17AD: $9110:     [$0616] -> r17
$17AE: $0616:  
$17AF: $1771:     r23 = r17
$17B0: $F3B0:     if ( < ) then goto $17A7
$17B1: $CFC7:  J: goto $1779 (RJMP)
-----          V: Patterns_koeff
$17B2: $00 $FF $7F $55 $3F $33 $2A $24 $1F $1C $19 $17 $15 $13 $12 $11
$17BA: $10 $0F $0E $0D $0C $0C $0B $0B $0A $00
-----          V: 
$17BF: $E000:  F: $00 -> r16 (0 -> r16)
$17C0: $DC1F:  F: rcall $13E0 (_MGet_Var)
               F: 0 -> [Z]  ...
$17C1: $E000:     $00 -> r16
$17C2: $8300:     r16 -> [Z+$00]
$17C3: $CFB5:  J: goto $1779 (RJMP)
-----          V: 
$17C4: $0FEE:  F: << r30 (<< Zl)
               F: @Stair_Level_Temp -> Y  ...
$17C5: $EDCD:     $DD -> r28
$17C6: $E0D5:     $05 -> r29
$17C7: $9170:  F: [$0616] -> r23 (Stairs_Number -> ETemp)
$17C8: $0616:  
$17C9: $9576:  F: r23 >> (ETemp >>)
-----          L: 
$17CA: $8108:  F: [Y] -> r16 ([Y] -> r16)
$17CB: $9F7E:  F: r23 * r30 (ETemp * Zl)
$17CC: $2D10:  F: r0 -> r17 (r0 -> r17)
$17CD: $DD86:  F: rcall $1554 (_Do_Mods)
$17CE: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
               C: if (ETemp --) then goto $17CA ...
$17CF: $957A:     r23 --
$17D0: $F7C9:     if (Z=0) then goto $17CA
$17D1: $E070:  F: $00 -> r23 (0 -> ETemp)
-----          L: 
$17D2: $8108:  F: [Y] -> r16 ([Y] -> r16)
$17D3: $9F7E:  F: r23 * r30 (ETemp * Zl)
$17D4: $2D10:  F: r0 -> r17 (r0 -> r17)
$17D5: $DD7E:  F: rcall $1554 (_Do_Mods)
$17D6: $9309:  F: r16 -> [Y++] (r16 -> [Y++])
$17D7: $9573:  F: r23 ++ (ETemp++)
$17D8: $9100:  F: [$0616] -> r16 (Stairs_Number -> r16)
$17D9: $0616:  
$17DA: $9506:  F: r16 >> (r16 >>)
               C: if (ETemp < r16) then goto $17D2 ...
$17DB: $1770:     r23 = r16
$17DC: $F3A8:     if ( < ) then goto $17D2
-----          L: 
$17DD: $CF9B:  J: goto $1779 (RJMP)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_do
-----          L: 
               F: @UART_Receive_Buffer + 1 -> Y  ...
$17DE: $E1C1:     $11 -> r28
$17DF: $E0D1:     $01 -> r29
-----          L: 
-----          L: 
               F: t_typeVectors*2 -> Z  ...
$17E0: $EDE2:     $D2 -> r30
$17E1: $E2FF:     $2F -> r31
$17E2: $D442:  F: rcall $1C25 (_wlParse_getKeyVector_)
-----          L: 
               C: if (Z = $FFFF) then goto $17E8 ...
$17E3: $3FEF:     r30 = $FF
$17E4: $EF1F:     $FF -> r17
$17E5: $07F1:     r31 = r17=
$17E6: $F409:     if (Z=0) then goto $17E8
$17E7: $9508:  F: RET (RET)
-----          L: 
$17E8: $9409:  F: JMP[Z] (JMP[Z])
-----          L: 
-----          L: 
-----          L: t_typeVectors
-----          L: 
$17E9: $53 $59 $53 $1F
$17EB: $940C:  F: goto $1808 (JMP _wlParse_typeSYS)
$17EC: $1808:  
-----          L: 
$17ED: $47 $45 $54 $1F
$17EF: $940C:  F: goto $19AF (JMP _wlParse_typeGET)
$17F0: $19AF:  
-----          L: 
$17F1: $53 $45 $54 $1F
$17F3: $940C:  F: goto $1A5D (JMP _wlParse_typeSET)
$17F4: $1A5D:  
-----          L: 
$17F5: $4F $4B $21 $1F
$17F7: $940C:  F: goto $1C24 (JMP _wlParse_typeOK)
$17F8: $1C24:  
-----          L: 
$17F9: $45 $52 $21 $1F
$17FB: $940C:  F: goto $1C23 (JMP _wlParse_typeER)
$17FC: $1C23:  
-----          L: 
$17FD: $FF $00
-----          V: _wlParse_sysReady
-----          L: 
$17FE: $940E:  F: CALL $795 (_PrintU_string_)
$17FF: $0795:  
$1800: $01 $4F $4B $21 $1F $72 $65 $61 $64 $79 $1F $04 $00 $00
$1807: $9508:  F: RET (RET)
-----          V: _wlParse_typeSYS
-----          L: 
-----          L: 
-----          L: 
               F: t_sysVectors*2 -> Z  ...
$1808: $E2E2:     $22 -> r30
$1809: $E3F0:     $30 -> r31
$180A: $D41A:  F: rcall $1C25 (_wlParse_getKeyVector_)
-----          L: 
               C: if (Z = $FFFF) then goto $1810 ...
$180B: $3FEF:     r30 = $FF
$180C: $EF1F:     $FF -> r17
$180D: $07F1:     r31 = r17=
$180E: $F409:     if (Z=0) then goto $1810
$180F: $9508:  F: RET (RET)
-----          L: 
$1810: $9409:  F: JMP[Z] (JMP[Z])
-----          L: 
-----          L: 
-----          L: t_sysVectors
-----          L: 
$1811: $72 $73 $74 $1F
$1813: $940C:  F: goto $1830 (JMP _wlParse_sysRestart)
$1814: $1830:  
-----          L: 
$1815: $64 $65 $66 $1F
$1817: $940C:  F: goto $1820 (JMP _wlParse_sysDefault)
$1818: $1820:  
-----          L: 
$1819: $72 $65 $61 $64 $79 $3F $1F $00
$181D: $940C:  F: goto $17FE (JMP _wlParse_sysReady)
$181E: $17FE:  
-----          L: 
$181F: $FF $00
-----          V: _wlParse_sysDefault
$1820: $940E:  F: CALL $795 (_PrintU_string_)
$1821: $0795:  
$1822: $01 $4F $4B $21 $1F $64 $65 $66 $1F $04 $00 $00
$1828: $9478:  F: 1 -> I (1 -> I)
               F: 500-1 -> r16:Word  ...
$1829: $EF03:     $F3 -> r16
$182A: $E011:     $01 -> r17
$182B: $940E:  F: CALL $34 (_Wait_ms_)
$182C: $0034:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          L: 
$182D: $940E:  F: CALL $D4E (_Do_Default)
$182E: $0D4E:  
$182F: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_sysRestart
$1830: $940E:  F: CALL $795 (_PrintU_string_)
$1831: $0795:  
$1832: $01 $4F $4B $21 $1F $72 $73 $74 $1F $04 $00 $00
$1838: $9478:  F: 1 -> I (1 -> I)
               F: 500-1 -> r16:Word  ...
$1839: $EF03:     $F3 -> r16
$183A: $E011:     $01 -> r17
$183B: $940E:  F: CALL $34 (_Wait_ms_)
$183C: $0034:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          L: 
$183D: $940E:  F: CALL $D65 (_Do_Reset)
$183E: $0D65:  
$183F: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_getSettings
$1840: $940E:  F: CALL $795 (_PrintU_string_)
$1841: $0795:  
$1842: $01 $4F $4B $21 $1F $73 $65 $74 $74 $69 $6E $67 $73 $1F $02 $00
-----          L: 
               F: wlParse_CRC  ...
$184A: $E000:     $00 -> r16
$184B: $9300:     r16 -> [$06A2]
$184C: $06A2:  
-----          L: 
$184D: $D013:  F: rcall $1861 (_wlParse_printuAllSettings)
-----          L: 
               F: wlParse_CRC ->  ...
$184E: $9100:     [$06A2] -> r16
$184F: $06A2:  
$1850: $930F:     r16 ->
$1851: $940E:  F: CALL $795 (_PrintU_string_)
$1852: $0795:  
$1853: $03 $00
$1854: $910F:  F: -> r16 (-> r16)
               F: Z ->  ...
$1855: $93EF:     r30 ->
$1856: $93FF:     r31 ->
               F: r16 -> Z  ...
$1857: $2FE0:     r16 -> r30
$1858: $E0F0:     $00 -> r31
$1859: $940E:  F: CALL $7B7 (_PrintU_HEX_)
$185A: $07B7:  
               F: -> Z  ...
$185B: $91FF:     -> r31
$185C: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$185D: $940E:  F: CALL $795 (_PrintU_string_)
$185E: $0795:  
$185F: $04 $00
$1860: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_printuAllSettings
-----          L: 
               F: Z ->  ...
$1861: $93EF:     r30 ->
$1862: $93FF:     r31 ->
               F: Stairs_Number -> Z  ...
$1863: $91E0:     [$0616] -> r30
$1864: $0616:  
$1865: $E0F0:     $00 -> r31
$1866: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1867: $07BD:  
               F: -> Z  ...
$1868: $91FF:     -> r31
$1869: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$186A: $940E:  F: CALL $795 (_PrintU_string_)
$186B: $0795:  
$186C: $3B $00
               F: Z ->  ...
$186D: $93EF:     r30 ->
$186E: $93FF:     r31 ->
               F: Global_lightLevelThreshold -> Z  ...
$186F: $91E0:     [$061E] -> r30
$1870: $061E:  
$1871: $E0F0:     $00 -> r31
$1872: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1873: $07BD:  
               F: -> Z  ...
$1874: $91FF:     -> r31
$1875: $91EF:     -> r30
-----          L: 
$1876: $940E:  F: CALL $795 (_PrintU_string_)
$1877: $0795:  
$1878: $3B $00
               F: Z ->  ...
$1879: $93EF:     r30 ->
$187A: $93FF:     r31 ->
               F: Effect_Work_Timer -> Z  ...
$187B: $91E0:     [$0619] -> r30
$187C: $0619:  
$187D: $E0F0:     $00 -> r31
$187E: $940E:  F: CALL $7BD (_PrintU_DEC_)
$187F: $07BD:  
               F: -> Z  ...
$1880: $91FF:     -> r31
$1881: $91EF:     -> r30
-----          L: 
$1882: $940E:  F: CALL $795 (_PrintU_string_)
$1883: $0795:  
$1884: $3B $00
               F: Z ->  ...
$1885: $93EF:     r30 ->
$1886: $93FF:     r31 ->
               F: Global_periodImitation -> Z  ...
$1887: $91E0:     [$061F] -> r30
$1888: $061F:  
$1889: $E0F0:     $00 -> r31
$188A: $940E:  F: CALL $7BD (_PrintU_DEC_)
$188B: $07BD:  
               F: -> Z  ...
$188C: $91FF:     -> r31
$188D: $91EF:     -> r30
-----          L: 
$188E: $940E:  F: CALL $795 (_PrintU_string_)
$188F: $0795:  
$1890: $3B $00
               F: Z ->  ...
$1891: $93EF:     r30 ->
$1892: $93FF:     r31 ->
               F: Global_mode -> Z  ...
$1893: $91E0:     [$0620] -> r30
$1894: $0620:  
$1895: $E0F0:     $00 -> r31
$1896: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1897: $07BD:  
               F: -> Z  ...
$1898: $91FF:     -> r31
$1899: $91EF:     -> r30
-----          L: 
$189A: $940E:  F: CALL $795 (_PrintU_string_)
$189B: $0795:  
$189C: $3B $00
               F: Z ->  ...
$189D: $93EF:     r30 ->
$189E: $93FF:     r31 ->
               F: Effect_Overall_Speed -> Z  ...
$189F: $91E0:     [$05FF] -> r30
$18A0: $05FF:  
$18A1: $E0F0:     $00 -> r31
$18A2: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18A3: $07BD:  
               F: -> Z  ...
$18A4: $91FF:     -> r31
$18A5: $91EF:     -> r30
-----          L: 
$18A6: $940E:  F: CALL $795 (_PrintU_string_)
$18A7: $0795:  
$18A8: $3B $00
               F: Z ->  ...
$18A9: $93EF:     r30 ->
$18AA: $93FF:     r31 ->
               F: Effect_Overall_Contrast -> Z  ...
$18AB: $91E0:     [$0601] -> r30
$18AC: $0601:  
$18AD: $E0F0:     $00 -> r31
$18AE: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18AF: $07BD:  
               F: -> Z  ...
$18B0: $91FF:     -> r31
$18B1: $91EF:     -> r30
-----          L: 
$18B2: $940E:  F: CALL $795 (_PrintU_string_)
$18B3: $0795:  
$18B4: $3B $00
               F: Z ->  ...
$18B5: $93EF:     r30 ->
$18B6: $93FF:     r31 ->
               F: Effect_Overall_Bright -> Z  ...
$18B7: $91E0:     [$0600] -> r30
$18B8: $0600:  
$18B9: $E0F0:     $00 -> r31
$18BA: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18BB: $07BD:  
               F: -> Z  ...
$18BC: $91FF:     -> r31
$18BD: $91EF:     -> r30
-----          L: 
$18BE: $940E:  F: CALL $795 (_PrintU_string_)
$18BF: $0795:  
$18C0: $3B $00
               F: Z ->  ...
$18C1: $93EF:     r30 ->
$18C2: $93FF:     r31 ->
               F: Effect_Start_End_bright -> Z  ...
$18C3: $91E0:     [$0618] -> r30
$18C4: $0618:  
$18C5: $E0F0:     $00 -> r31
$18C6: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18C7: $07BD:  
               F: -> Z  ...
$18C8: $91FF:     -> r31
$18C9: $91EF:     -> r30
-----          L: 
$18CA: $940E:  F: CALL $795 (_PrintU_string_)
$18CB: $0795:  
$18CC: $3B $00
               F: Z ->  ...
$18CD: $93EF:     r30 ->
$18CE: $93FF:     r31 ->
               F: Effect_Overall -> Z  ...
$18CF: $91E0:     [$05FE] -> r30
$18D0: $05FE:  
$18D1: $E0F0:     $00 -> r31
$18D2: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18D3: $07BD:  
               F: -> Z  ...
$18D4: $91FF:     -> r31
$18D5: $91EF:     -> r30
-----          L: 
$18D6: $940E:  F: CALL $795 (_PrintU_string_)
$18D7: $0795:  
$18D8: $3B $00
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          L: 
               F: Z ->  ...
$18D9: $93EF:     r30 ->
$18DA: $93FF:     r31 ->
               F: Effect_Standby -> Z  ...
$18DB: $91E0:     [$0602] -> r30
$18DC: $0602:  
$18DD: $E0F0:     $00 -> r31
$18DE: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18DF: $07BD:  
               F: -> Z  ...
$18E0: $91FF:     -> r31
$18E1: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$18E2: $940E:  F: CALL $795 (_PrintU_string_)
$18E3: $0795:  
$18E4: $3B $00
               F: Z ->  ...
$18E5: $93EF:     r30 ->
$18E6: $93FF:     r31 ->
               F: Effect_Standby_Speed -> Z  ...
$18E7: $91E0:     [$0603] -> r30
$18E8: $0603:  
$18E9: $E0F0:     $00 -> r31
$18EA: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18EB: $07BD:  
               F: -> Z  ...
$18EC: $91FF:     -> r31
$18ED: $91EF:     -> r30
-----          L: 
$18EE: $940E:  F: CALL $795 (_PrintU_string_)
$18EF: $0795:  
$18F0: $3B $00
               F: Z ->  ...
$18F1: $93EF:     r30 ->
$18F2: $93FF:     r31 ->
               F: Effect_Standby_Contrast -> Z  ...
$18F3: $91E0:     [$0605] -> r30
$18F4: $0605:  
$18F5: $E0F0:     $00 -> r31
$18F6: $940E:  F: CALL $7BD (_PrintU_DEC_)
$18F7: $07BD:  
               F: -> Z  ...
$18F8: $91FF:     -> r31
$18F9: $91EF:     -> r30
-----          L: 
$18FA: $940E:  F: CALL $795 (_PrintU_string_)
$18FB: $0795:  
$18FC: $3B $00
               F: Z ->  ...
$18FD: $93EF:     r30 ->
$18FE: $93FF:     r31 ->
               F: Effect_Standby_Bright -> Z  ...
$18FF: $91E0:     [$0604] -> r30
$1900: $0604:  
$1901: $E0F0:     $00 -> r31
$1902: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1903: $07BD:  
               F: -> Z  ...
$1904: $91FF:     -> r31
$1905: $91EF:     -> r30
-----          L: 
$1906: $940E:  F: CALL $795 (_PrintU_string_)
$1907: $0795:  
$1908: $3B $00
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          L: 
               F: Z ->  ...
$1909: $93EF:     r30 ->
$190A: $93FF:     r31 ->
               F: Effect_Entrance -> Z  ...
$190B: $91E0:     [$0606] -> r30
$190C: $0606:  
$190D: $E0F0:     $00 -> r31
$190E: $940E:  F: CALL $7BD (_PrintU_DEC_)
$190F: $07BD:  
               F: -> Z  ...
$1910: $91FF:     -> r31
$1911: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$1912: $940E:  F: CALL $795 (_PrintU_string_)
$1913: $0795:  
$1914: $3B $00
               F: Z ->  ...
$1915: $93EF:     r30 ->
$1916: $93FF:     r31 ->
               F: Effect_Entrance_Speed -> Z  ...
$1917: $91E0:     [$0607] -> r30
$1918: $0607:  
$1919: $E0F0:     $00 -> r31
$191A: $940E:  F: CALL $7BD (_PrintU_DEC_)
$191B: $07BD:  
               F: -> Z  ...
$191C: $91FF:     -> r31
$191D: $91EF:     -> r30
-----          L: 
$191E: $940E:  F: CALL $795 (_PrintU_string_)
$191F: $0795:  
$1920: $3B $00
               F: Z ->  ...
$1921: $93EF:     r30 ->
$1922: $93FF:     r31 ->
               F: Effect_Entrance_Contrast -> Z  ...
$1923: $91E0:     [$0609] -> r30
$1924: $0609:  
$1925: $E0F0:     $00 -> r31
$1926: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1927: $07BD:  
               F: -> Z  ...
$1928: $91FF:     -> r31
$1929: $91EF:     -> r30
-----          L: 
$192A: $940E:  F: CALL $795 (_PrintU_string_)
$192B: $0795:  
$192C: $3B $00
               F: Z ->  ...
$192D: $93EF:     r30 ->
$192E: $93FF:     r31 ->
               F: Effect_Entrance_Bright -> Z  ...
$192F: $91E0:     [$0608] -> r30
$1930: $0608:  
$1931: $E0F0:     $00 -> r31
$1932: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1933: $07BD:  
               F: -> Z  ...
$1934: $91FF:     -> r31
$1935: $91EF:     -> r30
-----          L: 
$1936: $940E:  F: CALL $795 (_PrintU_string_)
$1937: $0795:  
$1938: $3B $00
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          L: 
               F: Z ->  ...
$1939: $93EF:     r30 ->
$193A: $93FF:     r31 ->
               F: Effect_Attend -> Z  ...
$193B: $91E0:     [$060A] -> r30
$193C: $060A:  
$193D: $E0F0:     $00 -> r31
$193E: $940E:  F: CALL $7BD (_PrintU_DEC_)
$193F: $07BD:  
               F: -> Z  ...
$1940: $91FF:     -> r31
$1941: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$1942: $940E:  F: CALL $795 (_PrintU_string_)
$1943: $0795:  
$1944: $3B $00
               F: Z ->  ...
$1945: $93EF:     r30 ->
$1946: $93FF:     r31 ->
               F: Effect_Attend_Speed -> Z  ...
$1947: $91E0:     [$060B] -> r30
$1948: $060B:  
$1949: $E0F0:     $00 -> r31
$194A: $940E:  F: CALL $7BD (_PrintU_DEC_)
$194B: $07BD:  
               F: -> Z  ...
$194C: $91FF:     -> r31
$194D: $91EF:     -> r30
-----          L: 
$194E: $940E:  F: CALL $795 (_PrintU_string_)
$194F: $0795:  
$1950: $3B $00
               F: Z ->  ...
$1951: $93EF:     r30 ->
$1952: $93FF:     r31 ->
               F: Effect_Attend_Contrast -> Z  ...
$1953: $91E0:     [$060D] -> r30
$1954: $060D:  
$1955: $E0F0:     $00 -> r31
$1956: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1957: $07BD:  
               F: -> Z  ...
$1958: $91FF:     -> r31
$1959: $91EF:     -> r30
-----          L: 
$195A: $940E:  F: CALL $795 (_PrintU_string_)
$195B: $0795:  
$195C: $3B $00
               F: Z ->  ...
$195D: $93EF:     r30 ->
$195E: $93FF:     r31 ->
               F: Effect_Attend_Bright -> Z  ...
$195F: $91E0:     [$060C] -> r30
$1960: $060C:  
$1961: $E0F0:     $00 -> r31
$1962: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1963: $07BD:  
               F: -> Z  ...
$1964: $91FF:     -> r31
$1965: $91EF:     -> r30
-----          L: 
$1966: $940E:  F: CALL $795 (_PrintU_string_)
$1967: $0795:  
$1968: $3B $00
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          L: 
               F: Z ->  ...
$1969: $93EF:     r30 ->
$196A: $93FF:     r31 ->
               F: Effect_Exit -> Z  ...
$196B: $91E0:     [$0612] -> r30
$196C: $0612:  
$196D: $E0F0:     $00 -> r31
$196E: $940E:  F: CALL $7BD (_PrintU_DEC_)
$196F: $07BD:  
               F: -> Z  ...
$1970: $91FF:     -> r31
$1971: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$1972: $940E:  F: CALL $795 (_PrintU_string_)
$1973: $0795:  
$1974: $3B $00
               F: Z ->  ...
$1975: $93EF:     r30 ->
$1976: $93FF:     r31 ->
               F: Effect_Exit_Speed -> Z  ...
$1977: $91E0:     [$0613] -> r30
$1978: $0613:  
$1979: $E0F0:     $00 -> r31
$197A: $940E:  F: CALL $7BD (_PrintU_DEC_)
$197B: $07BD:  
               F: -> Z  ...
$197C: $91FF:     -> r31
$197D: $91EF:     -> r30
-----          L: 
$197E: $940E:  F: CALL $795 (_PrintU_string_)
$197F: $0795:  
$1980: $3B $00
               F: Z ->  ...
$1981: $93EF:     r30 ->
$1982: $93FF:     r31 ->
               F: Effect_Exit_Contrast -> Z  ...
$1983: $91E0:     [$0615] -> r30
$1984: $0615:  
$1985: $E0F0:     $00 -> r31
$1986: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1987: $07BD:  
               F: -> Z  ...
$1988: $91FF:     -> r31
$1989: $91EF:     -> r30
-----          L: 
$198A: $940E:  F: CALL $795 (_PrintU_string_)
$198B: $0795:  
$198C: $3B $00
               F: Z ->  ...
$198D: $93EF:     r30 ->
$198E: $93FF:     r31 ->
               F: Effect_Exit_Bright -> Z  ...
$198F: $91E0:     [$0614] -> r30
$1990: $0614:  
$1991: $E0F0:     $00 -> r31
$1992: $940E:  F: CALL $7BD (_PrintU_DEC_)
$1993: $07BD:  
               F: -> Z  ...
$1994: $91FF:     -> r31
$1995: $91EF:     -> r30
-----          L: 
$1996: $940E:  F: CALL $795 (_PrintU_string_)
$1997: $0795:  
$1998: $3B $00
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          L: 
               F: Z ->  ...
$1999: $93EF:     r30 ->
$199A: $93FF:     r31 ->
               F: Stair_On -> Z  ...
$199B: $91E0:     [$05F5] -> r30
$199C: $05F5:  
$199D: $E0F0:     $00 -> r31
$199E: $940E:  F: CALL $7BD (_PrintU_DEC_)
$199F: $07BD:  
               F: -> Z  ...
$19A0: $91FF:     -> r31
$19A1: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$19A2: $940E:  F: CALL $795 (_PrintU_string_)
$19A3: $0795:  
$19A4: $3B $00
               F: Z ->  ...
$19A5: $93EF:     r30 ->
$19A6: $93FF:     r31 ->
               F: Service_imitationMode -> Z  ...
$19A7: $91E0:     [$0621] -> r30
$19A8: $0621:  
$19A9: $E0F0:     $00 -> r31
$19AA: $940E:  F: CALL $7BD (_PrintU_DEC_)
$19AB: $07BD:  
               F: -> Z  ...
$19AC: $91FF:     -> r31
$19AD: $91EF:     -> r30
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          L: 
$19AE: $9508:  F: RET (RET)
-----          V: _wlParse_typeGET
-----          L: 
-----          L: 
-----          L: 
               F: t_getVectors*2 -> Z  ...
$19AF: $E7E0:     $70 -> r30
$19B0: $E3F3:     $33 -> r31
$19B1: $D273:  F: rcall $1C25 (_wlParse_getKeyVector_)
-----          L: 
               C: if (Z = $FFFF) then goto $19B7 ...
$19B2: $3FEF:     r30 = $FF
$19B3: $EF1F:     $FF -> r17
$19B4: $07F1:     r31 = r17=
$19B5: $F409:     if (Z=0) then goto $19B7
$19B6: $9508:  F: RET (RET)
-----          L: 
$19B7: $9409:  F: JMP[Z] (JMP[Z])
-----          L: 
-----          L: 
-----          L: t_getVectors
-----          L: 
$19B8: $73 $65 $74 $74 $69 $6E $67 $73 $1F $00
$19BD: $940C:  F: goto $1840 (JMP _wlParse_getSettings)
$19BE: $1840:  
-----          L: 
$19BF: $61 $70 $69 $1F
$19C1: $940C:  F: goto $19C8 (JMP _wlParse_getApi)
$19C2: $19C8:  
-----          L: 
$19C3: $73 $63 $1F $00
$19C5: $940C:  F: goto $19F1 (JMP _wlParse_getSc)
$19C6: $19F1:  
-----          L: 
-----          L: 
$19C7: $FF $00
-----          V: _wlParse_getApi
$19C8: $940E:  F: CALL $795 (_PrintU_string_)
$19C9: $0795:  
$19CA: $01 $4F $4B $21 $1F $61 $70 $69 $1F $02 $00 $00
-----          L: 
               F: wlParse_CRC  ...
$19D0: $E000:     $00 -> r16
$19D1: $9300:     r16 -> [$06A2]
$19D2: $06A2:  
-----          L: 
$19D3: $940E:  F: CALL $795 (_PrintU_string_)
$19D4: $0795:  
$19D5: $5B $5B $35 $3B $35 $3B $35 $5D $2C $5B $35 $3B $35 $3B $35 $5D
$19DD: $5D $00
-----          L: 
               F: wlParse_CRC ->  ...
$19DE: $9100:     [$06A2] -> r16
$19DF: $06A2:  
$19E0: $930F:     r16 ->
$19E1: $940E:  F: CALL $795 (_PrintU_string_)
$19E2: $0795:  
$19E3: $03 $00
$19E4: $910F:  F: -> r16 (-> r16)
               F: Z ->  ...
$19E5: $93EF:     r30 ->
$19E6: $93FF:     r31 ->
               F: r16 -> Z  ...
$19E7: $2FE0:     r16 -> r30
$19E8: $E0F0:     $00 -> r31
$19E9: $940E:  F: CALL $7B7 (_PrintU_HEX_)
$19EA: $07B7:  
               F: -> Z  ...
$19EB: $91FF:     -> r31
$19EC: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$19ED: $940E:  F: CALL $795 (_PrintU_string_)
$19EE: $0795:  
$19EF: $04 $00
$19F0: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_getSc
$19F1: $940E:  F: CALL $795 (_PrintU_string_)
$19F2: $0795:  
$19F3: $01 $4F $4B $21 $1F $73 $63 $1F $02 $00
-----          L: 
               F: wlParse_CRC  ...
$19F8: $E000:     $00 -> r16
$19F9: $9300:     r16 -> [$06A2]
$19FA: $06A2:  
-----          L: 
$19FB: $940E:  F: CALL $795 (_PrintU_string_)
$19FC: $0795:  
$19FD: $30 $3B $31 $32 $33 $3B $32 $43 $37 $35 $41 $42 $3A $31 $2E $31
$1A05: $3B $32 $43 $37 $35 $41 $42 $3A $31 $2E $32 $0D $00 $00
-----          L: 
               F: wlParse_CRC ->  ...
$1A0C: $9100:     [$06A2] -> r16
$1A0D: $06A2:  
$1A0E: $930F:     r16 ->
$1A0F: $940E:  F: CALL $795 (_PrintU_string_)
$1A10: $0795:  
$1A11: $03 $00
$1A12: $910F:  F: -> r16 (-> r16)
               F: Z ->  ...
$1A13: $93EF:     r30 ->
$1A14: $93FF:     r31 ->
               F: r16 -> Z  ...
$1A15: $2FE0:     r16 -> r30
$1A16: $E0F0:     $00 -> r31
$1A17: $940E:  F: CALL $7B7 (_PrintU_HEX_)
$1A18: $07B7:  
               F: -> Z  ...
$1A19: $91FF:     -> r31
$1A1A: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$1A1B: $940E:  F: CALL $795 (_PrintU_string_)
$1A1C: $0795:  
$1A1D: $04 $00
$1A1E: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_setScheme
-----          L: 
$1A1F: $D021:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1A20: $940E:  F: CALL $9C4 (_Load_VScheme)
$1A21: $09C4:  
-----          L: 
$1A22: $940E:  F: CALL $795 (_PrintU_string_)
$1A23: $0795:  
$1A24: $01 $4F $4B $21 $1F $67 $73 $68 $1F $02 $00 $00
-----          L: 
               F: wlParse_CRC  ...
$1A2A: $E000:     $00 -> r16
$1A2B: $9300:     r16 -> [$06A2]
$1A2C: $06A2:  
-----          L: 
$1A2D: $DE33:  F: rcall $1861 (_wlParse_printuAllSettings)
-----          L: 
               F: wlParse_CRC ->  ...
$1A2E: $9100:     [$06A2] -> r16
$1A2F: $06A2:  
$1A30: $930F:     r16 ->
$1A31: $940E:  F: CALL $795 (_PrintU_string_)
$1A32: $0795:  
$1A33: $03 $00
$1A34: $910F:  F: -> r16 (-> r16)
               F: Z ->  ...
$1A35: $93EF:     r30 ->
$1A36: $93FF:     r31 ->
               F: r16 -> Z  ...
$1A37: $2FE0:     r16 -> r30
$1A38: $E0F0:     $00 -> r31
$1A39: $940E:  F: CALL $7B7 (_PrintU_HEX_)
$1A3A: $07B7:  
               F: -> Z  ...
$1A3B: $91FF:     -> r31
$1A3C: $91EF:     -> r30
*********   D:\Projects\WalkingLight\Firmwares\mcu\PrintU.alg    ***********
-----          L: 
$1A3D: $940E:  F: CALL $795 (_PrintU_string_)
$1A3E: $0795:  
$1A3F: $04 $00
$1A40: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\wlParse.alg    ***********
-----          V: _wlParse_parseDecNumber
-----          L: 
$1A41: $9621:  F: r28,r29 + $01 (Y + 1)
-----          L: 
               F: Z ->  ...
$1A42: $93EF:     r30 ->
$1A43: $93FF:     r31 ->
               F: 0 -> Z  ...
$1A44: $E0E0:     $00 -> r30
$1A45: $E0F0:     $00 -> r31
-----          L: 
$1A46: $9109:  F: [Y++] -> r16 ([Y++] -> r16)
$1A47: $5300:  F: r16 - $30 (r16 - "0")
               C: if (r16 >= 10) then goto $1A59 ...
$1A48: $300A:     r16 = $0A
$1A49: $F478:     if ( >= ) then goto $1A59
$1A4A: $930F:  F: r16 -> (r16 ->)
-----          L: 
               F: <<Z  ...
$1A4B: $0FEE:     << r30
$1A4C: $1FFF:     << r31 <
$1A4D: $018F:  F: r30,r31 -> r16,r17 (Z -> r16:Word)
               F: <<Z  ...
$1A4E: $0FEE:     << r30
$1A4F: $1FFF:     << r31 <
               F: <<Z  ...
$1A50: $0FEE:     << r30
$1A51: $1FFF:     << r31 <
               F: Z + r16:Word  ...
$1A52: $0FE0:     r30 + r16
$1A53: $1FF1:     r31 + r17 +
-----          L: 
$1A54: $910F:  F: -> r16 (-> r16)
               F: Z + r16  ...
$1A55: $0FE0:     r30 + r16
$1A56: $E010:     $00 -> r17
$1A57: $1FF1:     r31 + r17 +
$1A58: $CFED:  J: goto $1A46 (RJMP)
-----          L: 
$1A59: $018F:  F: r30,r31 -> r16,r17 (Z -> r16:Word)
               F: -> Z  ...
$1A5A: $91FF:     -> r31
$1A5B: $91EF:     -> r30
$1A5C: $9508:  F: RET (RET)
-----          V: _wlParse_typeSET
-----          L: 
-----          L: 
-----          L: 
               F: t_setVectors*2 -> Z  ...
$1A5D: $ECEC:     $CC -> r30
$1A5E: $E3F4:     $34 -> r31
$1A5F: $D1C5:  F: rcall $1C25 (_wlParse_getKeyVector_)
-----          L: 
               C: if (Z = $FFFF) then goto $1A65 ...
$1A60: $3FEF:     r30 = $FF
$1A61: $EF1F:     $FF -> r17
$1A62: $07F1:     r31 = r17=
$1A63: $F409:     if (Z=0) then goto $1A65
$1A64: $9508:  F: RET (RET)
-----          L: 
$1A65: $9409:  F: JMP[Z] (JMP[Z])
-----          L: 
-----          L: 
-----          L: t_setVectors
-----          L: 
-----          L: 
$1A66: $67 $61 $63 $1F
$1A68: $940C:  F: goto $1B93 (JMP _wlParse_setGAC)
$1A69: $1B93:  
-----          L: 
$1A6A: $67 $6C $74 $1F
$1A6C: $940C:  F: goto $1BDB (JMP _wlParse_setGLT)
$1A6D: $1BDB:  
-----          L: 
$1A6E: $67 $63 $73 $1F
$1A70: $940C:  F: goto $1BF3 (JMP _wlParse_setGCS)
$1A71: $1BF3:  
-----          L: 
$1A72: $67 $70 $69 $1F
$1A74: $940C:  F: goto $1BFF (JMP _wlParse_setGPI)
$1A75: $1BFF:  
-----          L: 
$1A76: $67 $6D $64 $1F
$1A78: $940C:  F: goto $1C17 (JMP _wlParse_setGMD)
$1A79: $1C17:  
-----          L: 
$1A7A: $67 $73 $68 $1F
$1A7C: $940C:  F: goto $1A1F (JMP _wlParse_setScheme)
$1A7D: $1A1F:  
-----          L: 
$1A7E: $67 $73 $70 $1F
$1A80: $940C:  F: goto $1AEF (JMP _wlParse_setGSP)
$1A81: $1AEF:  
-----          L: 
$1A82: $67 $6C $62 $1F
$1A84: $940C:  F: goto $1AFB (JMP _wlParse_setGLB)
$1A85: $1AFB:  
-----          L: 
$1A86: $67 $75 $62 $1F
$1A88: $940C:  F: goto $1B07 (JMP _wlParse_setGUB)
$1A89: $1B07:  
-----          L: 
$1A8A: $67 $73 $62 $1F
$1A8C: $940C:  F: goto $1BCF (JMP _wlParse_setGSB)
$1A8D: $1BCF:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1A8E: $73 $74 $70 $1F
$1A90: $940C:  F: goto $1B9F (JMP _wlParse_setSTP)
$1A91: $1B9F:  
-----          L: 
$1A92: $73 $73 $70 $1F
$1A94: $940C:  F: goto $1BAB (JMP _wlParse_setSSP)
$1A95: $1BAB:  
-----          L: 
$1A96: $73 $6C $62 $1F
$1A98: $940C:  F: goto $1BB7 (JMP _wlParse_setSLB)
$1A99: $1BB7:  
-----          L: 
$1A9A: $73 $75 $62 $1F
$1A9C: $940C:  F: goto $1BC3 (JMP _wlParse_setSUB)
$1A9D: $1BC3:  
-----          L: 
-----          L: 
$1A9E: $69 $74 $70 $1F
$1AA0: $940C:  F: goto $1B63 (JMP _wlParse_setITP)
$1AA1: $1B63:  
-----          L: 
$1AA2: $69 $73 $70 $1F
$1AA4: $940C:  F: goto $1B6F (JMP _wlParse_setISP)
$1AA5: $1B6F:  
-----          L: 
$1AA6: $69 $6C $62 $1F
$1AA8: $940C:  F: goto $1B7B (JMP _wlParse_setILB)
$1AA9: $1B7B:  
-----          L: 
$1AAA: $69 $75 $62 $1F
$1AAC: $940C:  F: goto $1B87 (JMP _wlParse_setIUB)
$1AAD: $1B87:  
-----          L: 
-----          L: 
$1AAE: $66 $74 $70 $1F
$1AB0: $940C:  F: goto $1B2B (JMP _wlParse_setFTP)
$1AB1: $1B2B:  
-----          L: 
$1AB2: $66 $73 $70 $1F
$1AB4: $940C:  F: goto $1B39 (JMP _wlParse_setFSP)
$1AB5: $1B39:  
-----          L: 
$1AB6: $66 $6C $62 $1F
$1AB8: $940C:  F: goto $1B47 (JMP _wlParse_setFLB)
$1AB9: $1B47:  
-----          L: 
$1ABA: $66 $75 $62 $1F
$1ABC: $940C:  F: goto $1B55 (JMP _wlParse_setFUB)
$1ABD: $1B55:  
-----          L: 
-----          L: 
$1ABE: $6F $74 $70 $1F
$1AC0: $940C:  F: goto $1AD7 (JMP _wlParse_setOTP)
$1AC1: $1AD7:  
-----          L: 
$1AC2: $6F $73 $70 $1F
$1AC4: $940C:  F: goto $1AE3 (JMP _wlParse_setOSP)
$1AC5: $1AE3:  
-----          L: 
$1AC6: $6F $6C $62 $1F
$1AC8: $940C:  F: goto $1B13 (JMP _wlParse_setOLB)
$1AC9: $1B13:  
-----          L: 
$1ACA: $6F $75 $62 $1F
$1ACC: $940C:  F: goto $1B1F (JMP _wlParse_setOUB)
$1ACD: $1B1F:  
-----          L: 
-----          L: 
$1ACE: $5F $63 $68 $1F
$1AD0: $940C:  F: goto $1BE7 (JMP _wlParse_set_CH)
$1AD1: $1BE7:  
-----          L: 
$1AD2: $5F $69 $6D $1F
$1AD4: $940C:  F: goto $1C0B (JMP _wlParse_set_IM)
$1AD5: $1C0B:  
-----          L: 
$1AD6: $FF $00
-----          V: _wlParse_setOTP
-----          L: 
$1AD7: $DF69:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1AD8: $9300:  F: r16 -> [$0612] (r16 -> Effect_Exit)
$1AD9: $0612:  
-----          L: 
$1ADA: $940E:  F: CALL $795 (_PrintU_string_)
$1ADB: $0795:  
$1ADC: $01 $4F $4B $21 $1F $6F $74 $70 $1F $04 $00 $00
$1AE2: $9508:  F: RET (RET)
-----          V: _wlParse_setOSP
-----          L: 
$1AE3: $DF5D:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1AE4: $9300:  F: r16 -> [$0613] (r16 -> Effect_Exit_Speed)
$1AE5: $0613:  
-----          L: 
$1AE6: $940E:  F: CALL $795 (_PrintU_string_)
$1AE7: $0795:  
$1AE8: $01 $4F $4B $21 $1F $6F $73 $70 $1F $04 $00 $00
$1AEE: $9508:  F: RET (RET)
-----          V: _wlParse_setGSP
-----          L: 
$1AEF: $DF51:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1AF0: $9300:  F: r16 -> [$05FF] (r16 -> Effect_Overall_Speed)
$1AF1: $05FF:  
-----          L: 
$1AF2: $940E:  F: CALL $795 (_PrintU_string_)
$1AF3: $0795:  
$1AF4: $01 $4F $4B $21 $1F $67 $73 $70 $1F $04 $00 $00
$1AFA: $9508:  F: RET (RET)
-----          V: _wlParse_setGLB
-----          L: 
$1AFB: $DF45:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1AFC: $9300:  F: r16 -> [$0601] (r16 -> Effect_Overall_Contrast)
$1AFD: $0601:  
-----          L: 
$1AFE: $940E:  F: CALL $795 (_PrintU_string_)
$1AFF: $0795:  
$1B00: $01 $4F $4B $21 $1F $67 $6C $62 $1F $04 $00 $00
$1B06: $9508:  F: RET (RET)
-----          V: _wlParse_setGUB
-----          L: 
$1B07: $DF39:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B08: $9300:  F: r16 -> [$0600] (r16 -> Effect_Overall_Bright)
$1B09: $0600:  
-----          L: 
$1B0A: $940E:  F: CALL $795 (_PrintU_string_)
$1B0B: $0795:  
$1B0C: $01 $4F $4B $21 $1F $67 $75 $62 $1F $04 $00 $00
$1B12: $9508:  F: RET (RET)
-----          V: _wlParse_setOLB
-----          L: 
$1B13: $DF2D:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B14: $9300:  F: r16 -> [$0615] (r16 -> Effect_Exit_Contrast)
$1B15: $0615:  
-----          L: 
$1B16: $940E:  F: CALL $795 (_PrintU_string_)
$1B17: $0795:  
$1B18: $01 $4F $4B $21 $1F $6F $6C $62 $1F $04 $00 $00
$1B1E: $9508:  F: RET (RET)
-----          V: _wlParse_setOUB
-----          L: 
$1B1F: $DF21:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B20: $9300:  F: r16 -> [$0614] (r16 -> Effect_Exit_Bright)
$1B21: $0614:  
-----          L: 
$1B22: $940E:  F: CALL $795 (_PrintU_string_)
$1B23: $0795:  
$1B24: $01 $4F $4B $21 $1F $6F $75 $62 $1F $04 $00 $00
$1B2A: $9508:  F: RET (RET)
-----          V: _wlParse_setFTP
-----          L: 
$1B2B: $DF15:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B2C: $9300:  F: r16 -> [$060A] (r16 -> Effect_Attend)
$1B2D: $060A:  
$1B2E: $9300:  F: r16 -> [$060E] (r16 -> Effect_CrossAttend)
$1B2F: $060E:  
-----          L: 
$1B30: $940E:  F: CALL $795 (_PrintU_string_)
$1B31: $0795:  
$1B32: $01 $4F $4B $21 $1F $66 $74 $70 $1F $04 $00 $00
$1B38: $9508:  F: RET (RET)
-----          V: _wlParse_setFSP
-----          L: 
$1B39: $DF07:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B3A: $9300:  F: r16 -> [$060B] (r16 -> Effect_Attend_Speed)
$1B3B: $060B:  
$1B3C: $9300:  F: r16 -> [$060F] (r16 -> Effect_CrossAttend_Speed)
$1B3D: $060F:  
-----          L: 
$1B3E: $940E:  F: CALL $795 (_PrintU_string_)
$1B3F: $0795:  
$1B40: $01 $4F $4B $21 $1F $66 $73 $70 $1F $04 $00 $00
$1B46: $9508:  F: RET (RET)
-----          V: _wlParse_setFLB
-----          L: 
$1B47: $DEF9:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B48: $9300:  F: r16 -> [$060D] (r16 -> Effect_Attend_Contrast)
$1B49: $060D:  
$1B4A: $9300:  F: r16 -> [$0611] (r16 -> Effect_CrossAttend_Contrast)
$1B4B: $0611:  
-----          L: 
$1B4C: $940E:  F: CALL $795 (_PrintU_string_)
$1B4D: $0795:  
$1B4E: $01 $4F $4B $21 $1F $66 $6C $62 $1F $04 $00 $00
$1B54: $9508:  F: RET (RET)
-----          V: _wlParse_setFUB
-----          L: 
$1B55: $DEEB:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B56: $9300:  F: r16 -> [$060C] (r16 -> Effect_Attend_Bright)
$1B57: $060C:  
$1B58: $9300:  F: r16 -> [$0610] (r16 -> Effect_CrossAttend_Bright)
$1B59: $0610:  
-----          L: 
$1B5A: $940E:  F: CALL $795 (_PrintU_string_)
$1B5B: $0795:  
$1B5C: $01 $4F $4B $21 $1F $66 $75 $62 $1F $04 $00 $00
$1B62: $9508:  F: RET (RET)
-----          V: _wlParse_setITP
-----          L: 
$1B63: $DEDD:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B64: $9300:  F: r16 -> [$0606] (r16 -> Effect_Entrance)
$1B65: $0606:  
-----          L: 
$1B66: $940E:  F: CALL $795 (_PrintU_string_)
$1B67: $0795:  
$1B68: $01 $4F $4B $21 $1F $69 $74 $70 $1F $04 $00 $00
$1B6E: $9508:  F: RET (RET)
-----          V: _wlParse_setISP
-----          L: 
$1B6F: $DED1:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B70: $9300:  F: r16 -> [$0607] (r16 -> Effect_Entrance_Speed)
$1B71: $0607:  
-----          L: 
$1B72: $940E:  F: CALL $795 (_PrintU_string_)
$1B73: $0795:  
$1B74: $01 $4F $4B $21 $1F $69 $73 $70 $1F $04 $00 $00
$1B7A: $9508:  F: RET (RET)
-----          V: _wlParse_setILB
-----          L: 
$1B7B: $DEC5:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B7C: $9300:  F: r16 -> [$0609] (r16 -> Effect_Entrance_Contrast)
$1B7D: $0609:  
-----          L: 
$1B7E: $940E:  F: CALL $795 (_PrintU_string_)
$1B7F: $0795:  
$1B80: $01 $4F $4B $21 $1F $69 $6C $62 $1F $04 $00 $00
$1B86: $9508:  F: RET (RET)
-----          V: _wlParse_setIUB
-----          L: 
$1B87: $DEB9:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B88: $9300:  F: r16 -> [$0608] (r16 -> Effect_Entrance_Bright)
$1B89: $0608:  
-----          L: 
$1B8A: $940E:  F: CALL $795 (_PrintU_string_)
$1B8B: $0795:  
$1B8C: $01 $4F $4B $21 $1F $69 $75 $62 $1F $04 $00 $00
$1B92: $9508:  F: RET (RET)
-----          V: _wlParse_setGAC
-----          L: 
$1B93: $DEAD:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1B94: $9300:  F: r16 -> [$0616] (r16 -> Stairs_Number)
$1B95: $0616:  
-----          L: 
$1B96: $940E:  F: CALL $795 (_PrintU_string_)
$1B97: $0795:  
$1B98: $01 $4F $4B $21 $1F $67 $61 $63 $1F $04 $00 $00
$1B9E: $9508:  F: RET (RET)
-----          V: _wlParse_setSTP
-----          L: 
$1B9F: $DEA1:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BA0: $9300:  F: r16 -> [$0602] (r16 -> Effect_Standby)
$1BA1: $0602:  
-----          L: 
$1BA2: $940E:  F: CALL $795 (_PrintU_string_)
$1BA3: $0795:  
$1BA4: $01 $4F $4B $21 $1F $73 $74 $70 $1F $04 $00 $00
$1BAA: $9508:  F: RET (RET)
-----          V: _wlParse_setSSP
-----          L: 
$1BAB: $DE95:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BAC: $9300:  F: r16 -> [$0603] (r16 -> Effect_Standby_Speed)
$1BAD: $0603:  
-----          L: 
$1BAE: $940E:  F: CALL $795 (_PrintU_string_)
$1BAF: $0795:  
$1BB0: $01 $4F $4B $21 $1F $73 $73 $70 $1F $04 $00 $00
$1BB6: $9508:  F: RET (RET)
-----          V: _wlParse_setSLB
-----          L: 
$1BB7: $DE89:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BB8: $9300:  F: r16 -> [$0605] (r16 -> Effect_Standby_Contrast)
$1BB9: $0605:  
-----          L: 
$1BBA: $940E:  F: CALL $795 (_PrintU_string_)
$1BBB: $0795:  
$1BBC: $01 $4F $4B $21 $1F $73 $6C $62 $1F $04 $00 $00
$1BC2: $9508:  F: RET (RET)
-----          V: _wlParse_setSUB
-----          L: 
$1BC3: $DE7D:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BC4: $9300:  F: r16 -> [$0604] (r16 -> Effect_Standby_Bright)
$1BC5: $0604:  
-----          L: 
$1BC6: $940E:  F: CALL $795 (_PrintU_string_)
$1BC7: $0795:  
$1BC8: $01 $4F $4B $21 $1F $73 $75 $62 $1F $04 $00 $00
$1BCE: $9508:  F: RET (RET)
-----          V: _wlParse_setGSB
-----          L: 
$1BCF: $DE71:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BD0: $9300:  F: r16 -> [$0618] (r16 -> Effect_Start_End_bright)
$1BD1: $0618:  
-----          L: 
$1BD2: $940E:  F: CALL $795 (_PrintU_string_)
$1BD3: $0795:  
$1BD4: $01 $4F $4B $21 $1F $67 $73 $62 $1F $04 $00 $00
$1BDA: $9508:  F: RET (RET)
-----          V: _wlParse_setGLT
-----          L: 
$1BDB: $DE65:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BDC: $9300:  F: r16 -> [$061E] (r16 -> Global_lightLevelThreshold)
$1BDD: $061E:  
-----          L: 
$1BDE: $940E:  F: CALL $795 (_PrintU_string_)
$1BDF: $0795:  
$1BE0: $01 $4F $4B $21 $1F $67 $6C $74 $1F $04 $00 $00
$1BE6: $9508:  F: RET (RET)
-----          V: _wlParse_set_CH
-----          L: 
$1BE7: $DE59:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BE8: $9300:  F: r16 -> [$05F5] (r16 -> Stair_On)
$1BE9: $05F5:  
-----          L: 
$1BEA: $940E:  F: CALL $795 (_PrintU_string_)
$1BEB: $0795:  
$1BEC: $01 $4F $4B $21 $1F $5F $63 $68 $1F $04 $00 $00
$1BF2: $9508:  F: RET (RET)
-----          V: _wlParse_setGCS
-----          L: 
$1BF3: $DE4D:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1BF4: $9300:  F: r16 -> [$0619] (r16 -> Effect_Work_Timer)
$1BF5: $0619:  
-----          L: 
$1BF6: $940E:  F: CALL $795 (_PrintU_string_)
$1BF7: $0795:  
$1BF8: $01 $4F $4B $21 $1F $67 $63 $73 $1F $04 $00 $00
$1BFE: $9508:  F: RET (RET)
-----          V: _wlParse_setGPI
-----          L: 
$1BFF: $DE41:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1C00: $9300:  F: r16 -> [$061F] (r16 -> Global_periodImitation)
$1C01: $061F:  
-----          L: 
$1C02: $940E:  F: CALL $795 (_PrintU_string_)
$1C03: $0795:  
$1C04: $01 $4F $4B $21 $1F $67 $70 $69 $1F $04 $00 $00
$1C0A: $9508:  F: RET (RET)
-----          V: _wlParse_set_IM
-----          L: 
$1C0B: $DE35:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1C0C: $9300:  F: r16 -> [$0621] (r16 -> Service_imitationMode)
$1C0D: $0621:  
-----          L: 
$1C0E: $940E:  F: CALL $795 (_PrintU_string_)
$1C0F: $0795:  
$1C10: $01 $4F $4B $21 $1F $5F $69 $6D $1F $04 $00 $00
$1C16: $9508:  F: RET (RET)
-----          V: _wlParse_setGMD
-----          L: 
$1C17: $DE29:  F: rcall $1A41 (_wlParse_parseDecNumber)
-----          L: 
$1C18: $9300:  F: r16 -> [$0620] (r16 -> Global_mode)
$1C19: $0620:  
-----          L: 
$1C1A: $940E:  F: CALL $795 (_PrintU_string_)
$1C1B: $0795:  
$1C1C: $01 $4F $4B $21 $1F $67 $6D $64 $1F $04 $00 $00
$1C22: $9508:  F: RET (RET)
-----          V: _wlParse_typeER
$1C23: $9508:  F: RET (RET)
-----          V: _wlParse_typeOK
$1C24: $9508:  F: RET (RET)
-----          V: _wlParse_getKeyVector_
-----          L: 
               F: Y -> wlParse_tempY  ...
$1C25: $93C0:     r28 -> [$06A0]
$1C26: $06A0:  
$1C27: $93D0:     r29 -> [$06A1]
$1C28: $06A1:  
-----          L: 
-----          L: 
               F: wlParse_tempY -> Y  ...
$1C29: $91C0:     [$06A0] -> r28
$1C2A: $06A0:  
$1C2B: $91D0:     [$06A1] -> r29
$1C2C: $06A1:  
-----          L: 
-----          L: 
$1C2D: $9115:  F: LPM[Z++] -> r17 (LPM[Z++] -> r17)
               C: if (r17 -= END_KEYS) then goto $1C33 ...
$1C2E: $3F1F:     r17 = $FF
$1C2F: $F419:     if (Z=0) then goto $1C33
               F: $FFFF -> Z  ...
$1C30: $EFEF:     $FF -> r30
$1C31: $EFFF:     $FF -> r31
$1C32: $9508:  F: RET (RET)
-----          L: 
               C: if ([Y++] -= r17) then goto $1C3C ...
$1C33: $9109:     [Y++] -> r16
$1C34: $1701:     r16 = r17
$1C35: $F431:     if (Z=0) then goto $1C3C
-----          L: 
$1C36: $D036:  F: rcall $1C6D (_wlParse_findNoZerro)
-----          L: 
               C: if (r17 -= US) then goto $1C2D ...
$1C37: $311F:     r17 = $1F
$1C38: $F7A1:     if (Z=0) then goto $1C2D
               F: Z >>  ...
$1C39: $95F6:     r31 >>
$1C3A: $95E7:     > r30 >>
$1C3B: $9508:  F: RET (RET)
-----          L: 
-----          L: 
               C: if (r17 -= US) then goto $1C3F ...
$1C3C: $311F:     r17 = $1F
$1C3D: $F009:     if (Z=1) then goto $1C3F
$1C3E: $D034:  F: rcall $1C73 (_wlParse_findEndString)
-----          L: 
$1C3F: $D02D:  F: rcall $1C6D (_wlParse_findNoZerro)
-----          L: 
$1C40: $9634:  F: r30,r31 + $04 (Z + 4)
$1C41: $CFE7:  J: goto $1C29 (RJMP)
-----          V: _wlParse_nextCRC
$1C42: $932F:  F: r18 -> (r18 ->)
$1C43: $930F:  F: r16 -> (r16 ->)
$1C44: $9120:  F: [$06A2] -> r18 (wlParse_CRC -> r18)
$1C45: $06A2:  
$1C46: $2702:  F: r16 ^ r18 (r16 ^ r18)
$1C47: $2722:  F: ^ r18 (r18)
$1C48: $FF00:  C: if (r16.0=1 then SKIP (r16.0 = 1)
$1C49: $C002:  C: goto $1C4C (RJMP) (r16.0 = 1)
               F: r18^$5E  ...
$1C4A: $E51E:     $5E -> r17
$1C4B: $2721:     r18 ^ r17
$1C4C: $FF01:  C: if (r16.1=1 then SKIP (r16.1 = 1)
$1C4D: $C002:  C: goto $1C50 (RJMP) (r16.1 = 1)
               F: r18^$BC  ...
$1C4E: $EB1C:     $BC -> r17
$1C4F: $2721:     r18 ^ r17
$1C50: $FF02:  C: if (r16.2=1 then SKIP (r16.2 = 1)
$1C51: $C002:  C: goto $1C54 (RJMP) (r16.2 = 1)
               F: r18^$61  ...
$1C52: $E611:     $61 -> r17
$1C53: $2721:     r18 ^ r17
$1C54: $FF03:  C: if (r16.3=1 then SKIP (r16.3 = 1)
$1C55: $C002:  C: goto $1C58 (RJMP) (r16.3 = 1)
               F: r18^$C2  ...
$1C56: $EC12:     $C2 -> r17
$1C57: $2721:     r18 ^ r17
$1C58: $FF04:  C: if (r16.4=1 then SKIP (r16.4 = 1)
$1C59: $C002:  C: goto $1C5C (RJMP) (r16.4 = 1)
               F: r18^$9D  ...
$1C5A: $E91D:     $9D -> r17
$1C5B: $2721:     r18 ^ r17
$1C5C: $FF05:  C: if (r16.5=1 then SKIP (r16.5 = 1)
$1C5D: $C002:  C: goto $1C60 (RJMP) (r16.5 = 1)
               F: r18^$23  ...
$1C5E: $E213:     $23 -> r17
$1C5F: $2721:     r18 ^ r17
$1C60: $FF06:  C: if (r16.6=1 then SKIP (r16.6 = 1)
$1C61: $C002:  C: goto $1C64 (RJMP) (r16.6 = 1)
               F: r18^$46  ...
$1C62: $E416:     $46 -> r17
$1C63: $2721:     r18 ^ r17
$1C64: $FF07:  C: if (r16.7=1 then SKIP (r16.7 = 1)
$1C65: $C002:  C: goto $1C68 (RJMP) (r16.7 = 1)
               F: r18^$8C  ...
$1C66: $E81C:     $8C -> r17
$1C67: $2721:     r18 ^ r17
$1C68: $9320:  F: r18 -> [$06A2] (r18 -> wlParse_CRC)
$1C69: $06A2:  
$1C6A: $910F:  F: -> r16 (-> r16)
$1C6B: $912F:  F: -> r18 (-> r18)
$1C6C: $9508:  F: RET (ret)
-----          V: _wlParse_findNoZerro
-----          L: 
$1C6D: $9104:  F: LPM[Z] -> r16 (LPM[Z] -> r16)
               C: if (r16 -= 0) then goto $1C71 ...
$1C6E: $3000:     r16 = $00
$1C6F: $F009:     if (Z=1) then goto $1C71
$1C70: $9508:  F: RET (RET)
$1C71: $9631:  F: r30,r31 + $01 (Z + 1)
$1C72: $CFFA:  J: goto $1C6D (RJMP)
-----          V: _wlParse_findEndString
-----          L: 
$1C73: $9105:  F: LPM[Z++] -> r16 (LPM[Z++] -> r16)
               C: if (r16 -= US) then goto $1C73 ...
$1C74: $310F:     r16 = $1F
$1C75: $F7E9:     if (Z=0) then goto $1C73
$1C76: $9508:  F: RET (RET)
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          V: Reset
$1C77: $EF0F:  S: $FF -> r16 ($FF->r16)
$1C78: $BF0D:  S: r16 -> p$3D (r16->p61)
$1C79: $E008:  S: $08 -> r16 ($08->r16)
$1C7A: $BF0E:  S: r16 -> p$3E (r16->p62)
-----          L: 
               F: 100-1 -> r16:Word  ...
$1C7B: $E603:     $63 -> r16
$1C7C: $E010:     $00 -> r17
$1C7D: $940E:  F: CALL $34 (_Wait_ms_)
$1C7E: $0034:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: SRAM_Org -> Z  ...
$1C7F: $E0E0:     $00 -> r30
$1C80: $E0F1:     $01 -> r31
$1C81: $E000:  F: $00 -> r16 (0 -> r16)
-----          L: 
$1C82: $9301:  F: r16 -> [Z++] (r16 -> [Z++])
               C: if (Z -= SRAM_Size) then goto $1C82 ...
$1C83: $30E0:     r30 = $00
$1C84: $E019:     $09 -> r17
$1C85: $07F1:     r31 = r17=
$1C86: $F7D9:     if (Z=0) then goto $1C82
-----          L: 
               F: 30 -> Z  ...
$1C87: $E1EE:     $1E -> r30
$1C88: $E0F0:     $00 -> r31
-----          L: 
$1C89: $95EA:  F: r30 -- (ZL --)
$1C8A: $8300:  F: r16 -> [Z] (r16 -> [Z])
$1C8B: $F7E9:  C: if (Z=0) then goto $1C89 (-=)
-----          L: 
-----          L: 
$1C8C: $2733:  F: ^ r19 (^Flags)
-----          L: 
-----          L: 
$1C8D: $940E:  F: CALL $55 (_PWM_Init)
$1C8E: $0055:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1C8F: $940E:  F: CALL $B4 (_EX_Key_Init)
$1C90: $00B4:  
-----          L: 
$1C91: $940E:  F: CALL $185 (_UART_Init)
$1C92: $0185:  
-----          L: 
$1C93: $940E:  F: CALL $24A (_STimer_Init)
$1C94: $024A:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1C95: $940E:  F: CALL $4AE (_ssd1306_Init)
$1C96: $04AE:  
-----          L: 
-----          L: 
-----          L: 
$1C97: $940E:  F: CALL $8D8 (_Logic_Init)
$1C98: $08D8:  
-----          L: 
$1C99: $940E:  F: CALL $8DC (_Stairs_Init)
$1C9A: $08DC:  
-----          L: 
-----          L: 
-----          L: 
-----          L: 
-----          L: 
$1C9B: $940E:  F: CALL $13CE (_Init_EDisp)
$1C9C: $13CE:  
-----          L: 
-----          L: 
-----          L: 
$1C9D: $9478:  F: 1 -> I (1 -> I)
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\Programm.alg    ***********
-----          L: 
-----          L: 
-----          L: 
$1C9E: $940E:  F: CALL $287 (_ssd_Clr)
$1C9F: $0287:  
-----          L: 
$1CA0: $E00A:  F: $0A -> r16 (10 -> r16)
$1CA1: $E012:  F: $02 -> r17 (2 -> r17)
$1CA2: $940E:  F: CALL $26F (_ssd_Pos_)
$1CA3: $026F:  
$1CA4: $940E:  F: CALL $725 (_print_string_)
$1CA5: $0725:  
$1CA6: $08 $09 $57 $61 $6C $6B $69 $6E $67 $01 $00 $00
$1CAC: $E00A:  F: $0A -> r16 (10 -> r16)
$1CAD: $E014:  F: $04 -> r17 (4 -> r17)
$1CAE: $940E:  F: CALL $26F (_ssd_Pos_)
$1CAF: $026F:  
$1CB0: $940E:  F: CALL $725 (_print_string_)
$1CB1: $0725:  
$1CB2: $08 $09 $4C $69 $67 $68 $74 $01 $00 $00
$1CB7: $E50A:  F: $5A -> r16 (90 -> r16)
$1CB8: $E010:  F: $00 -> r17 (0 -> r17)
$1CB9: $940E:  F: CALL $26F (_ssd_Pos_)
$1CBA: $026F:  
$1CBB: $940E:  F: CALL $725 (_print_string_)
$1CBC: $0725:  
$1CBD: $06 $05 $53 $4F $49 $20 $54 $45 $43 $48 $01 $00
               F: 3000-1 -> r16:Word  ...
$1CC3: $EB07:     $B7 -> r16
$1CC4: $E01B:     $0B -> r17
$1CC5: $940E:  F: CALL $34 (_Wait_ms_)
$1CC6: $0034:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\Wait.alg    ***********
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\Programm.alg    ***********
-----          L: 
-----          L: 
-----          L: 
               F: EE_Effect_Set_Table -> r16  ...
$1CC7: $E012:     $02 -> r17
$1CC8: $BD11:     r17 -> p$21
$1CC9: $E010:     $00 -> r17
$1CCA: $BD12:     r17 -> p$22
$1CCB: $9AF8:     1 -> p$1F.0
$1CCC: $B500:     p$20 -> r16
               C: if (r16 = 255) then goto $1CD2 ...
$1CCD: $3F0F:     r16 = $FF
$1CCE: $F019:     if (Z=1) then goto $1CD2
-----          L: 
$1CCF: $940E:  F: CALL $945 (_Load_from_EEPROM)
$1CD0: $0945:  
$1CD1: $C002:  J: goto $1CD4 (RJMP)
-----          L: 
$1CD2: $940E:  F: CALL $978 (_Load_from_FLASH)
$1CD3: $0978:  
-----          L: 
-----          L: 
$1CD4: $E008:  F: $08 -> r16 (EXIT -> r16)
$1CD5: $940E:  F: CALL $861 (_Effect_Set_Mode_)
$1CD6: $0861:  
               F: 10 -> Effect_Number  ...
$1CD7: $E00A:     $0A -> r16
$1CD8: $9300:     r16 -> [$05F8]
$1CD9: $05F8:  
-----          L: 
$1CDA: $940E:  F: CALL $1156 (_Menu_Main_Reset)
$1CDB: $1156:  
-----          L: 
               F: 10/STIMER_PERIOD_CALL -> [@STimer_Counter + DO_VISUAL]  ...
$1CDC: $E001:     $01 -> r16
$1CDD: $9300:     r16 -> [$0519]
$1CDE: $0519:  
               F: 10/STIMER_PERIOD_CALL -> [@STimer_Counter_Stop + DO_VISUAL]  ...
$1CDF: $9300:     r16 -> [$051C]
$1CE0: $051C:  
-----          L: 
-----          L: 
-----          L: 
$1CE1: $940E:  F: CALL $795 (_PrintU_string_)
$1CE2: $0795:  
$1CE3: $01 $4F $4B $21 $1F $72 $65 $61 $64 $79 $1F $04 $00 $00
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: NONE -> Menu_actFlag  ...
$1CEA: $EF0F:     $FF -> r16
$1CEB: $9300:     r16 -> [$063B]
$1CEC: $063B:  
-----          L: 
$1CED: $FD30:  C: if (r19.0=0 then SKIP (F_Disp = 1)
$1CEE: $940E:  F: CALL $13A3 (_Round_EDisp)
$1CEF: $13A3:  
-----          L: 
-----          L: 
$1CF0: $FD33:  C: if (r19.3=0 then SKIP (F_Stairs_Vis_ReDraw = 1)
$1CF1: $940E:  F: CALL $8DD (_Stairs_Vis_ReDraw)
$1CF2: $08DD:  
$1CF3: $7F37:  F: r19 & $F7 (0 -> F_Stairs_Vis_ReDraw)
-----          L: 
-----          L: 
$1CF4: $9100:  F: [$063B] -> r16 (Menu_actFlag -> r16)
$1CF5: $063B:  
               C: if (Menu_actFlag = NONE) then goto $1D10 ...
$1CF6: $9100:     [$063B] -> r16
$1CF7: $063B:  
$1CF8: $3F0F:     r16 = $FF
$1CF9: $F0B1:     if (Z=1) then goto $1D10
               C: if (r16 -= MRESET) then goto $1CFF ...
$1CFA: $3F0C:     r16 = $FC
$1CFB: $F419:     if (Z=0) then goto $1CFF
$1CFC: $940E:  F: CALL $1156 (_Menu_Main_Reset)
$1CFD: $1156:  
$1CFE: $C00E:  J: goto $1D0D (RJMP)
-----          L: 
               C: if (r16 -= MSHOW) then goto $1D04 ...
$1CFF: $3F0D:     r16 = $FD
$1D00: $F419:     if (Z=0) then goto $1D04
$1D01: $940E:  F: CALL $117B (_Menu_Main_Show)
$1D02: $117B:  
$1D03: $C009:  J: goto $1D0D (RJMP)
-----          L: 
               C: if (r16 -= MCLICK) then goto $1D09 ...
$1D04: $3F0E:     r16 = $FE
$1D05: $F419:     if (Z=0) then goto $1D09
$1D06: $940E:  F: CALL $10F0 (_Menu_Main_Click)
$1D07: $10F0:  
$1D08: $C004:  J: goto $1D0D (RJMP)
-----          L: 
*********   D:\Projects\WalkingLight\Firmwares\mcu\Menu.alg    ***********
-----          L: 
$1D09: $9300:  F: r16 -> [$0626] (r16 -> Menu_Action)
$1D0A: $0626:  
$1D0B: $940E:  F: CALL $A52 (_Menu_Parse)
$1D0C: $0A52:  
*********   D:\Projects\WalkingLight\Firmwares\mcu\main.alp    ***********
-----          L: 
               F: NONE -> Menu_actFlag  ...
$1D0D: $EF0F:     $FF -> r16
$1D0E: $9300:     r16 -> [$063B]
$1D0F: $063B:  
-----          L: 
-----          L: 
-----          L: 
$1D10: $CFDC:  J: goto $1CED (RJMP)
